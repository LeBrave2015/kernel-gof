(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    314487,       6145]
NotebookOptionsPosition[    309587,       5974]
NotebookOutlinePosition[    309952,       5990]
CellTagsIndexPosition[    309909,       5987]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Slope of FSSD", "Section",
 CellChangeTimes->{{3.7012499217748747`*^9, 3.7012499288245792`*^9}}],

Cell["Will assume Gaussian p,q and a Gaussian kernel.", "Text",
 CellChangeTimes->{{3.701249929644205*^9, 3.70124996129904*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Mu]", "p"], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Sigma]", "p"], "=", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logp", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["\[Mu]", "p"]}], ")"}], "^", "2"}]}], "/", 
   RowBox[{"(", 
    RowBox[{"2", "*", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "p"], "2"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ker", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "s"}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dkx", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"ker", "[", 
     RowBox[{"x", ",", "y", ",", "s"}], "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dky", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"ker", "[", 
     RowBox[{"x", ",", "y", ",", "s"}], "]"}], ",", "y"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dkxy", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Dkx", "[", 
     RowBox[{"x", ",", "y", ",", "s"}], "]"}], ",", "y"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.701250983363731*^9, 3.701251036012233*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.701251036916339*^9, 3.701253004053679*^9, 
  3.701268584117453*^9, 3.7013324758662643`*^9, 3.7016230781800127`*^9, 
  3.701667702140491*^9, 3.7016688864064283`*^9, 3.701776554667637*^9, 
  3.70202060580124*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.701251036916339*^9, 3.701253004053679*^9, 
  3.701268584117453*^9, 3.7013324758662643`*^9, 3.7016230781800127`*^9, 
  3.701667702140491*^9, 3.7016688864064283`*^9, 3.701776554667637*^9, 
  3.702020605802655*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xi", "[", 
   RowBox[{"x_", ",", "v_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"logp", "'"}], "[", "x", "]"}], "*", 
    RowBox[{"ker", "[", 
     RowBox[{"x", ",", "v", ",", 
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}]}], "+", 
   RowBox[{"Dkx", "[", 
    RowBox[{"x", ",", "v", ",", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.701250136920866*^9, 3.7012502087968273`*^9}, {
  3.70125033528378*^9, 3.701250379027025*^9}, {3.701250615030216*^9, 
  3.701250650628673*^9}, {3.701250744740963*^9, 3.70125075805263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"xi", "[", 
   RowBox[{"x", ",", "v"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.701250733911092*^9, 3.701250736139641*^9}, {
  3.702037442608626*^9, 3.702037444256*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"v", "-", "x"}], ")"}], "2"], 
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "v"}], "+", "x", "+", 
      RowBox[{"x", " ", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]}], ")"}]}], 
   SubsuperscriptBox["\[Sigma]", "k", "2"]]}]], "Output",
 CellChangeTimes->{{3.701250736386467*^9, 3.701250760762494*^9}, 
   3.701251040707203*^9, 3.7012530044779797`*^9, 3.701268584411422*^9, 
   3.701332475931341*^9, 3.701623079680254*^9, 3.701667703764449*^9, 
   3.701668886829891*^9, 3.70177655517789*^9, 3.702020606000915*^9, 
   3.702037444587626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exi", "=", 
  RowBox[{"Expectation", "[", 
   RowBox[{
    RowBox[{"xi", "[", 
     RowBox[{"x", ",", "v"}], "]"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       SubscriptBox["\[Mu]", "q"], ",", 
       SubscriptBox["\[Sigma]", "q"]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7012502287456503`*^9, 3.701250264458084*^9}, {
  3.701250355770729*^9, 3.701250385006822*^9}, {3.701250815227276*^9, 
  3.701250816126905*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"v", "-", 
          SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Mu]", "q"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}]}], "+", 
      RowBox[{"v", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], ")"}]}], 
   RowBox[{
    SqrtBox[
     RowBox[{
      FractionBox["1", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]], "+", 
      FractionBox["1", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]]}]], " ", 
    SubscriptBox["\[Sigma]", "q"], " ", 
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.701250358019294*^9, 3.701250391613625*^9}, 
   3.701250599859619*^9, 3.7012506586742973`*^9, 3.701250795289242*^9, 
   3.701250848268371*^9, 3.7012530332948217`*^9, 3.701268613116197*^9, 
   3.701332508086423*^9, 3.7016231136837387`*^9, 3.7016677327141943`*^9, 
   3.701668915831636*^9, 3.7017765861158447`*^9, 3.702020633617365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"exi", "/.", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Mu]", "q"], "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012518990647593`*^9, 3.7012519212762938`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["v", "2"], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]}]], " ", "v", 
    " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}], 
   RowBox[{
    SqrtBox[
     RowBox[{
      FractionBox["1", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]], "+", 
      FractionBox["1", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]]}]], " ", 
    SubscriptBox["\[Sigma]", "q"], " ", 
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.701251909335259*^9, 3.701251921554184*^9}, 
   3.701253033865658*^9, 3.7012686133570337`*^9, 3.7013325081945343`*^9, 
   3.701623113931172*^9, 3.70166773477026*^9, 3.7016689163353033`*^9, 
   3.70177658638056*^9, 3.702020633983858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"exi", "/.", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.701251928909128*^9, 3.70125193941336*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"v", "-", 
          SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}]}]]}]], " ", 
    SubscriptBox["\[Mu]", "q"]}], 
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox["1", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]]}]]]}]], "Output",
 CellChangeTimes->{3.701251939825399*^9, 3.7012530339916973`*^9, 
  3.7012686134621687`*^9, 3.701332508253572*^9, 3.701623114248168*^9, 
  3.7016677354531803`*^9, 3.701668916488155*^9, 3.701776586479033*^9, 
  3.702020634083729*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fssd2", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"exi", "^", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.701250411123252*^9, {3.701250602704472*^9, 3.701250624241933*^9}, {
   3.701250820978918*^9, 3.701250830976215*^9}, {3.7012508637393103`*^9, 
   3.701250866438568*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"v", "-", 
         SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SubsuperscriptBox["\[Sigma]", "k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Mu]", "q"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}]}], "+", 
      RowBox[{"v", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], ")"}], "2"]}], 
  
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
     SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.7012506031104813`*^9, 3.701250624450021*^9}, {
   3.7012508485451393`*^9, 3.701250866712329*^9}, 3.701253034107723*^9, 
   3.7012686135630913`*^9, 3.701332508326911*^9, 3.7016231145828733`*^9, 
   3.701667736144586*^9, 3.701668916647789*^9, 3.701776586626997*^9, 
   3.702020634196918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exi2", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "k"], ">", "0"}], ",", 
    RowBox[{"Expectation", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xi", "[", 
        RowBox[{"x", ",", "v"}], "]"}], "^", "2"}], ",", 
      RowBox[{"x", "\[Distributed]", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         SubscriptBox["\[Mu]", "p"], ",", 
         SubscriptBox["\[Sigma]", "p"]}], "]"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7012509186423893`*^9, 3.701250954225236*^9}, {
  3.701251065575253*^9, 3.701251069636429*^9}, {3.7020222773467216`*^9, 
  3.7020222840363617`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}]}], 
  RowBox[{
   SubscriptBox["\[Sigma]", "k"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.7012509223305073`*^9, 3.701250968100257*^9, 
  3.70125109702708*^9, 3.701253039092731*^9, 3.7012686376187763`*^9, 
  3.701332513593992*^9, 3.701623120477316*^9, 3.701667741610804*^9, 
  3.701668921366499*^9, 3.701776591476425*^9, 3.7020206391583977`*^9, 
  3.702022287306308*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vxip", " ", "=", " ", 
  RowBox[{"Simplify", "[", "exi2", "]"}]}]], "Input",
 CellChangeTimes->{{3.7012511294791613`*^9, 3.701251161063117*^9}, 
   3.701251207822625*^9, 3.7012522062477417`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}]}], 
  RowBox[{
   SubscriptBox["\[Sigma]", "k"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{{3.701251138393751*^9, 3.701251146341926*^9}, 
   3.701251201553646*^9, {3.701252207192809*^9, 3.70125222011528*^9}, 
   3.701253039426836*^9, 3.7012686378713913`*^9, 3.7013325136904287`*^9, 
   3.701334199203224*^9, 3.7013343598236313`*^9, 3.701334416547186*^9, 
   3.7016231208084097`*^9, 3.701667742635179*^9, 3.701668921674931*^9, 
   3.701776591658266*^9, 3.702020639381366*^9, 3.70202229776851*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$vxip", "[", 
   RowBox[{"v1_", ",", "sq1_", ",", "sk1_"}], "]"}], ":=", 
  RowBox[{"vxip", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "\[Rule]", "v1"}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "q"], "\[Rule]", 
      RowBox[{"Sqrt", "[", "sq1", "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "k"], "\[Rule]", 
      RowBox[{"Sqrt", "[", "sk1", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.7019397169974117`*^9, 3.701939786870491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2xi", "=", 
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sigma]", "k"], ">", "0"}], ",", 
     RowBox[{"exi", "^", "2"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.701252282210189*^9, 3.701252286421579*^9}, {
  3.701664015972657*^9, 3.701664019607658*^9}, {3.7020223099569483`*^9, 
  3.702022315344589*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"v", "-", 
         SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SubsuperscriptBox["\[Sigma]", "k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Mu]", "q"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}]}], "+", 
      RowBox[{"v", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], ")"}], "2"]}], 
  
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
     SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{
  3.701252286737441*^9, 3.701253039436907*^9, 3.701268637881241*^9, 
   3.701332513735392*^9, 3.7013341914258947`*^9, 3.701334357430331*^9, 
   3.701334414639728*^9, 3.7016231211298857`*^9, 3.701664020069398*^9, 
   3.701667743081868*^9, 3.7016689218241158`*^9, 3.701776591739065*^9, 
   3.702020639490678*^9, {3.702022304995039*^9, 3.7020223157028847`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope$fssd", " ", "=", " ", 
  RowBox[{"(", 
   RowBox[{"e2xi", "/", "vxip"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.701251240904748*^9, 3.701251242183652*^9}, {
   3.70125133367083*^9, 3.701251349682724*^9}, {3.701251475244825*^9, 
   3.701251478293509*^9}, {3.7012522927472687`*^9, 3.701252293609235*^9}, {
   3.701267210899046*^9, 3.701267217971405*^9}, {3.701334215804434*^9, 
   3.701334252054089*^9}, {3.701334288766481*^9, 3.701334352816421*^9}, 
   3.7013344094775887`*^9, {3.70133445365455*^9, 3.701334474613871*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"v", "-", 
         SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SubsuperscriptBox["\[Sigma]", "k", "3"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Mu]", "q"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}]}], "+", 
      RowBox[{"v", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], ")"}], "2"]}], 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{
  3.7012513500178022`*^9, {3.701251470893055*^9, 3.7012514787160587`*^9}, {
   3.7012522210844107`*^9, 3.7012522238943357`*^9}, 3.701252294523272*^9, 
   3.7012530397768917`*^9, 3.701267218549652*^9, 3.701268638076565*^9, 
   3.701332513973674*^9, {3.701334180777628*^9, 3.701334203153783*^9}, {
   3.701334310092787*^9, 3.7013343176450853`*^9}, {3.7013343534509573`*^9, 
   3.701334363171192*^9}, {3.701334395261181*^9, 3.701334411551011*^9}, {
   3.701334460389195*^9, 3.7013344749611073`*^9}, 3.701623121332877*^9, 
   3.7016677432366247`*^9, 3.7016689219611797`*^9, 3.701776461746052*^9, 
   3.701776591836484*^9, 3.702020639577477*^9, 3.702022318643577*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd", "[", 
   RowBox[{"v1_", ",", "mq1_", ",", "sq1_", ",", "sk1_"}], "]"}], ":=", 
  RowBox[{"slope$fssd", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"v", "\[Rule]", "v1"}], ",", 
     RowBox[{
      SubscriptBox["\[Mu]", "q"], "\[Rule]", "mq1"}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "q"], "\[Rule]", 
      RowBox[{"Sqrt", "[", "sq1", "]"}]}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "k"], "\[Rule]", 
      RowBox[{"Sqrt", "[", "sk1", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.701334478805183*^9, 3.7013345263379717`*^9}, {
  3.7013431368314867`*^9, 3.701343142746623*^9}, {3.7013431807398033`*^9, 
  3.701343211646037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd", "[", 
   RowBox[{"v", ",", 
    SubscriptBox["\[Mu]", "q"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}], " ", "//", " ", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7013345138681087`*^9, 3.701334558487569*^9}, {
  3.701334611750679*^9, 3.70133461438769*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"v", "-", 
         SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubsuperscriptBox["\[Sigma]", "k", "2"], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Mu]", "q"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}]}], "+", 
      RowBox[{"v", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], ")"}], "2"]}], 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{
  3.701334558991613*^9, 3.7013346149542713`*^9, 3.701343145547616*^9, {
   3.701343191718563*^9, 3.701343216909595*^9}, 3.701623121820388*^9, 
   3.701667743622066*^9, 3.701668922354046*^9, 3.7017765921873827`*^9, 
   3.702020639883102*^9, 3.702022324298834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$slope$fssd", "[", 
  RowBox[{"v", ",", "0", ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "q"], "2"], ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7013349829151783`*^9, 3.7013350032827997`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]], "-", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SuperscriptBox["v", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubsuperscriptBox["\[Sigma]", "k", "2"], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{
  3.701335004660293*^9, 3.701343148751587*^9, {3.701343194736065*^9, 
   3.701343220241393*^9}, 3.70162312199264*^9, 3.701667743769121*^9, 
   3.701668922489554*^9, 3.701776592273221*^9, 3.702020639970142*^9, 
   3.702022327525666*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$slope$fssd", "[", 
  RowBox[{"v", ",", 
   SubscriptBox["\[Mu]", "q"], ",", "1", ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.701335020857169*^9, 3.701335026419756*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"v", "-", 
          SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
       RowBox[{"1", "+", 
        SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}], "+", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}]], " ", 
   SubsuperscriptBox["\[Mu]", "q", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubsuperscriptBox["\[Sigma]", "k", "2"], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.701335026986019*^9, 3.70134315969882*^9, {3.7013431995258923`*^9, 
   3.701343224260829*^9}, 3.7016231222233887`*^9, 3.7016677441414537`*^9, 
   3.70166892274422*^9, 3.7017765923534927`*^9, 3.7020206400570707`*^9, 
   3.702022329606958*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.701335011879348*^9, 3.7013350128697233`*^9}}],

Cell["Ratio of two Gaussian densities\[LineSeparator]", "Text",
 CellChangeTimes->{{3.7012547597167587`*^9, 3.701254766053817*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"x_", ",", "mr_", ",", "sr_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "mr"}], ")"}], "^", "2"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "sr"}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "[", 
   RowBox[{"x_", ",", "ms_", ",", "ss_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "ms"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "ss"}], ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.701254773653605*^9, {3.701254832878454*^9, 3.701254900677499*^9}, {
   3.701256267583651*^9, 3.7012562697240353`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"r", "[", 
   RowBox[{"x", ",", "0", ",", "sr"}], "]"}], "/", 
  RowBox[{"s", "[", 
   RowBox[{"x", ",", "0", ",", " ", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701256278012884*^9, 3.7012562803483963`*^9}, {
  3.701257010943334*^9, 3.701257017852482*^9}}],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "-", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"2", " ", "sr"}]]}]]], "Output",
 CellChangeTimes->{3.7012553461884003`*^9, 3.7012562811137257`*^9, 
  3.701257018065074*^9, 3.7012686394616737`*^9, 3.701332515054233*^9, 
  3.7016231237492447`*^9, 3.701667746410955*^9, 3.7016689237210484`*^9, 
  3.7017765930137787`*^9, 3.702020640617527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"x", ",", "0", ",", "sr"}], "]"}], "/", 
      RowBox[{"s", "[", 
       RowBox[{"x", ",", "0", ",", " ", "1"}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "10"}], ",", " ", "10"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sr", ",", " ", "0.1"}], "}"}], ",", " ", "0.1", ",", " ", "5", 
     ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7012548846429033`*^9, 3.701254997701292*^9}, {
   3.701255037651504*^9, 3.701255116537476*^9}, {3.701255156862811*^9, 
   3.701255179761894*^9}, {3.7012552301371593`*^9, 3.701255279135871*^9}, 
   3.701255376424*^9, {3.701256287274576*^9, 3.701256292273478*^9}, 
   3.7012563514491673`*^9, {3.70125639244807*^9, 3.701256406436051*^9}, {
   3.701257004490926*^9, 3.701257033827482*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sr$$ = 0.1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`sr$$], 0.1}, 0.1, 5, 0.1}}, Typeset`size$$ = {
    450., {137., 146.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sr$23226$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sr$$ = 0.1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sr$$, $CellContext`sr$23226$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`r[$CellContext`x, 
          0, $CellContext`sr$$]/$CellContext`s[$CellContext`x, 0, 
         1], {$CellContext`x, -10, 10}], 
      "Specifications" :> {{{$CellContext`sr$$, 0.1}, 0.1, 5, 0.1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{507., {188., 196.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.701255097501267*^9, 3.701255116766489*^9}, {
   3.701255159459414*^9, 3.701255180194664*^9}, {3.70125526012071*^9, 
   3.701255279656746*^9}, 3.701255376841769*^9, 3.701256292710338*^9, 
   3.701256352002005*^9, {3.701256395684843*^9, 3.7012564071851387`*^9}, {
   3.701257025691559*^9, 3.70125703413201*^9}, 3.701268639590938*^9, 
   3.701332515168076*^9, 3.701623124179793*^9, 3.7016677471880207`*^9, 
   3.7016689239080067`*^9, 3.701776593113269*^9, 3.702020640770668*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zero-mean Gaussian case", "Section",
 CellChangeTimes->{{3.701772660305811*^9, 3.7017726659680357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$mq0", "[", 
   RowBox[{"v1_", ",", "sq1_", ",", "sk1_"}], "]"}], ":=", 
  RowBox[{"f$slope$fssd", "[", 
   RowBox[{"v1", ",", "0", ",", "sq1", ",", "sk1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7017726713474503`*^9, 3.7017726804432993`*^9}, {
  3.701772712905498*^9, 3.701772756205001*^9}, {3.7017728129684353`*^9, 
  3.701772856903963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$mq0", "[", 
   RowBox[{"v", ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.701772758080846*^9, 3.701772773192453*^9}, {
   3.70177290282999*^9, 3.7017729031421213`*^9}, {3.701773037786838*^9, 
   3.701773040974334*^9}, {3.701944455136115*^9, 3.701944456659482*^9}, 
   3.701945430110571*^9, {3.701945525567436*^9, 3.7019455270053*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     SuperscriptBox["v", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", "+", 
         SubsuperscriptBox["\[Sigma]", "k", "2"]}]], "-", 
       FractionBox["1", 
        RowBox[{
         SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}], ")"}]}]], " ", 
   SuperscriptBox["v", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubsuperscriptBox["\[Sigma]", "k", "2"], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{{3.701772773466653*^9, 3.701772781777713*^9}, 
   3.701772872042478*^9, 3.701772919012066*^9, 3.7017730412999268`*^9, 
   3.701776283294189*^9, 3.701776593341057*^9, 3.70194445705058*^9, 
   3.7019454310485086`*^9, 3.70194552746058*^9, 3.70202064146462*^9, 
   3.702022340103922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$mq0", "[", 
   RowBox[{
    SubscriptBox["\[Sigma]", "q"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7019451687115793`*^9, 3.701945201271058*^9}, {
  3.701945324970756*^9, 3.701945355134058*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], "+", 
     FractionBox[
      SubsuperscriptBox["\[Sigma]", "q", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}], 
  RowBox[{"8", " ", 
   SqrtBox[
    SubsuperscriptBox["\[Sigma]", "q", "2"]], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{"5", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
     RowBox[{"5", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "q", "6"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.7019451595842447`*^9, 3.70194519003421*^9}, {
   3.701945334823897*^9, 3.701945355483345*^9}, 3.702020641551734*^9, 
   3.702022341471362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$mq0", "[", 
   RowBox[{"v", ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", "1"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{
  3.701772985685491*^9, {3.701773048299987*^9, 3.701773140326913*^9}, {
   3.701773179140724*^9, 3.701773192116131*^9}, {3.701773223503751*^9, 
   3.701773225516296*^9}, {3.7017733457311087`*^9, 3.701773360068307*^9}, {
   3.7017733921445017`*^9, 3.701773409306314*^9}, {3.701780558842121*^9, 
   3.701780560166984*^9}, 3.701780694943495*^9, 3.701780855773*^9, 
   3.7017812971837597`*^9, {3.701781331259206*^9, 3.701781369133039*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"9", " ", 
   SqrtBox["3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     SuperscriptBox["v", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["3", 
        RowBox[{"1", "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}], ")"}]}]], " ", 
   SuperscriptBox["v", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"12", "+", 
     SuperscriptBox["v", "2"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{{3.701772981344631*^9, 3.701772994182558*^9}, {
   3.701773045929164*^9, 3.701773057687848*^9}, {3.7017730906832323`*^9, 
   3.701773141342422*^9}, {3.701773184030685*^9, 3.7017731924598513`*^9}, 
   3.7017732258415127`*^9, {3.70177334906082*^9, 3.7017733614514523`*^9}, {
   3.701773393244754*^9, 3.70177341014986*^9}, 3.701776593467976*^9, 
   3.7017800232847633`*^9, 3.701780560720536*^9, 3.701780695408334*^9, 
   3.701781297614175*^9, {3.7017813329381523`*^9, 3.701781369628051*^9}, 
   3.70202064156607*^9, 3.7020223431289673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$mq0", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], "+", "1"}], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{
        SubscriptBox["\[Sigma]", "q"], "<", "1"}], "]"}], 
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "q"], "2"]}], "+", 
     RowBox[{"Boole", "[", 
      RowBox[{
       SubscriptBox["\[Sigma]", "q"], "\[GreaterEqual]", " ", "1"}], 
      "]"}]}]}], " ", "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.701938199852315*^9, 3.701938207026038*^9}, {
  3.701938320451652*^9, 3.7019383329623833`*^9}, {3.701942421853284*^9, 
  3.701942519064191*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"9", " ", 
          SqrtBox["3"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["\[Sigma]", "q"]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}], 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Sigma]", "q"]}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["\[Sigma]", "q"]}], ")"}], "4"]}], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{"13", "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Sigma]", "q"]}], "+", 
            SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]], 
        RowBox[{
         SubscriptBox["\[Sigma]", "q"], "\[GreaterEqual]", "1"}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SubscriptBox["\[Sigma]", "q"]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}], 
            RowBox[{"2", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Sigma]", "q"]}], ")"}], "2"], " ", 
          SqrtBox[
           SubsuperscriptBox["\[Sigma]", "q", "2"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["\[Sigma]", "q"]}], ")"}], "4"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], 
           RowBox[{"5", "/", "2"}]]}], 
         RowBox[{"8", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"6", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
            RowBox[{"2", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "3"]}], "+", 
            RowBox[{"5", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "4"]}], "+", 
            SubsuperscriptBox["\[Sigma]", "q", "6"]}], ")"}]}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.701942437519433*^9, {3.70194246793016*^9, 3.7019425206144257`*^9}, 
   3.7020206424661407`*^9, 3.702022345516013*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"f$slope$fssd$mq0", "[", 
      RowBox[{"v", ",", 
       SuperscriptBox["sq", "2"], ",", 
       SuperscriptBox["sk", "2"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0.01", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"sk", ",", "0.01", ",", "3"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", "0.01", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7019377917925463`*^9, 3.70193786026311*^9}, {
  3.701937917855752*^9, 3.701937947766865*^9}, {3.701939949770832*^9, 
  3.7019399586806087`*^9}, {3.701940449540141*^9, 3.701940453587422*^9}, {
  3.701940758959553*^9, 3.70194077245923*^9}, {3.701941613951499*^9, 
  3.701941635712812*^9}, {3.701942081733714*^9, 3.701942086557385*^9}, {
  3.701942304168498*^9, 3.701942305892476*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sq$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sq$$], 0.01, 3}}, Typeset`size$$ = {
    450., {177., 186.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sq$23395$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sq$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sq$$, $CellContext`sq$23395$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`f$slope$fssd$mq0[$CellContext`v, $CellContext`sq$$^2, \
$CellContext`sk^2], {$CellContext`v, 0.01, 3}, {$CellContext`sk, 0.01, 3}, 
        AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`sq$$, 0.01, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {228., 236.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7019378450751266`*^9, 3.70193786063663*^9}, {
   3.701937923478607*^9, 3.701937948318171*^9}, 3.701939959451692*^9, 
   3.701940455254587*^9, {3.701940759896668*^9, 3.7019407729475307`*^9}, {
   3.701941619697736*^9, 3.7019416362877827`*^9}, 3.7019420874544*^9, 
   3.701942306800272*^9, 3.702020642610713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"NMaximize", "[", 
    RowBox[{
     RowBox[{"f$slope$fssd$mq0", "[", 
      RowBox[{"v", ",", 
       SuperscriptBox["sq", "2"], ",", 
       SuperscriptBox["sk", "2"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "sk"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", "0.01", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701942781199276*^9, 3.7019428865030737`*^9}, {
  3.701942997439535*^9, 3.701943001571944*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sq$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sq$$], 0.01, 3}}, Typeset`size$$ = {456., {4., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`sq$23454$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sq$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sq$$, $CellContext`sq$23454$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> NMaximize[
        $CellContext`f$slope$fssd$mq0[$CellContext`v, $CellContext`sq$$^2, \
$CellContext`sk^2], {$CellContext`v, $CellContext`sk}], 
      "Specifications" :> {{$CellContext`sq$$, 0.01, 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{513., {57., 65.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.70194282873883*^9, 3.701942845593565*^9}, {
   3.701942883015586*^9, 3.701942886894308*^9}, {3.7019429985148077`*^9, 
   3.70194300560211*^9}, 3.702020642858944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f$slope$fssd$mq0", "[", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ",", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "q"], "2"], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{
         SubscriptBox["\[Sigma]", "q"], "<", "1"}], "]"}], 
       SuperscriptBox[
        SubscriptBox["\[Sigma]", "q"], "2"]}], "+", 
      RowBox[{"Boole", "[", 
       RowBox[{
        SubscriptBox["\[Sigma]", "q"], "\[GreaterEqual]", " ", "1"}], 
       "]"}]}]}], " ", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7017734404091454`*^9, 3.70177347084583*^9}, 
   3.701780037968712*^9, {3.701780104118759*^9, 3.7017801400051126`*^9}, {
   3.701780205933518*^9, 3.701780254192376*^9}, 3.701781399751288*^9, {
   3.701781490185639*^9, 3.701781538257823*^9}, {3.701938265678616*^9, 
   3.701938289338151*^9}, {3.701938342414678*^9, 3.701938398988226*^9}, {
   3.701940980922076*^9, 3.70194098144442*^9}, {3.701942003784131*^9, 
   3.7019420145831547`*^9}, 3.70194227828185*^9, {3.701942320706595*^9, 
   3.701942324954399*^9}, {3.701942530003208*^9, 3.701942539314661*^9}, {
   3.7019425793537197`*^9, 3.701942583271583*^9}, {3.701942626027688*^9, 
   3.70194263218793*^9}},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Cw==
      "]], LineBox[CompressedData["
1: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
+fmfY5ls/AecyOmE
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{311.9999999999998, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 2}, {0., 1.1288460667919915`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.701773431378242*^9, 3.701773471207327*^9}, 
   3.701776593581192*^9, 3.7017800391987047`*^9, {3.7017801056555862`*^9, 
   3.7017801404567957`*^9}, {3.701780209690817*^9, 3.7017802552478237`*^9}, {
   3.701781415712826*^9, 3.701781430004291*^9}, {3.701781490860422*^9, 
   3.701781538737719*^9}, {3.7019382826889*^9, 3.701938290446389*^9}, {
   3.7019383436066217`*^9, 3.701938399298481*^9}, 3.7019384857470284`*^9, 
   3.701940981825109*^9, 3.701942067534247*^9, 3.7019422786742363`*^9, {
   3.701942321278872*^9, 3.7019423257842197`*^9}, {3.701942533074477*^9, 
   3.701942539744535*^9}, 3.7019425836774197`*^9, {3.70194262742421*^9, 
   3.701942633044363*^9}, 3.702020643220265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f$slope$fssd$mq0", "[", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ",", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "q"], "2"], ",", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "q"], "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ",", "0", ",", "0.4"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701942561951993*^9, 3.701942592843852*^9}, {
  3.7019434160810328`*^9, 3.7019436012170353`*^9}, {3.701943781977208*^9, 
  3.701943782824683*^9}, {3.701943881325178*^9, 3.701943881836709*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVkHk81Pkfxx2jaVj3MRrjSPSTQiVJu9v7o6iYthQ5l0qR3PxUyNV0kbad
9XMkZHJfw7jvXKXItZjhi8kZueVoI2PW74/X4/XH6/XH8/Xa7eh1yUmAj4+P
uq3/u/PrWyeETejwCndQZ2uKhBgCpmOdXnSwG8yllqeRkFjYI0vl+3Tw31Um
khROQp7c+lbPKDqUlDmr1LqTkPZ3/WLRUjq4LPfK5OiREHNe/SFlgw5rHSsT
e1p3oaJ+/r3vH76G6UXqlBBXHpXlV956E58CDePpl/0fE5HcgTWOaG4K6Bkm
G4Z6E9Gd7IOX7GtSQJHklpJvS0T6aZnHNz+lQCr/PqFHOkRUER8jclwtFfhA
MRA3KIeqH/owSvNTYc2UYbN6TA7V2+77mteUBtwgJUxcTBZFcsOye3vSgHHT
QDiGK4Ms6f3XNsfTgCmumaA7L4PmPz/ppuDSoXgudLm6TQaRfCaLZ4zSYSQm
XH/lmQzye5J6R6M5HVo/ZVPaJGWQRoniZuqHDPC4/st0y35ptGJ5u+Rjfwbo
B6kWyCpJozfrbe4rXzIAH3sk309CGl2GIM5JQiYQrOXL3NakELV14M2oSSYs
KonEG9RLoaGRuPvKHzNBzCDJQ9dGCtFEpfAJ7Vmg67HAyI6TRG17Gnjk4Sxw
Hkt2UoqURPjj3t9fLWWBTo1dUlqIJApx7phOkc6GYrDamHCSRO51T9tybLKB
o2IUckhPEpn4CEZVfc4G3bXfIwfZEkiAtUoe4OZAeovkerS6BDoxmyr7u3gu
5O0mPl8nSaAAfnOxTyq5cHajpdJNQgItaRXyRk/lwk28CLb0TRwNP/YYm47I
BfNy/rGraeKo5thk5rpsHkzF5uUI48TR7cS+w7u0GXCm9vXVUyxR5HvmmqcJ
MCApOOAP1yZR5L08kx1gxgCaQ1RARqEocj+7pTLgy4DQsJ+37J6LIsdVNfGE
cgYURFd2V54VRWbnfGfJhvlwbX9XkGrDT0hz86c0FYsCmH9G476rE0EambHD
Zk4F0BBnGWDEFEHql1QU7t8pAB3praoeughSydKNGn1RAIb/8VdVo4ogooVt
WAqnAJYMi2kRxiJIgG2uHaXLBL10b5JZpzBa1HotLFPLBC+D4CsqCwSkJudn
Kv+OCZ6e+vreowRkvXX6KbmdCbcXgvBtvQRU3zFHUOcwwWnk+m+Z1QQU5XWM
cJTLhKM6b+NmIgjoSGEn3vrXQtj3/gk7RoOA/I9s4RJrC4FsTnkq5bkTCfxs
x9vzpggWm4v0Xsjh0cKQzRVWcxFM6Nq0xYrg0WCIdd3jziLYu2LtmsyHRyWN
l0OnR4qAi+c97JjZgZxNzXj5gsVwDnLKUup2oFYbY56BSTF0ODq7Et12oL/8
dXgXeovhbqVTN/ZBCKmUCfLuzZRAU3fSdeMkHGp0lbgfv1wC67PjgdxoHLqh
rChYvlECE2HdnOpnOJQVfhS/LFwKFMuntyhBOHTQ7pa4y/5SaPHe6iixwyHg
61S2cC8FpxdPc3IUcMjB9CU6sFAKnaqOkSvJgijx00Hq0NcyuCJwwpVeIYDs
kplXhRYrIKepGZeqwY/UOpRM7xCrwVAnYFbfiweUHMnyRVIt+FG/4yqUuBC8
uqxdaFIHVtdfR0ssbUCAm/R9xfJ6sNovE6onsQ6OxV55k2UNoKVANt7x4B8w
O3yKY97WCEGyo0v/8H+DeTx2wbizCWopRy72vFmFP2Um3w9MvYXoQwFfD1FX
wNwj0cPixzvw+nY2295lGZrJspcvbTbDbnumQe/dr3BCUOjkqtQH2Dx1kmQU
vgROqNybRGyBYodoeW2/RWC0SLWrybUCdaTZZHRzHn5EfNbu0fwI5PXZc4+o
c/CdHtgtpNUG7ucy2/8wmIWNhcf3hozaIYanq06dmwbFiF8uxVl1wBxx4t54
1RdYCihxZVt1ApMUpCBUMAUTXRffDh3tApuLG5PUpEnQoGn60Sq64CU97kB5
3mcIXus7Xqb/N8Ryi2R2tU+AxTeEy2/4G3B8GXiDqXF4oBq5cPNkN8zv6eG8
UxiHIzO0wZX2bmhUonmZmI7Br5y704ZmPbDeej7xDG0UrO7oigl09UDyzvjK
U2MjsJKToxdt2wtaUcEXDmmPwJSwYMiXwV4gWvb0+CoMg/0OYouYCwvM+CYs
5To5MJHJ08z8yoKjQ1v+9nFD0OTXwuD3ZYNaQsXe5rBBUOOc19XmsoH8Qy1V
68oAcLxLMXJoH7hIekT322GQkbMUG7zVB5vV3Eb7m/2wHDplyQzvB4eTFn3e
Ln0QG1ann07AQBK9Mqx5wIYr2B7CZxEMHmUleHSHskHjcPiAmhgGDZWNaPoe
G6rGzYLTpDC4x1gdlPdjw/DpscZUBQwelFaNht7Y7osKnU/RwmAfPYrgYcyG
6njTG8kXMajyOdfUiGfDw+V8vWFzDJTTfoucF2TDeYo0XtlyO3//YU2ejw0j
m4PZr2wxiLB/WejznQW4qx6LSdcxCFnMrdecZsH5vbTAxNsYnJaqIVe3soAY
ukoZuovBxdOUH4vNLBjps1YkB2KgpSoRqN7EAt+I3fUJIRg4B+ZaRVWzIG6u
SCjhCQa/ENCf/81jwVVjYt9ABAYyYf9zY2SxQPPVvSzSMwzi9XiTU2ksqLlg
RHlJw8Ax+q8qhyTW9i9Z5IEoDBz8faQS4rd5+EUXdsVg4CoxtLM/ZpvH1qfO
Jg6DLPn8JNmobZ4iFi0+fnuPzdsu8+cs+BfVWOnT
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.4}, {0., 6.726555573755062}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.701942565128648*^9, 3.701942593160823*^9}, {
   3.701943419220586*^9, 3.701943601592033*^9}, 3.701943783650428*^9, 
   3.701943882267417*^9, 3.70202064330095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$vxip", "[", 
  RowBox[{"v", ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "q"], "2"], ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.701939814494646*^9, 3.7019398234198112`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}]], " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox["2", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"2", "+", 
     SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.701939823805518*^9, 3.7019398448219967`*^9}, 
   3.701939886379621*^9, 3.701940087399357*^9, 3.702020643322668*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"f$vxip", "[", 
      RowBox[{"v", ",", 
       SuperscriptBox["sq", "2"], ",", 
       SuperscriptBox["sk", "2"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0.01", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"sk", ",", "0.01", ",", "5"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", "0.01", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701939913308827*^9, 3.701939913899249*^9}, {
  3.7019399694816217`*^9, 3.7019399753181543`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sq$$ = 0.01, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sq$$], 0.01, 5}}, Typeset`size$$ = {
    450., {172., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sq$23563$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sq$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sq$$, $CellContext`sq$23563$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`f$vxip[$CellContext`v, $CellContext`sq$$^2, \
$CellContext`sk^2], {$CellContext`v, 0.01, 5}, {$CellContext`sk, 0.01, 5}, 
        AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`sq$$, 0.01, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {223., 231.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.701939916980035*^9, 3.7019399767227507`*^9, 
  3.7020206434254713`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$mq0", "[", 
   RowBox[{"v", ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "k"], 
     RowBox[{"2", " "}]]}], "]"}], "/", 
  RowBox[{"f$slope$lkstein$mq0", "[", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox["\[Kappa]", "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701778946904253*^9, 3.701778994005621*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]], "-", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]}]], " ", 
   SuperscriptBox["v", "2"], " ", 
   SubsuperscriptBox["\[Sigma]", "k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"]}], 
  RowBox[{
   RowBox[{"f$slope$lkstein$mq0", "[", 
    RowBox[{
     SubsuperscriptBox["\[Sigma]", "q", "2"], ",", 
     SuperscriptBox["\[Kappa]", "2"]}], "]"}], " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox["2", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Sigma]", "k", "2"], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "3"]}]]], "Output",
 CellChangeTimes->{3.701778961221662*^9, 3.701778994723692*^9, 
  3.702020643830471*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Best parameters in the unit-variance case", "Section",
 CellChangeTimes->{{3.7016187863301687`*^9, 3.701618792824279*^9}, {
  3.701618823112299*^9, 3.701618825974455*^9}, {3.701618979285277*^9, 
  3.7016189844095697`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$sq1", "[", 
   RowBox[{"v1_", ",", "mq1_", ",", "sk1_"}], "]"}], ":=", 
  RowBox[{"f$slope$fssd", "[", 
   RowBox[{"v1", ",", "mq1", ",", "1", ",", "sk1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701618746335952*^9, 3.7016187770875187`*^9}, {
  3.7016188755250177`*^9, 3.701618915523324*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$sq1", "[", 
   RowBox[{"v", ",", 
    SubscriptBox["\[Mu]", "q"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.701618919504887*^9, 3.701618934298463*^9}, {
  3.701666034335614*^9, 3.701666039734407*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"v", "-", 
          SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
       RowBox[{"1", "+", 
        SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}], "+", 
     FractionBox[
      SuperscriptBox["v", "2"], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "k", "2"]}]]}]], " ", 
   SubsuperscriptBox["\[Mu]", "q", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubsuperscriptBox["\[Sigma]", "k", "2"], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SuperscriptBox["v", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.701618934573368*^9, 3.7016231246113653`*^9, 
  3.701666040429469*^9, 3.7016676865584373`*^9, 3.701667749553282*^9, 
  3.701667845039509*^9, 3.701668924513907*^9, 3.7017765941928473`*^9, 
  3.702020644035035*^9, 3.7020234353103523`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.701619046734749*^9},
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$slope$fssd$sq1", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "q"], ",", 
   SubscriptBox["\[Mu]", "q"], ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.701619062898876*^9, 3.7016190714348783`*^9}, {
  3.701619314119876*^9, 3.701619315231194*^9}, {3.701619350807452*^9, 
  3.701619352205635*^9}, {3.701619684278245*^9, 3.701619684502017*^9}, {
  3.7016198601757917`*^9, 3.701619872537096*^9}, {3.7016665804155197`*^9, 
  3.701666580740828*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     SubsuperscriptBox["\[Mu]", "q", "2"], 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}]]], " ", 
   SubsuperscriptBox["\[Mu]", "q", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubsuperscriptBox["\[Sigma]", "k", "2"], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SubsuperscriptBox["\[Sigma]", "k", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "+", 
        SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}], " ", 
      SubsuperscriptBox["\[Sigma]", "k", "2"]}], "+", 
     RowBox[{"4", " ", 
      SubsuperscriptBox["\[Sigma]", "k", "4"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "k", "6"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.701619035831833*^9, 3.701619071726429*^9}, 
   3.701619116236418*^9, 3.701619315722972*^9, 3.7016193535477133`*^9, 
   3.7016196848577013`*^9, {3.701619860881283*^9, 3.701619872901383*^9}, 
   3.7016231247875967`*^9, 3.701667694576161*^9, 3.701667750019335*^9, 
   3.7016678482696667`*^9, 3.701668924909487*^9, 3.7017765943374968`*^9, 
   3.7020206441366673`*^9, 3.702023441603024*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$slope$fssd$sq1", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "q"], ",", 
   SubscriptBox["\[Mu]", "q"], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.701619879386388*^9, 3.7016199045489883`*^9}, {
  3.7016199578117533`*^9, 3.7016199838113403`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"9", " ", 
   SqrtBox["3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     SubsuperscriptBox["\[Mu]", "q", "2"], "3"]], " ", 
   SubsuperscriptBox["\[Mu]", "q", "2"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.701619879646017*^9, 3.701619904983481*^9}, {
   3.701619959786236*^9, 3.7016199841924562`*^9}, 3.701623125448064*^9, 
   3.701667750030314*^9, 3.7016678519587793`*^9, 3.7016683724282207`*^9, 
   3.7016689250347147`*^9, 3.701776594420465*^9, 3.702020644236969*^9, 
   3.702023442686162*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"f$slope$fssd$sq1", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "q"], ",", 
     SubscriptBox["\[Mu]", "q"], ",", "1"}], "]"}], ">", 
   "slope$lkstein$sq1$lim"}], "]"}]], "Input",
 CellChangeTimes->{{3.701666231405163*^9, 3.7016662483068867`*^9}, {
  3.701666486492898*^9, 3.7016664906915903`*^9}, {3.701666556728201*^9, 
  3.701666598265263*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Reduce", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Reduce. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Reduce\\\", ButtonNote -> \
\\\"Reduce::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.701668925553338*^9, 3.701776594817286*^9, 
  3.7020206447812757`*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"9", " ", 
     SqrtBox["3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       SubsuperscriptBox["\[Mu]", "q", "2"], "3"]], " ", 
     SubsuperscriptBox["\[Mu]", "q", "2"]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"12", "+", 
       SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}]}]], ">", 
   "slope$lkstein$sq1$lim"}], "]"}]], "Output",
 CellChangeTimes->{{3.701666244583355*^9, 3.701666249497859*^9}, {
   3.701666552950635*^9, 3.701666599728025*^9}, 3.7016676725974607`*^9, 
   3.701667750895442*^9, 3.701668374694483*^9, 3.701668925611451*^9, 
   3.701776594821109*^9, 3.702020644848619*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f$slope$fssd$sq1", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "q"], ",", 
     SubscriptBox["\[Mu]", "q"], ",", "1"}], "]"}], "/", 
   "slope$lkstein$sq1$lim"}], " ", "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.701666757679942*^9, 3.70166676615282*^9}, {
  3.7016668476875362`*^9, 3.701666898661378*^9}, {3.701666965698709*^9, 
  3.7016669864981327`*^9}, {3.701667177571316*^9, 3.701667195131796*^9}, {
  3.701667225257979*^9, 3.701667256263489*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"9", " ", 
   SqrtBox["3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     SubsuperscriptBox["\[Mu]", "q", "2"], "3"]], " ", 
   SubsuperscriptBox["\[Mu]", "q", "2"]}], 
  RowBox[{
   RowBox[{"24", " ", "slope$lkstein$sq1$lim"}], "+", 
   RowBox[{"2", " ", "slope$lkstein$sq1$lim", " ", 
    SubsuperscriptBox["\[Mu]", "q", "2"]}]}]]], "Output",
 CellChangeTimes->{
  3.701666766485756*^9, {3.701666850208107*^9, 3.701666899169643*^9}, {
   3.701666964078527*^9, 3.701666986930187*^9}, {3.701667180221846*^9, 
   3.701667195504827*^9}, 3.7016672256866903`*^9, 3.701667256609515*^9, 
   3.701667662386156*^9, 3.7016677536192017`*^9, 3.701668378593728*^9, 
   3.701668925745017*^9, 3.7017765950319357`*^9, 3.702020645165144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$fssd$sq1", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "q"], ",", 
    SubscriptBox["\[Mu]", "q"], ",", "1"}], "]"}], "-", 
  "slope$lkstein$sq1$lim", " "}]], "Input",
 CellChangeTimes->{{3.701667635240049*^9, 3.701667656290566*^9}, {
  3.701668630258453*^9, 3.701668639915401*^9}, {3.701668684741057*^9, 
  3.701668708627369*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "slope$lkstein$sq1$lim"}], "+", 
  FractionBox[
   RowBox[{"9", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      SubsuperscriptBox["\[Mu]", "q", "2"], "3"]], " ", 
    SubsuperscriptBox["\[Mu]", "q", "2"]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"12", "+", 
      SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.701668700693749*^9, 3.7016687299017344`*^9}, 
   3.701668926146472*^9, 3.701776595116434*^9, 3.702020645265128*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"9", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      SubsuperscriptBox["\[Mu]", "q", "2"], "3"]], " ", 
    SubsuperscriptBox["\[Mu]", "q", "2"]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"12", "+", 
      SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   SubsuperscriptBox["\[Mu]", "q", "4"], 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SubsuperscriptBox["\[Mu]", "q", "2"]}]}]]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"9", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      SubsuperscriptBox["\[Mu]", "q", "2"], "3"]], " ", 
    SubsuperscriptBox["\[Mu]", "q", "2"]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"12", "+", 
      SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}]}]], "-", 
  FractionBox[
   SubsuperscriptBox["\[Mu]", "q", "4"], 
   RowBox[{"2", "+", 
    RowBox[{"4", " ", 
     SubsuperscriptBox["\[Mu]", "q", "2"]}]}]]}]], "Output",
 CellChangeTimes->{3.70166872457662*^9, 3.7016689262852373`*^9, 
  3.701776595201015*^9, 3.702020645400228*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f$slope$fssd$sq1", "[", 
    RowBox[{
     SubscriptBox["\[Mu]", "q"], ",", 
     SubscriptBox["\[Mu]", "q"], ",", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "k"], "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Mu]", "q"], ",", "0.001", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Sigma]", "k"], ",", "0.001", ",", "20"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.701619268423295*^9, 3.701619292698369*^9}, {
   3.701619324572748*^9, 3.70161932524303*^9}, {3.701619356583981*^9, 
   3.701619368936872*^9}, {3.701619650908532*^9, 3.701619653151944*^9}, {
   3.701619690868438*^9, 3.701619781338244*^9}, 3.701619832858819*^9},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
tWIn8Wl0QnSV8WFVWvv3LB5/hk9v8bTyKmVVWjHdslec4TP1soWZc6UKPahk
tE42l/iEc2UqcxNUrzH2E2ZkeasdF1Wh2R7Fatn5Ep9rjLmTZPKUaSGOenqd
OfF56lmy2N1NyvQLv5S4kTLi0xDFafR2JOHRIeJzD4pzm91hL2NX4vM2irM/
SkS57g3x2YLivH9KOHbfNuJTGsU57mFhYp1KfNqjOG+F8UsXzCc+o1Ccv6Q7
DiRIEJ9eFg43Lm9Sp2eUnzy2j+Hz1os+GT0WdbpknP/1cx/is2X10ZiSFDXa
VCZwgJuxPzMdncebfie35D1jP2HV9gch3/pm0xIrsmdkeRKfJ34sGzh4ZjYd
yz5hZmVMfJbsa98uajSb3m8ss4PvMfEJcR79/HyNmT/xeRPF+VRx8IvXKuLz
M4rz4JPKCZZc4lMKxVkwaBlrYk982qE4Od8dstl6ijEfRnHuVTM+ridCfBaj
OIvW1ElmfSbz4Ru/LoyyGmnStXdN/Zjt8/NhPa+ETxq0fbjT9TCGTyneyna1
wxq0ZGiImiljPwHOMXLd4086xthPiJQdfb2ycg79YM9mry3uxOezG6ct2z3n
0A0/3pVlGhCf49qzCwJE59Dm+2qMxHIZ82EUp1TWbjqLsZ/QhOJ8+tR1uccS
4lMSxWnX7d599TrxuQLFqdZ6ePrVRcTnMRTnBXHl2Iog4vMJirNDavLOhZ9k
fTGK4jQo4piTmE98NmY0LdsuqkNfO+Sv483wKWHkX/w7V5seqi/rs2P4XPGU
3+jUJm36ycq3l68w1r/H0flP1Ve6bScY+wlPaxfMepCiRb9fu+Z4D2M/4fem
t+esbLTom/KPFAUY+zNzO90FPvVp0idVD3ybzCI+Ic4XHLmq4juJT3EUp7Iz
a0qEGfFpi+LczT+pKHuW+DyK4tzdViN7x5j4LEJxlj9OdD7sQXyOoDgzs1ZK
n2slPnVQnEt2F8nNvEx88mTHrOwc0aUFvxvsc2f4vBmwmVenUpfemGRxSo3h
c9ECtdJ9ibr0ZPeV6WoMn3Budt6Z6pcvGevf/SVPTPhpXTrmkW0W33biUzry
xM+1orq0dZm5sDBjf2ZX4l1nqlKHHj8ctUePsT8DcR4s21xaxdhPgDjPm+9o
LjckPheiOLW+ups0nyA+P6M4HRfVzlObS3wGozgvKeYHljkTn5IozmNxrkeS
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmnUcV0XTxW/svRIGYWA8pCJiUComJSXSCCJSEiJIo0ipCCoogoVgK2I3
CGKD3Z3YioUoKiK2vufr2efzPn/sb87d397aOztzZmbrDBnXc2yWJEkZkiSX
PEw/30seKnlBmiQr1DK1+Wr3qiVqFdVWqhVq2xb+f7zkXXH8Php2Rxy/t/Bt
ksvVGgrfEM/dV3iizjmI/3XvVeq7X22vxP/fF6//Wu7+NZI3xn6uUV3nVpKc
Irm9WmXhqZK5rtVV1zhHOAh3E54jvJPwIOGLhHcWHix8sXAF4V7C53E94d7C
5wtXFD5aeJ5wdeEBwhcIT1I7WPh29e2gNlD4QvUVwt2F5xaeyx7C5wr/pudu
KzxL+HfhdsKzhf8U7iB8tvAfwu2FzxJ+X7gOz6CPUlnX6SM8X/3z4hz+reOH
U88vczu81PvonOUaM0J4V+EVwicI7yJ8r3B/4crCtwl3F/5U175KeKjwjuq/
R/hE4d2EVwoPE95JeJnwC5I76j7PSw5U/zaSd6h/kPC2wncKDxDeWvh24SHC
OwjfLdxPeCvhW4Sfy/283SWPVv+veobr1d9T+Hvh64S/1n9tNOZuvfcYHd/O
ewo/mVt3npZ8Uv1dJd+XfCZek2uP0/GdGn+nxr+k4z/RK8m+uv4/uv5N+r+P
8F/CNwj3Ev5BeInwccIVNPZW4d7Cv6l/qfAxwn8L3yh8rHCpMTcLP5pa19Hz
rXW/YyQXqH+L/m8tfJPO+Vm4lfCZfGsdXy3cSvJ3tSuFW0jW15jnhUcJX6R2
oPDHuu7Fws2FPxE+S/cdq3EHoyd8N/W3lEzVd71wO+F9+N46Pk9jc8kb1N9B
/ZnwUuH2wo35xjqepzEs9CUSbdU/qvC9PlPfq8yB7vl4nM9nJReVXmv7acx7
Ov48N95RfYsyv+PXOqcptkCthY4XZ56H9TruwZqR7Ml8qp0m3FfyO42ZrzFN
eKfM+r9R/12deV18L7w62qDludd4I/UfUXhtNOF5UuvJU/r/UvSOewgvFr4y
81r7TmM2Ci8Qbir5rdr5wo0lN6jNE25Ef+55OEPX2JD7W5wu/I3wAcKnCTdV
q6nrNSk8n/8RbiT5Ze7n4b2f1fEq4VOlF1+ov7HwDPVtFm4pPFP4c513SOL5
XZfanvAOXwgfmvgdXin8HT6V/FRyT/VPF/5EuL7wNOHj9Z7b6/gu4f3VRgmf
r76qrHuN6a3n+UntEuHmkpvULhY+UHKz2kLhg9BVtUuFD5b8EV0UPkDyDF1n
Zz3TMMkq2Bj1H63+iqx14S7CtYQfFx4qvB02Q7iXcCXshHBX4RrCDwn3F56N
fdM1R6P7euansYGaq5o6fkx4SGafgp24sLTdwf7sL9mNY/1/mf5fq3Yua1Pn
/siaFH5U+Evha4XvFf5I+ALhW4Q/F75CeJnwD8KPCD8ivEl4tfBq4Y3C9wk/
JLxe+Gbh+4S/Er5OeIXwd8J3Cz8o/L3ww8IPC/8kvEZ4jfDHwhcK3yr8ofAC
4ZuFx6ndndh+fqA2H7sUrCvoDN9xivD9ie3nVOEHEttn5oi5WiU8TfjBxPb5
F95P+EjJr3W8RHKl/m9ael2hw6N0fFti+/aF2jXqX66+T4Qvyex/56g9qzEP
qG+d2uXqv0d9nwlfltkmj1W7K7GdP0f4GeH7WSNqt2jMKvVtwA4L3y/8sr5z
bXRG3+4jtWaJ52GV8OX670H0PLW/6y38ps6dpXMvD9Zz1h1z+Jr6Z6LHwq8K
n4EeC9cqbRO/Fa5d2s5+J7xFY54QfkL4Z9aR8OPCm4UfE36M76LrN008/x/E
9YtdeUtjrsZHSb6tNgffBHcozE2W6XmPL+x34DeDC/smfPPowv4Z3CTaIOzG
2MK8ifHfCt+l/gd0zYWlfdWyyJ+yyJ/O038v6JSH1FetMFeCEw0p7HMYc26w
78CHzBV+TvhB/T9e+J7Efnmm8Brh+5gz4dWJ/fvpwo8m5glHlp4ruFCH0vMD
n+ki/KzwIuHOws9gI4Q7lp5PeFRr4Qcy86UjhB/K7AfbCD+YmbdUUdtKz3uO
jl8WXqrnfUdypMb8J/eztS+9duBXcMUHU/uhTup/iu+u/qOEn8Zm4f+FnxNe
LNxK+P7MPO1g4Tsyc6rDhO/NzP2u1rXuVtsJXqv+5Zn5YbPS/gabf7jwisz8
7Wzh2cJXaJ52VTte5z2p45bqX5WZK7YQXpmZ4x0ofGtmjtdc+LbMHO8A4Rsz
c4D9hW/IbP8PEr49M99rgS7p2V5kTan/LPiB7rmdjkv1T5Y8Wf17a65WC9fR
f8MSf4tJ6m+o/kfxReofkniuTlH/PupfIzxReC/hRwrP622Rh2+v8aMT270x
GlMv91qeoeOHE/PJ04QfScwhx2vMnrl1coJwA+GHhccJ75Fb98YK757bhvQQ
/kbvci02WPia3O/Yh3voGW5kXPzWPM+7ub/Pqfr/DfXtjq3AJgjvgZ0Rfgk7
LPmu5Ghds25ue/hIak7237gDfgx3fChi1updcQwccb7OPRNd0vv9gX3X/xOY
58J+Gc55UWn+QcxxSmG/DLesE/nTRuE7c69r+GhrtS912Cx3jLIyxinnZeYt
7wovVLuQ2Edta11zN/Vfreucw/pXC2rzMnOGtcIfCs8QriPZJ/f7PSJ5dma7
in09Uq2CWjUdf6D+6ZK1M9+fOA378RF2SP11M9um26KtGir5FxwWWwN/hG/n
5lFbw3H1bO+j7/p/X8n30HfhfSSfKhxnEW/hM3sK/65z9uO9eEfJnQtzwhrY
HL4vNkxyYWae+KWOl6ot4NvxreAv3FdyG3RaY67R9Vupr6VaHm0o3xibuiLy
cGznTmrbpOalX8MRdO4hme0O/gU/c5haXbU3OVb/GMnqkq+pjRPeQfIdtVOE
d5V8Qe1E4e0k99R152I/9Dxv6XiS8M6Sr6qNZT1Jvqk2UbhGZu7QRnhDat94
hPC3wm3R7dQc6A31T1D/TpKvq42HV0s2KDzPHViDfA/8jOTLmddsNcn9gr/1
S/AN/LxwPcm/Cz/3C+pfK3mq+v8jWR/eINy+sB0iLt7C2oJn8H2DbcA7wqfo
/y+wT8J7SX6OPRNuIPm22snCu2R+/jOF95B8V22y8G6S67CFwntKfhbH1Jf8
BFsrvLvkFuZIuKPkenw+c5s5ltmVNYv9U6uRmA/kwjsILxLeCt1KbJ/7aeyv
whVp6t8lsf0MhXnjYuEZeq/qGjdQ8pnCsTwxPfbjbeGTdd9O+HGNORxfE20y
trkobJcuI85T3y/CFdQGCP8mWYl5Ef498bPCB/tKJpJd1b9Z8F/3r5/qiW3O
P2pVE3OYDhqzySYlOVG4tdqPiU9iTcN5PpP8wZf8165/Inl6Zg57LNeW7FJ4
DbXk+SV/Ur9OTboXtjetCl97z9T5nRZxPW0UPkFyuNp33EPjtse/BPuWj4Rn
ZPY/HwufltmffCg8HY6o1p/zMvO+jsI/6lrLMs9znpkvdxL+KTX3OVJ4k3At
3auqZE3suuRctb3UdtXxdpK7SF7Pu2n8Zh1XRjeEr9KzvZhZn2tmvk5/PdO5
cAo4h8buBtfIbKN+1vGlmeOvr1L7XvIqf7Gu1P4Qrqx2tHCv1P4AX/e+5NTM
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
Oj5flzu/R46rd4xPiVPJd56Smg/zXJPj3PaKOQpyFT1iHmOrGJtjm4jPu0VO
e7bk2NS2D9tCjmJk6viXHMWo1PlDzj0x2jRsKraVWB4eOzL6I3jIqOg7uha2
H6eWzhuMSZ1nI1dAHvLaOP8T4n2fKFz7oAbSKTdvJdYkroWTwcfIzdZjrgpz
NPrJv9ybO+e5IvKK8fGa5BrPTT0X4+O9+NaHFba31ItZExOjfeiSOzdIjpA9
AOSMB8fn4VrkL+/JnUtcljuXQE4BrgzPPym1XUaOjvNzU+6c0i2SjxfO3b4R
74ttIk/Hs8yN/gA5J2K4K3E657eKOZZuhWvc6AXG9NrcMeISyccKx0+vE9fG
HAu5lutz2+QbcufEZ6aOy4izmNelwf3ca0nkjWPi88+Jz8Y7Dii8hvh2fGe+
NzwI3ZsW/QpriPVWMc7BCfE6xD+MhZOgO2fH/pYxp9S5MO84K+oPOoVuwTWW
xe+IbgyM8SY12THxOmnUhVlRH4hJed6TCnOP2VE/+Ra878rca+Tk1DW4kYVj
c+aB3MhFqXOA8PSLU9tx8iRgclYjoh4uCY4biB+Ya/LGxCbU7rAhl6TmVOgV
C4dcPu9xedTJe6Ofxd/elFqHsT/4Ap4Bf0P+Gb5NXQ7dw7efHPWU+A5bQI2T
axKvnRGfh1iGuGdR1J802AfV1nU25c6Nk7+qof+bp7bpbXV8WOKcPHudGqeO
Y3eUPDB1vDQjXpN4ql2MoaiJwznhoS/yzQvnZK4Pzk0xD+RIeb+F8R2PiHjf
+P3QCWxfleA4r17hPTnE7q/n3odD7P4Gep47dmcvCXMD12Ee70ldg6MWtzT2
E6csj3PFWr4ldS4IHeJbwZmYU/ZCkKuZGNcL80cdkfXFuxL3Y9PGxjX4QG4b
9GLuPAn3JJ6Fvy1JzdtYg6w11tb18V7owZGFayrsUaH2c1P6//vQeL53Uucw
qO2Qx2B/1D3xXvzHmJdz34f7YSvnRYw+cM1Hc9eXqOVQ0+GYOjzv/kq0YUv/
Oz9xHrGf1JVujM/za+6aC/sTeHbeAX65LN6f2vJV8TqsYXJKxDqHFl47cD74
XrPU+VL0Dw7YOa4peCxzT50Kjkqsh18fFBxTsyfqpcz6d3xung9/YX/H/OAY
kLokcQE1lzG8R3DcSl0Se4vuk9dn/8X22BCNmRccS1JbHBwca7N3i7oSfniW
3ivk3ntzJhwt2Eezl4z9OfDZ2RrTLzg2Xxq5PTx/FmszOCalHjowcmP2g1GP
oO4wM9pqbDI5e/aYkD8hjzIp9xxTn1oQHEdTk+0WeQh72CqWriHBDyuVrovA
dSuUrp3AFSuXrs3A2bYuXbeD422nNjLxvpRtS9ft4E7blK4Fwv3qBteenpZ8
uvB6rBIx9Y22GlszuK70pGSn4DiOOuzEGLNQ43sstZ8i3m8Y4yXytyODc57s
2dsluC7G3gnqJnyfduwTDK5Vsb+iRnD9iz0VOwbX1NgDU6103Qi+x34N4nX2
lq5OHceQh6HGjk6S/2gQ7R05YfYFoS8nUecvvFdoVOlaFbUwcoDUHagdTM+d
8z8OH0mNOjiPxB4hahDkpogB4IozE+97JKcKT2RPHXXgdYlzQtT4qFGSg2UP
Bnl+8v2zg3OwvwXvTyEHQA6nTXBtC95I/RffMA8dDY5zf5Vsk9vfzM+9h4Vc
EzmnesH5QPZXPJF67c2NPJM4F+5HnHJU7Kf+i915U/KF1LmARcLPp47fL82d
Dxka+6mxUg+diu4H5yHZO8H+AvIB5KiI96l58GzELNQheH7yCYPjNdekzk+Q
H2OPFXU06mlPpo6nzsXGBseS7I0kbideJZ+0R3COkX0afEfia+L1u3Pbd3ga
sVvXeB1qPdR9pgk3izpMjZE9OHBu4lZqyuTap7O3tHQtlpiL3Cx71agvbBtc
t2Vf1o6l9/mRV2lYei/aL8J7l95zxjfaK+6ZIz79IXetir1eO5TONRPXNCi9
B454ds/Se92I0bYvndMnnsIuEasSs36fu87FPrQf+Y6J92VR88a/U9voEeMO
4q/6pffMERPlpevKrwpnpWvVrwTXrqhhoetp6Xrwy+on2MQWUwvemLsGx/6u
fUrvz0Nv9yu9x5R9gzuX3hNJTgBuT73oPWKX0vsFift2Kb1fkFhvp9L7Jskn
1Ci9d5O4FV9PXPAE3Kf0nkJizN1L70Mlb/BX4T17zwvXK70nlfj9l8L1MGwU
eyzbJt6b90vuPDP55sal95iyf3KP0vsOiQ33jbUH9oo0Kr1flr2RH+euDbHf
b33umjt72Nh7QYxGHaJ66do2cTF7XdhnhT78UXi/07PY4dI1dWLGxsF7J5j/
A4Lr2m9I/lp4b9JTwk2D69qvMedqU+BakvtH+4AOVyld/yZW/b3wfqpnhMvS
+wa4ZsPgej1zVT94HwLP0yh4Hwjf+s/Ce5+eE24SXPdHT5pF+/a6ZFF6PwG4
QXBdnvFVM+8fwF+H0vseeGb2wA9JvO+xdvAeBt6re3CNgz3SVTLzSfYh7B68
B4Dnr1q63k9M/VvhPVr4pv8DLIf7iA==
          "]], Polygon3DBox[CompressedData["
1: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
wnag67Vk/r+P/T1sfcEjwO9inwT7pE340JHgl+kv3mSuyIMHYV+I8UPBY8A1
eGHwMPBz4OLfAx8O/hg8hfOH6+f0+3TDL1fj/CXg6buZj4MZfwG4a1zz9zTh
Xy93kz8MwX4huDLOgrcGnw/ugGcBPyMnlv9x6hWOG2A/hf6P3HsG7GOw39ra
76e/FvbjXE/Yp8G+IfhU8FjwjOA1wccYD8BTgT/imuU78f3/AffHfqzxCDy1
/BL7IO4/Puee4HhAE77yOv2FjAfYh9CfwDnHcWST+31KfzHsP9bhi/q2A8Cr
cv8jwJ+Ap+xJ/ia3nVafS38g9rPo/459Zuz/bpJ7TMO5P7GtTDuM/kfYJ8e+
Avbe4MPB+4KfAs/bTW54AngLxp+N/Q/svcGbg88E/waeCTyiST4n311U/u6c
0d+AF5dPMv4iP4e8xvyB4wZyC871o39Qk/ziXc4tgv3AJnztHfDC4LrK3J0M
fH2VfOc65z/tdn1lFd81Qzc+8rISf/xWN/zp4zrP898q7/sk7JOC7+0mf9yu
xN/p947BvleJf9JPHQveuMQ/6idHgQfXWS9Lcu4g+tvU8YdLgUfQf5jjut34
/FF1+P2W9H9nzCry6TpzYcuW74+mjWe8bfl5t2S9um6P5u8N4rgz9iU4d2Cb
D6xG/wfOLec3om0C3oh2vFypTr7tuRPpP8Jx/W7e+bFtPuDf+pUxK9E/ok7s
Wa3NL8zpzTcO5n0dJ1/H+A543jr87qAS/jtdHX5xYAk/nbYOPxlZwgdnqBPf
jwa/Bp6jDp85EvwKeLY6fOQI8MvgWevwH/M/+eWMdfjAOTzPdDzbtnXi14gS
Pjp9Hf7Tl+OPnXCghemfiP1d8Hx1+Onx4LfBferw16PAr3aih8jHjgW/CZ67
Dr8+BvwGeK46/Hz5Ou/aGL0g/eOwvwWepw7/37+Er01Vh0+dzfNO284F49/p
4Cnbb6d//alO/ntxlfXxZR094Kwq819+YT55dpX19EUdfeDMKuthbJ3866Iq
/kE+vDX45ir5VSnJp26okl82JfnwjVXytZ6S/PamKvm3/lL+9nfLZweV8Le/
2nxh3xL+OEUdfihfV5+5qkq++1udfPTyKvzj9zr5+RVV9Iw/6ugFV1bRO8Yr
ybdvq5K/jluib9xaJd+T/6u33FlF/9md42zm9t3wjw3q+KuFwPvS/6DlF/KM
Ixm/Xp31vQDn9qZ/hvGuXavylTPB04CH1MmXB9TJpRbk3D70v2/5jLzmKP0B
x/ldS93oOUs30UvUTQ7DPn6JfnF7FT1ighL9444q+siejJuvG01HPWa/knxg
yjr8S83N/P8wxh/R+mvz9UPBh/dEP3kCPHUdPr5VCZ/+s0q+t2od32KMWbKO
/uSzXkK7QW7QE451JXhX7n1KGxPNqc2tT+6JH9Wf7tDEx+nrjL/zNXkHvgv5
9vTgk3rCOQ4Gby6X7YlOpV41URMfqi9Vj1uoiQ/Vl6onLAbeuyd+X///e0nM
3LROTPyoXeOudTm33NWYt3kbY39s15BrSX8odzm+fcfqXU/Kh7hmTfo/dMPv
5czb1+HAcmnXpGtTfy1XdU44N/Tncls5zM519DG5jfrkx1x7sj6I/r+MiXXi
Ue8mOYG5gZxAbiCnl9uPNh6Dv3OdV8lBzUXl7HJ3c4B1SzSLDeUqnWgZK4G3
rJODztKEA+9SZ/7LjZ2zzl01TLWfo1uOJ9+fGfvKzpE6Oe5sTXLQHevkEOam
zlnnrj5SXymn3rWOfibXdg25ltRDpvZ70XratSQ/kHO77lx/cvF9wGfV0QzX
Bs9f/0O9Ot/TlqVzhXGsGw72tLGGMT+1sd+5YPwaF/xLJ/FKH2fslxPo+/5n
nAHvQutvfKL92QlnWpr+4bTlXI+0deroZ1L/b30/9J/mfN3NmMP8Xfz9bjfP
7LP/3YTnP2kco+1Hf/xuvonf5mqOx3SjmauXXdn+HjU29ad9GT9e64t8N95j
X+NXlXufJoeok3Pu1WQ9PlyHY+9hrlTCx6/lHrs1yQnMDeSjDzbRy9W+1KTU
pswxzDX+yZfoX1Sydr3Hq+038lvp/+R2cvgHwJd3w+2PqOLn9Hf92vV/Wx0N
akdz+xJtQo3Z51WveKxODr1nE81b7Xty8P1N7um9zeH8PWrs5zk/u9He1dAv
1Pd2o61fVeKL1Ny9n5q/2r/5ywP+Xp5vzio5lrmWfFP94dcqetWOJflrT518
3Xt4LzUVn9Vn9tnVyX33PpPP9nzrC9Wrb+uG8z9bJyfwXXtO/Vr91PxKjVGt
cTXaH51oyGrJvqNzWu7pu/NdWA/w913ge6Lt1c0cda5aF9mz5X/6ajmn3HOS
TmoZzlnn7tB2Tp5PO6Cb92f+twhtZDccR66zYZP7n1OHn1sTub+bmGetxPe5
aB2fNbD9XguBP+ykdqGmNYm5dSdalxrYpFU4ptqYmtnEVXJgtTQ13YFVNHy1
XjXiIVU0ebVjNXS1m/s60dbVuNWO1JDUvv221neMF+anzl3zZeeA+b5z3XzY
OWT+dXH7mz/i+o14lifqrA05v/WNx2nXdDNHrdcY44x1F9PurVPfMn9R41br
vpt2Ef0JuqmX3FNnrOe0qVEPrlJzULu2XmMudaTP1H7/07tZ8/oyNSi1whU6
0abMgcd0478nbee/tabZwE+363nNOnq1ub/rwdrSrOBnmqzHZ7vhNJO063tt
HWg32oLr11xczenZJpq0uZY5l/5ATVktW41MrVnNVy164U60YDVwc2VzZrXx
Y6s292zjzT+aczc5k1r0aVVyt76d5E7mUOZSalpq02paaqH9OtG61LzUXlfs
RAtTs9IBq+GqZamZq/1bA1BLV9O1libHk+tdUqUWJCeWG1sjfLT1Z9YOBzep
p/ltR/OtHu+mtuE3sZ6zdZN6lxxELrJdEz1EjiJXUTP+rRvNWC1ZzU5tXo4t
11aT7lbRjNWq1aCtPcpx5bpyCLmEGrbaoZrzOFU4t9xbjVDtXA1b7VCNUe1c
DU/tUY1GH/BFJ9rNZiX65i+tPmlOvGGVGoy5sjm1Wqs+T9+nJjV7FQ1GrUr/
uFjLH/qVaDKLVNHc1Wqs0c5TJce3dmsNtE8VzcXaqJrG8lU0ArUONYrlquT0
ahdq9n2r5Pxq+Woc1grOaPnNC1VquyPBi5ZoEEtX0UjUJtTI5q6iQamdqfEs
VUVzUftRc1iySg1ALUINbfGWL+nv1ayWaPmSWpaal/Hg4E60MDW8udr4oLZn
jXreKpqIteuhJfr3+HX06WElevkEdfRn35nv7r0q9Wl9lL5qnDr69vASfXrC
Ovq1Pk3fNlEdfXunEv28Vx19Wk1rtioan1qXnO8850oVLug78919XoUrqgEu
XEVjUhtUI1yoimakdigntF7zTRWuOEHLL0e1fM96rvmEnFfu+5S8tBuOdFod
DXHBlo+qLaqJbVClJqdWJoeSS1kTPoP+z9xvqioa6AwlGsnrrf9w/avJvdT6
D2vBam76EzmJ3MQazspVNDprO9ZsrQ2Zw5vL60/eaP2T/lLN0fWtHmUtVX80
pvWH+itrxDtVyXnMfdToVqmi8andqcGtWkVTUpubU85TRWNQa1DzWqtKzVUt
TM1q7So1SrUsNUFrFea85r5qiutXqQmrNVpj3g38XCe1Z2tGK1XRFAe0fN7a
j9/Yb/2r+WQVjbY3eCx4iioa6DTg38DTVtGgZwX/CJ68igY9Ffgn8JRVNNLp
wL+ApwbvBp4J/AN4sioa9xQl32h62kNVvp0a66xVNGe1VzXw3lXyA7XxPxkz
Q5U9EXOD/wBPX2VPx5xgNfKZq2haaue/06aronnPXqKRz1JFo1Y7l9PKbd0j
0qekqZnLobW5puZo16trTQ4mFzP+Tom9VxPtyT0n6pUXlnADOZXcassmsVfO
Zb33tJK9DXII8y99/Lp19mvo+y9uOZN6+WbgH0tiuZxEbnI2eCeu/Vsf0MQH
64t31Kc3ybmNKWqo5uLn6oM7yfnXbXK9uaWcYk25X8neDtfgWuCzSu4l3xtf
vgweDR4LrtvnN3c05zH3MYbJQdy/YWyTk8nNTmLMNu3fH07/CNoW7f3kxnLC
IU32ZLg3Y3j7fHJsuaIxz9gnJ1S7dX+PXFHOLTe1prB9k5zA3KBXN3xDH3J6
HX/Qv/19u3aTI5krycHkYqPbv39qybPKRyvwwk32vqihqqVq91uMaH+Pe07c
e7Jr+76Wky908k18n+an1kq9xyLt+/TZ+7TfRw3SfRfWvNUmPynxNa5J16br
wHg8mHMzlmiS1j71+WqVK3PN4t3kw/JbNclBLV9Vq7yz5FrvYWx/qF1b3sv1
d1dpuXAV7uKeBfcuqLFNWbInx70524BnKdlz4t6TQeBpS/aQ9Gr5guvWPRTu
pRgCnhn8dkmsMwYaC83nB9app6kFq3GodVjTcn2qUahVqGHN3SSHM5ezJiP/
NIc3l7dmd1iJZqB2MLsckv6iTbSYh7j/3iUah1qHmrfatzm9ub058BRNNCj3
LVlDUJtSH9ikTg1O7U29Z4c6GrzfX01FbUXNtk8TPWm7OjVBtfTRtGW70dD+
1URf2qxOfVDt7YeSerc5h7mH+tFOdWpMPp/6hjUB95A86m9vojW5B2x77C8x
9rtO9tCYX83QpDaspuf91WzUbtTYfb+vc27mTnL4yZtoAmfWWePO/5fr5Gpq
IBM3WeOudXMw19fq3OOoTjTfeVwrJdxJjiXXUn+yLmF9YgHs8zbR1i5hzCaM
/baE+xmjjdXflMRqY5Kx6eOS/R1yMrnZTE20Hmu8lb6xiVbjHpYP6+hl1or8
zTNiu6bE9y5MWwn8WUnsNKYaW78qqecbI42V75VwOTmb3O3dEu4mZ5O7vQ/+
byecT+73ZUlsNeb+U28C79eJ5jqXvqokthpzjb2fgy/uJIYbyz8o4Z5yTLnm
dE20Rmv8P9TRB62tub9iWmNtk76ar/PvwxIuK4eVy35REvvl0HLp+Zu8e2s4
zj81MX2BPmES4zntpk44uFy8wf5zJzUU84+faA92kvOa+44tyX3NGc0drYkM
a/mOtRI5jdzGPUjmW2pci9WJYfr/niZalxqv9Th9qL7UHN/45UYOtTP3WLq/
5+8SLev9TvJ79SK1U5/RZ92r5VvyFfW870tydXNwc3FrFO5VsmZi7UI90dr6
w+DHm+h/1tYfAT8BfqeEm8vB5eLWbHZs+djRLd+Sn7mHaVRJDca9KHJmazM/
l9gcI5cbt4n2oQayfpOainufrBlZa5m/RIuwRjJHk5qQe1XUyK0VWZNx75M1
J2s11oSM7cZ4+eUvJb/ddyD3tMbjXiVrUNZ+rCm5t8YahrUmaz7uxbFmYy3o
V9rznXA+ud99JdxMziX3Moe8tM6eLOOre9Tcq2ZNZeqS+p9rXx8wX5Uayoot
X5RfmiO4l8V8ztxBbVvfaM1w/ioalntPzAnVtqy59Gv5pbUYc5L+LZ81V7EG
4Lf1G8uPrSG4l8OcxNqCNSj39pjTWJuyRuDeMHMKawdb14kl6j3qPnf7TjvR
fNR+rG+6dl3DM1WpGbnXz/zcWpL1F32lPvOZbvRw9+BYo364Sc3JvY3WqKxF
WY/Rd+pD1b3UVY0tvTvRPdR35WYTdpK/PF3CXeWkclP1ePcWuEfpsSbat7Fv
/3aM+q9cZaJO9F3z06lbPm6+eF5JbmGOoVZzbwmX9rerfVnTcu+TmqK1rlNK
tE05h9zDHN29ROZw5u7u11mjG85mPfDkkvqRGpxanBqlvkyfZv6uHu7a9efc
1039Wy7Yq5N6rPX/wd1wIvXsi0tyK3MstRv3D43Nq/innnxiO9+H1tHy3V+w
VTec1vrPGSX6lTHb2H1miV4ix5XrmtOu1+Y/5rrmyO7lsqZk7mx8lHuMbb+t
ObN7t6wJmktv1eZP+vTdWn9qfd6YbGy+p2RuqTGqNZ5e4g/N+dR2rGe71ndq
x7h/ba1uOKb1W2se/8S2KrUQa1TmAtYOrF1Zr5O7Ttq+809LckNzUHPRZ0ty
IXMWc5dnSnIXcyJzoxdKtAM1BbUFa6jutejbSW31pRLtRA1DLUN9Sr2vXyf6
lTVO91qt3Ent88USrUNNQm3Cmq762Qqd6Flvlmgz5vzm/m+U5P7m/Ob+1nzd
+6CeZy3Ymq/6nnrfP3vNerJXXL3KWurrJVqBOb65/lsl+8HUgNSCrMG7V1AN
xNr8yyXaj5qQ2pDv1HfrN3ukSb3C2se8tPlod+izOtHE1MZuKdHO1PDU8m4t
2Z+rpqa2dn9JrmtOa257W4n2p4amlnZ7ibbmAlAbfKAk1zVHHtvybXNdNQjz
WfeMu3dcfXAubK/SjuxE41HrebBEqzBnNnd+pUT7UeNS63IPt3u5t+XcbCV7
9uXucnjzVPeYu9d8O/AcrqUSbU0NRy3ntRLtRM1F7cUarnvd1QOt7T5Sksub
85v7W0NXv1TftLZuTVx9UT1Q/dAatu/Cd6Le+WhJbq0moDbweElubk5ubv58
ibam5qf2Z03cvdDW2K2VP1zi2/RxagVjSrQnNQC1gCdKcnNzfnN/a+zuFbcm
b+3dGrV7563JW7t+rEQLMOc397dm7/8irNJJLd89BX5754B65/8BTGT52Q==

          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[{{1215, 703, 863, 1479, 1043, 1044}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stKlGEYB/B3PGueL0CJRBdq0E7UARER04RQEE8hDIjWwsOoNaPVJtBW
gQV5BXUFuhe0Fh42eR7zBN6AeAP+vlr85/d/Br7ved9hHiem+6ZiIYSv8k6J
+qSPOx5lh1DOY1Yzw6e8ZZz3fMGsnBBGWMFKeaM3Ms0WfuZzrnGQPznBDb7l
NptyQ6ixNy0H5iSfSDIrhEPzHI84z2Mu8CR6nqfR2XnGFDNM85yL/MslXvA9
L/mBV/zIa864S619i3ITvZdxWXW+P+ZP3Ir2c53j/MEBfmcXV9jMFBtYL6/1
Mg4zsAd3drWyw52f2dGoV+qFekqqzK/My3qOtEuZ79qYLftSGp2Be1KiJ7gr
xfoYd+SR/s2uUb1IX9WH9EL9iz6gF+j9/C35+kv+kjy9l9viKKGbW7F/VwjL
nu2MzqJv0k8YZg11sf//oQeLh0HM
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzM0ygnEUwOGTvsbIRbgOn9sQymeGjdgyNrqC7DBTISlWLoQti6JuRsSz
eOZ33nPe+c8cnZVOExFRZJiMGKcieumIuv7xTd93Q0N32SPPVSaiaZ8wv/JJ
mWNu7Sd0nxfv7miFO/ukvvHFASfc26f0wpsj87m5pWn90YE+aEZ/dVZr/m2b
s+YiJea4tH+0nzRvssWQeZbpuE3pNjf+/dAFVui65fSda7dVXaTAk9u0Vu3X
dJ0lNnh2O9R/ofwouw==
       "]], 
      Line3DBox[{982, 1295, 1398, 1656, 1345, 1296, 646, 1346, 1297, 1494, 
       1184, 983, 1486, 1495, 1185, 1383, 1485, 1496, 1186, 1382, 1682, 1371, 
       1187, 1385, 1683, 1384, 1188, 984, 1399, 1581, 985, 1288, 1497, 1189, 
       1374, 1290, 1387, 1684, 433, 1375, 1475, 1498, 1388, 434, 1376, 1476, 
       1499, 1390, 435, 1377, 1680, 1294, 1392, 436, 1378, 1681, 421, 438, 
       437, 1298}], 
      Line3DBox[{986, 1299, 1400, 1657, 1347, 1300, 1401, 1658, 987, 652, 988,
        1500, 1190, 989, 1501, 1191, 990, 1502, 1192, 991, 1503, 1193, 992, 
       1402, 1582, 993, 1403, 1583, 994, 1386, 1504, 1194, 1394, 1487, 1505, 
       1195, 1395, 1685, 1389, 1196, 1396, 1686, 1391, 1197, 1397, 1687, 1301,
        1198, 1348}], 
      Line3DBox[{996, 1302, 1303, 1671, 995, 1304, 1305, 1659, 997, 1404, 
       1584, 998, 663, 999, 1506, 1199, 1000, 1507, 1200, 1001, 1508, 1201, 
       1002, 1405, 1585, 1003, 1406, 1586, 1004, 1407, 1587, 1005, 1509, 1202,
        1006, 1510, 1203, 1007, 1511, 1204, 1008, 1512, 1205, 1009}], 
      Line3DBox[{1011, 1306, 1307, 1672, 1010, 1308, 1309, 1660, 1012, 1408, 
       1588, 1013, 1409, 1589, 1014, 678, 1015, 1513, 1206, 1016, 1514, 1207, 
       1017, 1410, 1590, 1018, 1411, 1591, 1019, 1412, 1592, 1020, 1413, 1593,
        1021, 1515, 1208, 1022, 1516, 1209, 1023, 1517, 1210, 1024}], 
      Line3DBox[{1026, 1310, 1311, 1673, 1025, 1312, 1594, 1477, 1027, 1414, 
       1595, 1028, 1415, 1596, 1029, 1416, 1597, 1030, 1417, 1598, 1031, 1518,
        1211, 1032, 1418, 1599, 1033, 1419, 1600, 1034, 1420, 1601, 1035, 
       1421, 1602, 1036, 1422, 1603, 1037, 1519, 1212, 1038, 1520, 1213, 
       1039}], Line3DBox[{1042, 1314, 1521, 1214, 1349, 1316, 1522, 1215, 
       1044, 1523, 1216, 1046, 1524, 1217, 1048, 1525, 1218, 1050, 1526, 1219,
        1052, 1527, 1220, 1054, 1528, 1221, 1056, 1529, 1222, 1058, 1530, 
       1223, 1060, 1531, 1224, 1062, 1532, 1225, 1064, 1533, 1226, 1066, 1535,
        1228, 1068}], 
      Line3DBox[{1067, 1227, 1534, 1065, 1615, 1432, 1063, 1614, 1431, 1061, 
       1613, 1430, 1059, 1612, 1429, 1057, 1611, 1428, 1055, 1610, 1427, 1053,
        708, 1051, 1609, 1426, 1049, 1608, 1425, 1047, 1607, 1424, 1045, 1606,
        1423, 1043, 1479, 1605, 1315, 1040, 1478, 1604, 1313, 1041}], 
      Line3DBox[{1069, 1317, 1433, 1661, 1350, 1318, 1536, 1229, 1070, 1537, 
       1230, 1071, 1538, 1231, 1072, 1539, 1232, 1073, 1540, 1233, 1074, 1541,
        1234, 1075, 723, 1076, 1542, 1235, 1077, 1543, 1236, 1078, 1544, 1237,
        1079, 1545, 1238, 1080, 1546, 1239, 1081, 1547, 1240, 1082}], 
      Line3DBox[{1083, 1319, 1434, 1662, 1351, 1320, 1435, 1663, 1084, 1548, 
       1241, 1085, 1549, 1242, 1086, 1550, 1243, 1087, 1551, 1244, 1088, 1552,
        1245, 1089, 1436, 1616, 1090, 738, 1091, 1553, 1246, 1092, 1554, 1247,
        1093, 1555, 1248, 1094, 1556, 1249, 1095, 1557, 1250, 1096}], 
      Line3DBox[{1097, 1321, 1437, 1664, 1352, 1322, 1438, 1665, 1098, 1439, 
       1617, 1099, 1558, 1251, 1100, 1559, 1252, 1101, 1560, 1253, 1102, 1561,
        1254, 1103, 1440, 1618, 1104, 1441, 1619, 1105, 753, 1106, 1562, 1255,
        1107, 1563, 1256, 1108, 1564, 1257, 1109, 1565, 1258, 1110}], 
      Line3DBox[{1112, 1323, 1324, 1674, 1111, 1325, 1326, 1666, 1113, 1442, 
       1620, 1114, 1443, 1621, 1115, 1566, 1259, 1116, 1567, 1260, 1117, 1568,
        1261, 1118, 1444, 1622, 1119, 1445, 1623, 1120, 1446, 1624, 1121, 
       1569, 1262, 1122, 1570, 1263, 1123, 1571, 1264, 1124, 1572, 1265, 
       1125}], Line3DBox[{1127, 1327, 1328, 1675, 1126, 1329, 1330, 1667, 
       1128, 1447, 1625, 1129, 1448, 1626, 1130, 1449, 1627, 1131, 1573, 1266,
        1132, 1574, 1267, 1133, 1450, 1628, 1134, 1451, 1629, 1135, 1452, 
       1630, 1136, 1453, 1631, 1137, 1575, 1268, 1138, 1576, 1269, 1139, 1577,
        1270, 1140}], 
      Line3DBox[{1142, 1331, 1332, 1676, 1141, 1333, 1632, 1480, 1143, 1454, 
       1633, 1144, 1455, 1634, 1145, 1456, 1635, 1146, 1457, 1636, 1147, 1578,
        1271, 1148, 1458, 1637, 1149, 1459, 1638, 1150, 1460, 1639, 1151, 
       1461, 1640, 1152, 1462, 1641, 1153, 1579, 1272, 1154, 1580, 1273, 
       1155}], Line3DBox[{1169, 1338, 1337, 1668, 1168, 1653, 1472, 1167, 
       1652, 1471, 1166, 1651, 1470, 1165, 1650, 1469, 1164, 1649, 1468, 1163,
        1648, 1467, 1162, 806, 1161, 1647, 1466, 1160, 1646, 1465, 1159, 1645,
        1464, 1158, 1644, 1463, 1157, 1482, 1643, 1335, 1156, 1481, 1642, 
       1334, 1336}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{448, 813, 829, 640, 1489, 449, 850, 887, 646, 463, 853, 1658,
        651, 473, 857, 1659, 661, 487, 859, 1660, 675, 501, 1594, 861, 689, 
       515, 1605, 863, 703, 1522, 529, 865, 717, 1536, 543, 867, 1663, 731, 
       557, 869, 1665, 745, 571, 871, 1666, 759, 585, 873, 1667, 773, 599, 
       1632, 875, 787, 613, 1643, 877, 801, 627}], 
      Line3DBox[{451, 904, 815, 831, 816, 1490, 932, 930, 931, 1495, 465, 653,
        1500, 475, 663, 489, 1589, 677, 503, 1596, 691, 517, 1607, 705, 1524, 
       531, 719, 1538, 545, 733, 1549, 559, 747, 1558, 573, 1621, 761, 587, 
       1626, 775, 601, 1634, 789, 615, 1645, 803, 629}], 
      Line3DBox[{452, 905, 817, 832, 818, 933, 929, 927, 950, 928, 1496, 466, 
       654, 1501, 476, 664, 1506, 490, 678, 504, 1597, 692, 518, 1608, 706, 
       1525, 532, 720, 1539, 546, 734, 1550, 560, 748, 1559, 574, 762, 1566, 
       588, 1627, 776, 602, 1635, 790, 616, 1646, 804, 630}], 
      Line3DBox[{453, 906, 907, 833, 819, 1491, 936, 934, 949, 1682, 935, 467,
        655, 1502, 477, 665, 1507, 491, 679, 1513, 505, 1598, 693, 519, 1609, 
       707, 1526, 533, 721, 1540, 547, 735, 1551, 561, 749, 1560, 575, 763, 
       1567, 589, 777, 1573, 603, 1636, 791, 617, 1647, 805, 631}], 
      Line3DBox[{454, 908, 909, 834, 1654, 820, 970, 971, 972, 953, 1683, 952,
        468, 656, 1503, 478, 666, 1508, 492, 680, 1514, 506, 694, 1518, 520, 
       708, 1527, 534, 722, 1541, 548, 736, 1552, 562, 750, 1561, 576, 764, 
       1568, 590, 778, 1574, 604, 792, 1578, 618, 806, 632}], 
      Line3DBox[{8, 247, 1285, 23, 984, 38, 992, 53, 1002, 68, 1017, 83, 1032,
        98, 1053, 1054, 113, 1075, 128, 1089, 143, 1103, 158, 1118, 173, 1133,
        188, 1148, 203, 1162, 218}], 
      Line3DBox[{458, 917, 823, 839, 824, 1493, 925, 882, 940, 955, 842, 939, 
       843, 1498, 963, 961, 976, 962, 1505, 482, 670, 1509, 496, 1593, 684, 
       510, 1602, 698, 524, 1613, 712, 1531, 538, 726, 1544, 552, 740, 1554, 
       566, 754, 1562, 580, 768, 1569, 594, 1631, 782, 608, 1640, 796, 622, 
       1651, 810, 636}], 
      Line3DBox[{459, 918, 825, 841, 826, 926, 1679, 883, 942, 956, 845, 941, 
       846, 1499, 966, 964, 978, 1685, 965, 483, 671, 1510, 497, 685, 1515, 
       511, 1603, 699, 525, 1614, 713, 1532, 539, 727, 1545, 553, 741, 1555, 
       567, 755, 1563, 581, 769, 1570, 595, 783, 1575, 609, 1641, 797, 623, 
       1652, 811, 637}], 
      Line3DBox[{460, 919, 920, 844, 922, 921, 1678, 884, 944, 945, 943, 1680,
        848, 969, 967, 979, 1686, 968, 484, 672, 1511, 498, 686, 1516, 512, 
       700, 1519, 526, 1615, 714, 1533, 540, 728, 1546, 554, 742, 1556, 568, 
       756, 1564, 582, 770, 1571, 596, 784, 1576, 610, 798, 1579, 624, 1653, 
       812, 638}], 
      Line3DBox[{461, 900, 901, 847, 924, 1655, 923, 885, 947, 948, 946, 959, 
       1681, 958, 957, 854, 980, 1687, 855, 485, 673, 1512, 499, 687, 1517, 
       513, 701, 1520, 527, 715, 1534, 1535, 541, 729, 1547, 555, 743, 1557, 
       569, 757, 1565, 583, 771, 1572, 597, 785, 1577, 611, 799, 1580, 625, 
       878, 1668, 879, 880}], 
      Line3DBox[{626, 800, 899, 876, 1642, 612, 786, 898, 1676, 874, 598, 772,
        897, 1675, 872, 584, 758, 896, 1674, 870, 570, 744, 1664, 895, 868, 
       556, 730, 1662, 894, 866, 542, 716, 1661, 893, 864, 528, 1521, 702, 
       892, 862, 1604, 514, 688, 891, 1673, 860, 500, 674, 890, 1672, 858, 
       486, 660, 889, 1671, 856, 472, 650, 1657, 888, 852, 462, 645, 1656, 
       886, 849, 447, 1488, 639, 828, 827, 881}], 
      Line3DBox[{628, 802, 1644, 614, 788, 1633, 600, 774, 1625, 586, 760, 
       1620, 572, 746, 1617, 558, 1548, 732, 544, 1537, 718, 530, 1523, 704, 
       1606, 516, 690, 1595, 502, 676, 1588, 488, 662, 1584, 474, 652, 464, 
       1494, 647, 851, 450, 1677, 641, 830, 814, 903, 902}], 
      Line3DBox[{633, 807, 1648, 619, 793, 1637, 605, 779, 1628, 591, 765, 
       1622, 577, 751, 1618, 563, 737, 1616, 549, 723, 535, 1528, 709, 1610, 
       521, 695, 1599, 507, 681, 1590, 493, 667, 1585, 479, 657, 1582, 469, 
       648, 1581, 455, 1492, 642, 835, 912, 911, 910}], 
      Line3DBox[{634, 808, 1649, 620, 794, 1638, 606, 780, 1629, 592, 766, 
       1623, 578, 752, 1619, 564, 738, 550, 1542, 724, 536, 1529, 710, 1611, 
       522, 696, 1600, 508, 682, 1591, 494, 668, 1586, 480, 658, 1583, 470, 
       1497, 649, 937, 837, 456, 1669, 643, 836, 821, 914, 913}], 
      Line3DBox[{635, 809, 1650, 621, 795, 1639, 607, 781, 1630, 593, 767, 
       1624, 579, 753, 565, 1553, 739, 551, 1543, 725, 537, 1530, 711, 1612, 
       523, 697, 1601, 509, 683, 1592, 495, 669, 1587, 481, 1504, 659, 975, 
       960, 977, 471, 974, 1684, 973, 938, 840, 954, 951, 457, 1670, 644, 838,
        822, 916, 915}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
CKPlExfqajiG32sQ+de9BqfxeuVf9RH8vgMZ/L6DWvy+g0m8robXq/F6Jf27
5vXMTygxfjecpkbEsttVLWvNFJA40C9y72U1Ghi44v89o4sociNGbOoOBabj
mVgeunYjve29p0zPThJrXxygOlVNguRLxy+cp+5H5NMZ1wbJ40TjoZSpdRoS
WPFojA8l56GTsSaRI2NxREnnVmP5OQqkdfSetSPVI1eGSCOpD5XEEkHm4CwV
CoioOooRH3eiJz8F3Yt3VRJ52Q3WknnJkM2j79t5MBmNtaa4UOhvER+SqwMU
f1Gg7Pm/5y/UiTf/r/MXg3Y6i/LEdmSxtt7+2vkVkfiESVD6Bhk0cT5Gi/Ox
UJyPlUzy0/LxJ6OCq1ys5bK2RBf6FZM/n38GLqeYY59zTKI6rXcsjLCreHRK
Dfsc9lZfSVJKHuLa7zdOhY33bT0xSsD+L+biITuNR52on6wl4a2QQqg+mbdz
Cvv+104clFHL/YQkrNQMbQ0uE92LSgdJGM6FkmOlgc7dKNzwXLmhcQZhxetN
WjOG53fKv/cv5OD3L2zD71/gx+9lkP7rXoYH+L0Mkvi9DPH4vQzReL0Or0fj
9bOtiZ762Pcpyy/h4TqqRDwpvv3jn++jSufVqJpajTiLu7SkvysRgmU3pKqx
556ndUt92akbMSjN9SaqJBGuNDR4LGDf065gJsnoZx+y9N3SfLEpj3D+4Z3g
floSSK2MHKVOzUOVOczxx21Eico8oXl/8PHiUdoWhj33Q4yrdrf9LQlRMjQX
32DPnYmnACyDOpE6a1Rnftczgj3rcAUrHxkm5SRFDLDn4uVhx6NawE70dzGQ
+fNccml9o60T2pGoqt3R96oPCEbVEYau2HMZ6/1GNYLNB57yep4rrx+UMK/8
e7/D332wd/E+WHq3N68usVNQse/9ZBNtXbh3VKX33JsmkNwnmqg5TkJpMl3H
bXzrkbVfznz0yzbwXrfU4vIlI2V3w18NYnXoiolo81O7RqjUdQ29jX3+8Toi
fRixGlHnUmW4stRAQceP07LaGD9xDp9a1qpADzY9PBKyVAavmn88v/OCgpJy
b3DasxNRf5DbJ/6mTyCW0ePBXU9BBxbOMomw5iOBa9LN+eYFcPvt/htnT7Ui
aUJG0dK+c0isdoVc0UqG10qqI7Vuw0jQ0iRzh5w90nsvkHtkaB6aCbKRknGt
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
DIVTSVVv4N/AhFTB
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox[
      SubscriptBox["\[Mu]", "q"], HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      SubscriptBox["\[Sigma]", "k"], HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.001, 2}, {0.001, 20}, {0., 7.507822225774853}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.701619266022655*^9, 3.701619325766881*^9}, {
   3.7016193569347477`*^9, 3.7016193713641453`*^9}, 3.701619653893785*^9, {
   3.701619692073608*^9, 3.7016197823914347`*^9}, 3.701619833851665*^9, 
   3.701623125977149*^9, 3.701667755210058*^9, 3.701668407116807*^9, 
   3.7016689266729193`*^9, 3.7017765955185213`*^9, 
   3.70202064573158*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
rEmT35mbgyu/IIz8tFxDCV7yx6WpgPCVJUHufLeI/EmRbxYG+TO4RWk5MDC/
fD7PeK3LCDWfgjfKn9kgCAgURgbBU3xoQ84H9jg3xXiyVyamyoVphkE23PgM
hVKDFMqBRq9OMDZsMnKVhZ0LhtgwjTVqvYzlAm/QH0z4kwN2y1mu3b3SpWXt
sqYInX20xiYmjC0MKId1skssPp/m8/tAmwj1WvWqVZDVII0jDPL5XJrQxyt3
GEaYui+wVWJyZWqjOJ24wgks8/EYn5sT8FQmZ3dDKzol0U5L5N8JrugFXLWo
WkS6Vc8K5u01bcrhDw0kvjAvV+zKrTBpWaWAtKuS53qeMIcnTwbmxJNeHbUY
S0yX9fgptz9SeZtpsELLsXIm3/xh6Fi6dKlepctMJ7GLW4Njg/RabmzQbfaQ
Y6EXEAyGlEwzr+rOrGA4OWhZdMjDIjy/bFBJ2Ta6uIdBmcEJhnvMgKKGGbLH
TjTkfCwNN3BgpI8gzNw/poAMallG/gB9rsGF/QYK/Ypw8zMvfwgaXV0GBf8J
XErkTfJJriz1sGlxirLp0bF5pE3d8vL1AhuR5tuIREbNTUGXXJ6bzPLF3GTH
LDyG334SzJdfQxRT/nW3FTTUgpNDgJKL05niJAWp5XVzU64vB9w7JFNa1C4f
iE4vjkuSh0ekyskh6Qg/SUqnp0baLGZEgnFsyfIEN2sblCwru+aVZV3y6ZKj
1V3zyP7eaXKkT4rc3T9RWXVyQILc2TcRkSdRoxATGDt9DN8OGT3QwsSlT8Oi
MrZ5Po1C2zoHCmQ4By7NJPXhatY4askBfdDGDFBGSIOqZWV8w2RlEg0bWaXT
Xty8R0Qund7eIDj/xRt6OlXnNioF6c/cuqExduA+UADze1diZI89bavklVZV
8l/PJZ7o4ZIm5+GOSz1aa82WUC9nueS9iri7pNn27dvddeq03st6MTIRS6N+
9izPyKLOVLEXTzFMyhuo+nL/qXIFouTAcLMNlBzK8DDJMEWO4ThubwdzmGBd
64h5/NLWfDpt5eqePCafMYm8LXAlB02bZ3YjZ3MpmzYYNsm6dPkTwahd/Qry
wtR8yqrfLat+WZmKJgGvfAnyM5j1iz14GwSTq0stvRisQK1eTcrKg6PzImCB
Ygs1YPnJLT/J5Se7/KSXr7KGrM9ALB6XedGt0bm1FG3Dl3w8y2RIz47PkPtH
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
AQoSik0ZARyiVPq4dlQVsynYn6EpEcp4Atvpt+3p9NLsTJaigSTNBmUiioIF
4Y0w13JXk67vy+MJnPGrxpWyYN4BARMPipzgCX82nWzNoNPz0rjY18MFmIz+
fmFKLFJXsujXAhSH6n2Boj85TNEv8cDNeLBsdAkX/afnisRFtwvDTRdsYAA6
NuRpHq7PiJno1HG1/2BTT24SolmIah9+HyBfCwywNwmTrCbh8w3d6In67nS4
No3urvawx/CWsZkcbqdPn9axjwYcJo74KF3Gfrr6FMp5HOn4KMeYEKJTgPRd
UwvQ9wuIzHTj+DeUdTnIU5O70MYqH0tPIY2HFNXJpQX07QG07XTJHwjsb/ep
9p04o8X79sBOoot7PdzbQ2BDJwI7Wyjaoaj/SGsRH/KahxR7IEMSAoH8+Voj
kDnBF+nJ/2xOZxbBwWnFLCSDO4KOhPjdVFlOP5tRQE/NzOecAgd+wE48QlfP
ZXb1HDq0sYKhzMCs0LYRkmRAx9PTMywaow7oqDW9+DfqcP6r8ukAneCh6Xm0
t1rk3BVllsyUyUJC7DYP7UXLxpbRzqoiurc+j55o8tGzM6RqpjEojLS3nWAl
/mbn//32mAI5Xvr9NUm/vxdavPpw57M9PIkAvX70/JHkx0oiuKPGx+yjn89I
DenZRWIfaRLBqy3J4uy1SAThAxmk5w1Ngy1vr8O1Hj6cH6lLixzIxpDQyukX
XpvABnvffPONbu6jq6Zr8aBAjuO5IHp1CGjMANCUzzACGp/XI39M+DRXSNts
6KVLxThgWZni4mJaNiYbUpUuW+POZUax+AOJOEYTUZpl8IjPFdCE6hKQkJtT
yMY8IDKDYISz/63luezsZyveXSqgP12fKZXo6kMDujsHNKy/0bQ/v95Ln67J
4EH/tsllllEnzDlBLXx2Vj5TDf93s1y6llK2cZzAQzjqQ5HQYwnif2VMI4Ij
nNCgJ6sMHtdJcUDjoP6dOLCjFu5ms+5LEce31VpsQ6UMpc/pNPrT8nQ6NTeL
nmgWJWCNlJNskrwgqfwighfvIziRk99RW2DXhHLYqnjx9zNneXqO54rIBcKh
DJXrtRUlYaZ34vn7/sKAX5/27LutRlYXv5qbGkMMw6IXWfndtb6YYxiS1rD1
tohAMebjbnPMH6ABpUakEP68OYUpQKAC6cndxnF5oha4hLVcYuMQBsr0/qLg
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
93QW3IDz1R91WbYRvmXc2kbREf8PjJNQMQ==\
\>"]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1076, 1896},
WindowMargins->{{Automatic, 4}, {4, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 102, 1, 81, "Section"],
Cell[685, 25, 128, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[838, 30, 1614, 52, 196, "Input"],
Cell[2455, 84, 260, 4, 38, "Output"],
Cell[2718, 90, 261, 4, 38, "Output"]
}, Open  ]],
Cell[2994, 97, 672, 18, 44, "Input"],
Cell[CellGroupData[{
Cell[3691, 119, 222, 5, 38, "Input"],
Cell[3916, 126, 834, 22, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4787, 153, 514, 13, 38, "Input"],
Cell[5304, 168, 1582, 44, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6923, 217, 241, 6, 38, "Input"],
Cell[7167, 225, 1155, 33, 137, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8359, 263, 241, 7, 38, "Input"],
Cell[8603, 272, 798, 23, 136, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9438, 300, 307, 7, 38, "Input"],
Cell[9748, 309, 1301, 37, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11086, 351, 696, 19, 38, "Input"],
Cell[11785, 372, 1085, 30, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12907, 407, 218, 4, 38, "Input"],
Cell[13128, 413, 1208, 31, 106, "Output"]
}, Open  ]],
Cell[14351, 447, 516, 14, 38, "Input"],
Cell[CellGroupData[{
Cell[14892, 465, 397, 10, 38, "Input"],
Cell[15292, 477, 1368, 38, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16697, 520, 553, 9, 38, "Input"],
Cell[17253, 531, 2316, 62, 109, "Output"]
}, Open  ]],
Cell[19584, 596, 717, 18, 64, "Input"],
Cell[CellGroupData[{
Cell[20326, 618, 413, 11, 44, "Input"],
Cell[20742, 631, 1993, 60, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22772, 696, 290, 7, 44, "Input"],
Cell[23065, 705, 1657, 49, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24759, 759, 257, 6, 44, "Input"],
Cell[25019, 767, 1530, 45, 108, "Output"]
}, Open  ]],
Cell[26564, 815, 94, 1, 38, "Input"],
Cell[26661, 818, 131, 1, 67, "Text"],
Cell[26795, 821, 827, 27, 64, "Input"],
Cell[CellGroupData[{
Cell[27647, 852, 296, 7, 38, "Input"],
Cell[27946, 861, 471, 11, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28454, 877, 981, 23, 38, "Input"],
Cell[29438, 902, 2173, 41, 404, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31660, 949, 110, 1, 81, "Section"],
Cell[31773, 952, 393, 8, 38, "Input"],
Cell[CellGroupData[{
Cell[32191, 964, 536, 12, 44, "Input"],
Cell[32730, 978, 1742, 50, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34509, 1033, 401, 11, 44, "Input"],
Cell[34913, 1046, 1115, 33, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36065, 1084, 651, 13, 44, "Input"],
Cell[36719, 1099, 1335, 34, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38091, 1138, 749, 21, 44, "Input"],
Cell[38843, 1161, 4770, 130, 190, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43650, 1296, 957, 21, 74, "Input"],
Cell[44610, 1319, 2029, 39, 484, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46676, 1363, 525, 14, 44, "Input"],
Cell[47204, 1379, 1829, 36, 142, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49070, 1420, 1442, 33, 74, "Input"],
Cell[50515, 1455, 8834, 156, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59386, 1616, 674, 16, 44, "Input"],
Cell[60063, 1634, 3894, 75, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63994, 1714, 272, 7, 44, "Input"],
Cell[64269, 1723, 955, 28, 122, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65261, 1756, 661, 17, 74, "Input"],
Cell[65925, 1775, 1779, 36, 474, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67741, 1816, 490, 14, 45, "Input"],
Cell[68234, 1832, 1661, 50, 137, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69944, 1888, 228, 3, 81, "Section"],
Cell[70175, 1893, 342, 7, 38, "Input"],
Cell[CellGroupData[{
Cell[70542, 1904, 338, 9, 44, "Input"],
Cell[70883, 1915, 1522, 44, 108, "Output"]
}, Open  ]],
Cell[72420, 1962, 89, 2, 38, "Input"],
Cell[CellGroupData[{
Cell[72534, 1968, 526, 11, 44, "Input"],
Cell[73063, 1981, 1427, 37, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74527, 2023, 277, 6, 38, "Input"],
Cell[74807, 2031, 666, 16, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75510, 2052, 411, 10, 38, "Input"],
Cell[75924, 2064, 483, 11, 27, "Message"],
Cell[76410, 2077, 713, 18, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77160, 2100, 508, 11, 38, "Input"],
Cell[77671, 2113, 783, 17, 97, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78491, 2135, 374, 9, 38, "Input"],
Cell[78868, 2146, 563, 15, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79468, 2166, 532, 17, 102, "Input"],
Cell[80003, 2185, 645, 19, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80685, 2209, 837, 20, 74, "Input"],
Cell[81525, 2231, 228034, 3739, 381, 107469, 1762, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
