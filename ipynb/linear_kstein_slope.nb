(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    300889,       6375]
NotebookOptionsPosition[    294760,       6164]
NotebookOutlinePosition[    295126,       6180]
CellTagsIndexPosition[    295083,       6177]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Linear-time Kernel Stein Discrepancy", "Section",
 CellChangeTimes->{{3.70122938430962*^9, 3.701229384705925*^9}, {
  3.701232218616406*^9, 3.701232224071457*^9}, {3.70124313910644*^9, 
  3.701243142868635*^9}}],

Cell["\<\
Evaluate the population kernel Stein discrepancy where p(x) = N(0, 1), and \
q(x)=N(mu_q, sigma_q^2).\[LineSeparator]Assume that a Gaussian kernel is used.\
\>", "Text",
 CellChangeTimes->{{3.701232228096456*^9, 3.701232268095943*^9}, 
   3.701266110196642*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Sigma]", "k"], ",", 
       SubscriptBox["\[Sigma]", 
        RowBox[{"q", " "}]], ",", "\[Kappa]"}], "}"}], ">", "0"}], ",", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["\[Mu]", "q"], "}"}], ",", "Reals"}], "]"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.701622052819084*^9, 3.70162210879675*^9}, 
   3.7016688465421963`*^9, {3.7016855769419622`*^9, 3.7016855806846857`*^9}}],

Cell[BoxData[
 RowBox[{"True", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Sigma]", "k"], ",", 
       SubscriptBox["\[Sigma]", "q"], ",", "\[Kappa]"}], "}"}], ">", "0"}], 
    ",", 
    RowBox[{
     SubscriptBox["\[Mu]", "q"], "\[Element]", "Reals"}]}], "}"}]}]], "Output",\

 CellChangeTimes->{3.703510624569322*^9, 3.7041088667768793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["s", "k"], "=", 
  SuperscriptBox["\[Kappa]", "2"]}]], "Input",
 CellChangeTimes->{{3.701231352346732*^9, 3.701231367019278*^9}, {
  3.701707370131483*^9, 3.7017073874224377`*^9}, {3.7017074439744377`*^9, 
  3.701707444206256*^9}}],

Cell[BoxData[
 SuperscriptBox["\[Kappa]", "2"]], "Output",
 CellChangeTimes->{3.703510625046673*^9, 3.704108867063002*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Variance under ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "1"], TraditionalForm]]]
}], "Section",
 CellChangeTimes->{{3.7012322966079063`*^9, 3.7012323007959967`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.701232306719522*^9, 3.701232307395381*^9}}],

Cell[TextData[{
 "U-statistic kernel  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "p"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.7012323673198223`*^9, 3.7012324095823193`*^9}, {
  3.701331806560625*^9, 3.7013318075830803`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[Mu]", "p"], "=", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Sigma]", "p"], "=", "1"}]}], "Input"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.703510625686211*^9, 3.704108867323626*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.703510625686211*^9, 3.704108867325041*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"logp", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", 
       SubscriptBox["\[Mu]", "p"]}], ")"}], "^", "2"}]}], "/", 
   RowBox[{"(", 
    RowBox[{"2", "*", 
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "p"], "2"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ker", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "-", "y"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "s"}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dkx", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"ker", "[", 
     RowBox[{"x", ",", "y", ",", "s"}], "]"}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dky", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"ker", "[", 
     RowBox[{"x", ",", "y", ",", "s"}], "]"}], ",", "y"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dkxy", "[", 
   RowBox[{"x_", ",", "y_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Dkx", "[", 
     RowBox[{"x", ",", "y", ",", "s"}], "]"}], ",", "y"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.70123231148027*^9, 3.701232312357682*^9}, {
   3.701232983638811*^9, 3.7012330869615726`*^9}, {3.701233136274362*^9, 
   3.701233142648267*^9}, {3.701233291322321*^9, 3.701233334158304*^9}, {
   3.701233407146666*^9, 3.701233423232255*^9}, {3.701233559406165*^9, 
   3.701233581793003*^9}, 3.702019324496622*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"logp", "'"}], "[", "x", "]"}], " ", 
    RowBox[{"ker", "[", 
     RowBox[{"x", ",", "y", ",", 
      SubscriptBox["s", "k"]}], "]"}], " ", 
    RowBox[{
     RowBox[{"logp", "'"}], "[", "y", "]"}]}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{"logp", "'"}], "[", "y", "]"}], " ", 
    RowBox[{"Dkx", "[", 
     RowBox[{"x", ",", "y", ",", 
      SubscriptBox["s", "k"]}], "]"}]}], "+", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"logp", "'"}], "[", "x", "]"}], " ", 
    RowBox[{"Dky", "[", 
     RowBox[{"x", ",", "y", ",", 
      SubscriptBox["s", "k"]}], "]"}]}], "+", 
   RowBox[{"Dkxy", "[", 
    RowBox[{"x", ",", "y", ",", 
     SubscriptBox["s", "k"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7012332550554934`*^9, 3.7012332661088877`*^9}, {
  3.7012333141838017`*^9, 3.701233320971017*^9}, {3.7012333701710253`*^9, 
  3.7012334028701572`*^9}, {3.70123345021983*^9, 3.7012335404945517`*^9}, {
  3.7012336051187487`*^9, 3.701233626256131*^9}, {3.7012336667064447`*^9, 
  3.7012336703679047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"h", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7012336351422987`*^9, 3.701233636816916*^9}, {
   3.701233674892132*^9, 3.70123368574151*^9}, {3.701266200697425*^9, 
   3.701266219683813*^9}, {3.7017074980811567`*^9, 3.701707498895109*^9}, 
   3.701707554555757*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Kappa]", "2"], "-", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Kappa]", "2"]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
     RowBox[{"x", " ", "y", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Kappa]", "2"]}], "+", 
        SuperscriptBox["\[Kappa]", "4"]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox["\[Kappa]", "4"]]], "Output",
 CellChangeTimes->{3.7035106264159613`*^9, 3.704108867625572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exh", " ", "=", " ", 
  RowBox[{"Expectation", "[", 
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"x", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       SubscriptBox["\[Mu]", "q"], ",", 
       SubscriptBox["\[Sigma]", "q"]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701236051783614*^9, 3.701236110213161*^9}, {
  3.7012362840491047`*^9, 3.701236286760764*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SqrtBox[
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["\[Kappa]", "2"]], "+", 
      FractionBox["1", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]]}]], " ", 
    SubscriptBox["\[Sigma]", "q"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", 
         SubscriptBox["\[Mu]", "q"]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Kappa]", "2"]}], ")"}]}], " ", 
      SubsuperscriptBox["\[Mu]", "q", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Kappa]", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["y", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["y", "2"]}], ")"}], " ", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
     RowBox[{"y", " ", 
      SubscriptBox["\[Mu]", "q"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Kappa]", "2"]}], "+", 
        SuperscriptBox["\[Kappa]", "4"], "+", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.703510690030643*^9, 3.704108929231835*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eh", "=", 
  RowBox[{"Expectation", "[", 
   RowBox[{"exh", ",", 
    RowBox[{"y", "\[Distributed]", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       SubscriptBox["\[Mu]", "q"], ",", 
       SubscriptBox["\[Sigma]", "q"]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701236290196577*^9, 3.701236321274324*^9}, {
  3.701237196739326*^9, 3.701237199150241*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "2"], " ", 
    SubsuperscriptBox["\[Mu]", "q", "2"]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Mu]", "q", "2"]}], ")"}], " ", 
    SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
   SubsuperscriptBox["\[Sigma]", "q", "4"]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Kappa]", "2"], "+", 
     RowBox[{"2", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], 
      SuperscriptBox["\[Kappa]", "2"]]}]]}]]], "Output",
 CellChangeTimes->{3.7035107527955103`*^9, 3.704108990920081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kstein", "=", 
  RowBox[{"eh", "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7012660938426437`*^9, 3.7012660955436296`*^9}, {
  3.7016641579206142`*^9, 3.701664159722361*^9}, {3.7017778252828836`*^9, 
  3.70177782645676*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"], "+", 
   RowBox[{
    SubsuperscriptBox["\[Mu]", "q", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[Kappa]", "2"], "+", 
     RowBox[{"2", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], " ", 
   SqrtBox[
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], 
      SuperscriptBox["\[Kappa]", "2"]]}]]}]]], "Output",
 CellChangeTimes->{3.703510753467046*^9, 3.704108991235385*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.701238507527678*^9, 3.701238511960441*^9}, {
  3.701238558261694*^9, 3.701238572009799*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "y"}], ")"}], "2"], 
      SuperscriptBox["\[Kappa]", "2"]]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Kappa]", "2"]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Kappa]", "2"]}], ")"}]}], "+", 
      RowBox[{"x", " ", "y", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         SuperscriptBox["\[Kappa]", "4"]}], ")"}]}]}], ")"}], "2"]}], 
  SuperscriptBox["\[Kappa]", "8"]]], "Output",
 CellChangeTimes->{3.7035107539925823`*^9, 3.704108991503449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exph2", " ", "=", " ", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Kappa]", ">", "0"}], ",", 
    RowBox[{"Expectation", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "^", "2"}], ",", 
      RowBox[{"x", "\[Distributed]", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         SubscriptBox["\[Mu]", "p"], ",", 
         SubscriptBox["\[Sigma]", "p"]}], "]"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.702019460852578*^9, 3.7020194869890623`*^9}, {
  3.702022013698964*^9, 3.702022014109754*^9}, {3.702022070022312*^9, 
  3.702022076409081*^9}, {3.702022168359826*^9, 3.702022172271051*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
     RowBox[{"9", "/", "2"}]]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["y", "2"], 
      RowBox[{"2", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"7", "+", 
        RowBox[{"5", " ", 
         SuperscriptBox["y", "2"]}]}], ")"}], " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"27", "+", 
        RowBox[{"46", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}], " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"29", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["y", "4"]}]}], ")"}], " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"36", " ", 
         SuperscriptBox["y", "2"]}], "+", 
        SuperscriptBox["y", "4"]}], ")"}], " ", 
      SuperscriptBox["\[Kappa]", "8"]}], "+", 
     RowBox[{"10", " ", 
      SuperscriptBox["y", "2"], " ", 
      SuperscriptBox["\[Kappa]", "10"]}], "+", 
     RowBox[{
      SuperscriptBox["y", "2"], " ", 
      SuperscriptBox["\[Kappa]", "12"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.703510811053513*^9, 3.704109046491075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eph2", "=", 
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{"\[Kappa]", ">", "0"}], ",", 
    RowBox[{"Expectation", "[", 
     RowBox[{"exph2", ",", 
      RowBox[{"y", "\[Distributed]", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         SubscriptBox["\[Mu]", "p"], ",", 
         SubscriptBox["\[Sigma]", "p"]}], "]"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.70201950391695*^9, 3.702019546075905*^9}, {
  3.702022177185492*^9, 3.70202218164633*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"12", "+", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      SuperscriptBox["\[Kappa]", "4"]}], ")"}]}]}], 
  RowBox[{
   SuperscriptBox["\[Kappa]", "3"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.703510816850651*^9, 3.70410905149544*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.702021965525935*^9, 3.702021966185083*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"varph", "=", 
  RowBox[{"eph2", "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.702019567347808*^9, 3.7020196274628153`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"12", "+", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      SuperscriptBox["\[Kappa]", "4"]}], ")"}]}]}], 
  RowBox[{
   SuperscriptBox["\[Kappa]", "3"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.703510817643724*^9, 3.704109051828336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope$lkstein", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["kstein", "2"], "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "varph"}], ")"}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.702019850087962*^9, 3.7020199001346083`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Kappa]", "5"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"], "+", 
      RowBox[{
       SubsuperscriptBox["\[Mu]", "q", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "+", 
         RowBox[{"2", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}]}], ")"}], 
    "2"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}]]], "Output",\

 CellChangeTimes->{3.7035108182955112`*^9, 3.704109052151301*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$lkstein", "[", 
   RowBox[{"mq1_", ",", "sq1_", ",", "ka1_"}], "]"}], ":=", 
  RowBox[{"slope$lkstein", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Mu]", "q"], "\[Rule]", "mq1"}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "q"], "\[Rule]", 
      RowBox[{"Sqrt", "[", "sq1", "]"}]}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"Sqrt", "[", "ka1", "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.702019982233618*^9, 3.702020067785049*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$slope$lkstein", "[", 
  RowBox[{
   SubscriptBox["\[Mu]", "q"], ",", 
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "q"], "2"], ",", 
   SuperscriptBox["\[Kappa]", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.702020071445017*^9, 3.702020113957007*^9}, {
  3.7020201564449883`*^9, 3.702020171819047*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Kappa]", "2"], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"], "+", 
      RowBox[{
       SubsuperscriptBox["\[Mu]", "q", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "+", 
         RowBox[{"2", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}]}], ")"}], 
    "2"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}]]], "Output",\

 CellChangeTimes->{3.70351081907933*^9, 3.7041090524077806`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assume mu_q = 0", "Section",
 CellChangeTimes->{{3.7012680463115807`*^9, 3.701268051648902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$lkstein$mq0", "[", 
   RowBox[{"sq1_", ",", "ka1_"}], "]"}], ":=", 
  RowBox[{"f$slope$lkstein", "[", 
   RowBox[{"0", ",", "sq1", ",", "ka1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7017568800358257`*^9, 3.701756885466984*^9}, {
  3.7017569154821157`*^9, 3.70175696183142*^9}, {3.702020218719399*^9, 
  3.702020229743926*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope$lkstein$mq0", "=", 
  RowBox[{"f$slope$lkstein$mq0", "[", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox["\[Kappa]", "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70202024208053*^9, 3.702020254292758*^9}, {
  3.7020202981441803`*^9, 3.702020299167489*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Kappa]", "2"], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}]]], "Output",\

 CellChangeTimes->{3.703510819915978*^9, 3.704109052687269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f$slope$lkstein$mq0", "[", 
  RowBox[{
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "q"], "2"], ",", 
   SuperscriptBox["\[Kappa]", "2"]}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Kappa]", "2"], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}]]], "Output",\

 CellChangeTimes->{3.703510820528852*^9, 3.704109052927167*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$lkstein$mq0", "[", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.70205298488547*^9, 3.702052996962255*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]]}], 
  RowBox[{"54", " ", 
   SqrtBox[
    SubsuperscriptBox["\[Sigma]", "q", "2"]], " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
     RowBox[{"21", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "4"]}], "+", 
     RowBox[{"8", " ", 
      SubsuperscriptBox["\[Sigma]", "q", "6"]}], "+", 
     SubsuperscriptBox["\[Sigma]", "q", "8"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.7035108211622057`*^9, 3.7041090531907*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"f$slope$lkstein$mq0", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "q"], "2"], ",", 
     SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
   RowBox[{"\[Kappa]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7020532577194757`*^9, 3.7020532834836597`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.703510821929659*^9, 3.704109053480804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"f$slope$lkstein$mq0", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "q"], "2"], ",", 
     SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
   RowBox[{"\[Kappa]", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7020532577194757`*^9, 3.7020533143722057`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.703510822556666*^9, 3.7041090537750263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dkap", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f$slope$lkstein$mq0", "[", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Sigma]", "q"], "2"], ",", 
       SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
     RowBox[{"{", "\[Kappa]", "}"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.702050505341576*^9, 3.702050550064308*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Kappa]", "3"], " ", 
      SqrtBox[
       SuperscriptBox["\[Kappa]", "2"]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"4", "+", 
         SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"12", "+", 
           RowBox[{"48", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "+", 
           RowBox[{"95", " ", 
            SuperscriptBox["\[Kappa]", "4"]}], "+", 
           RowBox[{"56", " ", 
            SuperscriptBox["\[Kappa]", "6"]}], "+", 
           RowBox[{"13", " ", 
            SuperscriptBox["\[Kappa]", "8"]}], "+", 
           SuperscriptBox["\[Kappa]", "10"]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"120", "+", 
           RowBox[{"180", " ", 
            SuperscriptBox["\[Kappa]", "2"]}], "+", 
           RowBox[{"122", " ", 
            SuperscriptBox["\[Kappa]", "4"]}], "+", 
           RowBox[{"47", " ", 
            SuperscriptBox["\[Kappa]", "6"]}], "+", 
           RowBox[{"10", " ", 
            SuperscriptBox["\[Kappa]", "8"]}], "+", 
           SuperscriptBox["\[Kappa]", "10"]}], ")"}], " ", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"12", "+", 
         RowBox[{"20", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"21", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         SuperscriptBox["\[Kappa]", "8"]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], "+", 
         RowBox[{"2", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "4"]}], ")"}]}],
    ")"}]}]], "Output",
 CellChangeTimes->{3.703510823434731*^9, 3.7041090542405767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ddkap", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"dkap", ",", "\[Kappa]"}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7020522772540083`*^9, 3.702052288654134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Kappa]", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Kappa]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"1152", "+", 
         RowBox[{"5616", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"15312", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"39104", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"62924", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         RowBox[{"54681", " ", 
          SuperscriptBox["\[Kappa]", "10"]}], "+", 
         RowBox[{"27208", " ", 
          SuperscriptBox["\[Kappa]", "12"]}], "+", 
         RowBox[{"8056", " ", 
          SuperscriptBox["\[Kappa]", "14"]}], "+", 
         RowBox[{"1401", " ", 
          SuperscriptBox["\[Kappa]", "16"]}], "+", 
         RowBox[{"131", " ", 
          SuperscriptBox["\[Kappa]", "18"]}], "+", 
         RowBox[{"5", " ", 
          SuperscriptBox["\[Kappa]", "20"]}]}], ")"}]}], "-", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"29952", "+", 
         RowBox[{"138816", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"350160", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"470944", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"384040", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         RowBox[{"205812", " ", 
          SuperscriptBox["\[Kappa]", "10"]}], "+", 
         RowBox[{"74969", " ", 
          SuperscriptBox["\[Kappa]", "12"]}], "+", 
         RowBox[{"18536", " ", 
          SuperscriptBox["\[Kappa]", "14"]}], "+", 
         RowBox[{"3006", " ", 
          SuperscriptBox["\[Kappa]", "16"]}], "+", 
         RowBox[{"292", " ", 
          SuperscriptBox["\[Kappa]", "18"]}], "+", 
         RowBox[{"13", " ", 
          SuperscriptBox["\[Kappa]", "20"]}]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"23040", "+", 
         RowBox[{"61920", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"61968", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"32224", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"11392", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         RowBox[{"4698", " ", 
          SuperscriptBox["\[Kappa]", "10"]}], "+", 
         RowBox[{"2351", " ", 
          SuperscriptBox["\[Kappa]", "12"]}], "+", 
         RowBox[{"872", " ", 
          SuperscriptBox["\[Kappa]", "14"]}], "+", 
         RowBox[{"192", " ", 
          SuperscriptBox["\[Kappa]", "16"]}], "+", 
         RowBox[{"22", " ", 
          SuperscriptBox["\[Kappa]", "18"]}], "+", 
         SuperscriptBox["\[Kappa]", "20"]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "4"]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox[
     FractionBox[
      SuperscriptBox["\[Kappa]", "2"], 
      RowBox[{"4", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"12", "+", 
       RowBox[{"20", " ", 
        SuperscriptBox["\[Kappa]", "2"]}], "+", 
       RowBox[{"21", " ", 
        SuperscriptBox["\[Kappa]", "4"]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Kappa]", "6"]}], "+", 
       SuperscriptBox["\[Kappa]", "8"]}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "5"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.70351082465213*^9, 3.704109055079083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"dkap", "\[Equal]", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ">", "0"}], "&&", 
    RowBox[{"\[Kappa]", ">", "0"}]}], ",", "\[Kappa]"}], "]"}]], "Input",
 CellChangeTimes->{{3.70205156828255*^9, 3.702051574127263*^9}, {
  3.7020516103647213`*^9, 3.702051634039095*^9}, {3.70205170662672*^9, 
  3.7020517071539783`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["#1", "12"], "-", 
          RowBox[{"120", " ", 
           SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"180", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"48", "-", 
             RowBox[{"122", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{"95", "-", 
             RowBox[{"47", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "8"], " ", 
           RowBox[{"(", 
            RowBox[{"56", "-", 
             RowBox[{"10", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"13", "-", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",",
         "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Sigma]", "q"], ">", "0"}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.703510825581305*^9, 3.7041090555384073`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"argmax$ka", ":=", 
  RowBox[{"Root", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["#1", "12"], "-", 
      RowBox[{"120", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"12", "-", 
         RowBox[{"180", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"48", "-", 
         RowBox[{"122", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"95", "-", 
         RowBox[{"47", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"56", "-", 
         RowBox[{"10", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"13", "-", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",", 
    "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7020526325911016`*^9, 3.702052664165202*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToRadicals", "[", "argmax$ka", "]"}]], "Input",
 CellChangeTimes->{{3.702053992006469*^9, 3.702053995299121*^9}}],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"Root", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["#1", "6"], "-", 
      RowBox[{"120", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
      RowBox[{"#1", " ", 
       RowBox[{"(", 
        RowBox[{"12", "-", 
         RowBox[{"180", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"48", "-", 
         RowBox[{"122", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"95", "-", 
         RowBox[{"47", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"56", "-", 
         RowBox[{"10", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "5"], " ", 
       RowBox[{"(", 
        RowBox[{"13", "-", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",", 
    "1"}], "]"}]}]], "Output",
 CellChangeTimes->{3.70351082633517*^9, 3.704109055803191*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"argmax$ka", "/.", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Sigma]", "q"], "\[Rule]", "sq"}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", "0.01", ",", "8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(q\)]\)\>\"", ",", 
      "\"\<Argmax \[Kappa]\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702052669403274*^9, 3.702052758501337*^9}, {
  3.702052944579146*^9, 3.702052946149372*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
LsmVQK0K8sr2NoHyMS0m3x8l8B/wmezd
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(q\\)]\\)\"", TraditionalForm], 
    FormBox["\"Argmax \[Kappa]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.01, 8}, {0., 7.831410284821704}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7035108271454477`*^9, 
  3.704109056261552*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
VWN73/8B3DbMsA==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"dkap", "==", "0"}], "&&", 
   RowBox[{"\[Kappa]", ">", "0"}], "&&", 
   RowBox[{
    SubscriptBox["\[Sigma]", "q"], ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7020505513547077`*^9, 3.7020505666386967`*^9}, {
  3.7020506026642447`*^9, 3.702050613750708*^9}, {3.7020507049052877`*^9, 
  3.7020507074242887`*^9}, {3.70205123037052*^9, 3.702051253280881*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", 
     SubscriptBox["\[Sigma]", "q"], "<", "1"}], "&&", 
    RowBox[{"\[Kappa]", "\[Equal]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["#1", "12"], "-", 
         RowBox[{"120", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"12", "-", 
            RowBox[{"180", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"48", "-", 
            RowBox[{"122", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "6"], " ", 
          RowBox[{"(", 
           RowBox[{"95", "-", 
            RowBox[{"47", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"56", "-", 
            RowBox[{"10", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"13", "-", 
            SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",", 
       "2"}], "]"}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], "\[Equal]", "1"}], "&&", 
    RowBox[{"\[Kappa]", ">", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ">", "1"}], "&&", 
    RowBox[{"\[Kappa]", "\[Equal]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["#1", "12"], "-", 
         RowBox[{"120", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"12", "-", 
            RowBox[{"180", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"48", "-", 
            RowBox[{"122", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "6"], " ", 
          RowBox[{"(", 
           RowBox[{"95", "-", 
            RowBox[{"47", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"56", "-", 
            RowBox[{"10", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"13", "-", 
            SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",", 
       "2"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.703510827385858*^9, 3.704109056641864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f$slope$lkstein$mq0", "[", 
    RowBox[{
     SuperscriptBox["sq", "2"], ",", 
     SuperscriptBox["ka", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ka", ",", "0.01", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", "0.01", ",", "3"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.70204974456444*^9, 3.70204977545988*^9, {3.7020498172128267`*^9, 
   3.702049830647126*^9}, {3.70204988158527*^9, 3.702049915796303*^9}, {
   3.702050200659223*^9, 3.702050253429784*^9}},
 NumberMarks->False],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
0CfwA+uzuu/uiUGfwD1ihTZmFoWjT+BCweP9XJ+D0CfGr5NQIrLcD30CN95k
UxX34Sb6BL6SMzWb5/E19AlcuSnGMZztCvqE7/Lr1mp2z2OPQp/AHStlG1fN
eY0+gf9QSPTMS2d8xwd+sjH71zBvA/rEc6Rbdv7y6q5Dn8CvCX0dKttciT6B
c3fcKUnrKUafeP2X54p+fMlCn8D5Qp1jzVelok/gvuuXlNm/eoo+sb82thdH
zGLQJ3DbYKdP/OER6BN4t7ahkpFgMPoEnvp3V/iR+AD0CftX9VEiNbU/YtAb
dV8LvM04F0p6o3LwA7x98UcjEf8G9AM8oviGRW3ia/QDfMG8ps/BJi/RD/Cp
bIc6j8A89AN8NPLz9i8HMtEP8GnF7gm5u8/QD3D1phA1sZan6Ae47cq7dXxE
LPqBfbmu4a3MO9kScbxR9+vAG5WDtxnfrUhvVA7jjcrBJ5WDN+B2aWtj6T/q
0Btwrn/2OvtUVqA34BvboywX0ErQG/AdWWfzr/QWojfg4Qti3VYK5qI34HoT
9zkfN2SgN9hv/CrrrJzCkYLeZpyfJL3NOJ9J+qFy8EPl4IfKYbxROXijcvBG
5eANeGRhvoF0YT16A/7t9WHXcaUa9AZ826ezw+32ZehH/417sYI8Y98S1ye5
WwUjD78kLlzXe9t9/jGOH3Fy/22e1bdPCW130c/ETuYq0YVZxIPBuwNflZ3Q
D+yz+bYrJUSGmKMflS3T77vLo4icpRv9jawPoh+IJ/tei8XHGlXGfEruEz67
maXopKDAWJ+QcXbnX1u7V3Yt+pEi43yxspHvrpwU+ukk4+yr3Hnn7LMl6OcR
Gec/v7+cWr5PCP3MCXxVWKT+ntjEd0P/9rts9DPAKdk7/u4t8a7maq5BzAP0
Y0aeo5iqNCj858AN9NNy2Z13nU0DkSdM6wo8do7xfJH7sXJVXaXdc8wY+Wqk
Tek4Wx1xO9Vmh5gsY18O4pHIkbJx0N2IfuBcR3NIc5PrjdXoB+Kc0Bqx7x1a
jn7gvEfqt9p36t5i6KeBjDN9Qe+Oa58F0Y8aGefjKC835gWM/a50Mk6xOIGa
b8zz0VvKl6g7o+MdxMbIslQ7D8Z6uJc8DxAluU/WrOYO+pR6WB99Z1s78Uhg
2e6dOrfRJ5wTGPkul8z/3R59PjjA8lzm9heifdDTz9bWFH3CuYVk/WQOVqG9
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
gu1Gw8yxb8/C1shWDi7sZTfKEEplyo+U2rKPqf2BAYVPoNyNcjiyp4sS28ky
iW2X+lzI77q5fSP5+U0or+hbKV4onlGJsifyGtYzlHORn3tDap/35MLvHVK0
/wZuxP2dY49fdqNzYfdnFXtBvnHr3Pkc+e19qZdrbyZ+/66FP1Az83trPCfk
tsE3yW/PbZtvhD9IvYaV43o/9R5RTmxR6r2jPJ5iNMXdiq1uKr6Rxv9paj2g
HMXi1OtfObFPUu935QM/S713lK8Yn1qPna45pjSNnMc7A64Ib6Pf+antnXJ3
b6Xe48rvLUvth0gHrEjt2yvPs5tyGHxbcP5EseR/4D+CdZvkC1Lrc+UY30mt
wxWPL0ytT7TX56bWIcpVav77F2tgSWpdJH3fsJApf/WT5iJy/qp6Mcea3+58
2+5cm5k5N6xYfi/Xq2X2tZSbHV34TvJj5VdmsX1L+QNpbJ+2TWrZZYntieyK
/IqeuX2sWbTpkdu3uxXulds3uk0xXezYSnk67aG/qCtRJgbb/S3B/q7eRe80
unhf+cpVivfR2uyd2/e6Hdk7sf3hd2OvzzLU5amnF2tTcfnVqdusKPS2+tSe
0nrsTVkWOZcsX1brVc9Q7Ce7VY++2sbOU2nseofNxfj0vZXzblS0135plDt3
pFi1Ye4YZlKxT7Vnb0ud61ZufFax17YU79c4d75Ise3WzD7Np3yPpxKvba3x
nwsfZZVyQZl9rw3wnsy+48bgOdJ8TU797o1j298fMudZPtf8ZvaTPgne600K
PaA9K511K3WL3HZQ8bv8R8235rpvbL0snVxOY4jt82/PnJ/9gj63Zc7PLg0+
J7gq9RnC5dQl/L4idQ5F/chnaJU7V6xYXnqwTaEr9P2vRX5G7nyl7IjOLKpm
Xts64/gp9trQM+pmvrdO5rGVKvRNg8xrbVqwP9wu9js1yB0TKmfyU+Z8wXLa
7M3sf2+Cf8ycg14W7CtL903X+kndv3zjnZnzCytpsyNzDnpF4WNr/cws2kv/
X8/z9mX2jzdLJ2T2HddKn9C2BeX2wiZ0LdanclOjU+fwm8qZSZ0/mVHoXq2l
XzL7xF8WekZ53FNzn78oprqviEn17YcpZ1b4018Fx3/KFZ9DvSuz37w6OFb4
pdCNmqu+xXeTn3ZK7PMmrU+tnR8LW9GnsBdqo3Mp+XMdinu1Zs6m3/eov6Xu
Hntta099l9nnXiIdmdlfX6NYNbfvpByX8tSKkZVjV45buW6dVcW5Y4atyJLc
scQPwfuyUbHHjsrtyym/dCnXlkZuPyU4blL73ZljqnVwtdh7p1Kx3zVG6af9
meMcjf/vzLGNdFfz2PpB+q1l7jMU5bWqFt9Len+f8lfIR+T2e+QzLIh9BiV9
OIFrf2aOx9YHx2+K45bqO2aOW77Ws3L7q8oBlhRr+/9rPLNtV96+Se68q3Ju
39K2Z+SzNuWytHe0hzanznXoDKhXcCypddsvcT5W66EvfCM8Ce4dHCdqnQ8s
fADthy2pcyM61zsxOM7S3j8hOP6SzqmY2TfR3uxdrO0Kha7pUuwp5YSVx5Of
dnTwuY/8unbB5z7y6/pQHou8zjvlzn1cT5+nBMeh0o0nBcd30kUdg2M6ravO
lP9E1qvHBecG5de1Dz4zkh/YIThPKP+wU3CMKT0ZcucNdQ6ifOP9kXXChOBY
VXv55dTxlM7dXkvtq8uv1/mRzlB0fvdS6vhL53o6U9XaVJx0bXA+QTmisrnz
gDprULw8N7Ltlv7UmlG89Urq+E5niNcE5x+UI5IPoJy8zkmnBuc9FNuWzp0f
1DlFmdx5Q51TXB2ch7lf+jJ3bkt5/km5zy8ll68gn0Fr94Lg3Ijse547/6K8
9EXBeRXZ+guDcybyBy4OzrHIXme5czrKq+8o/Azlz5Qrke+hvMOvqWNDnQG9
mDmOle/0m/RZ5DOgXanzhzpX2ps6v6pzH51HjI18NnRJ6lzWxan1fUmhu5S7
HRY7J6X9emqxt3enzsfqHPMPuFfkc8yfU+djdV7ZNDi3oBjkKMoNkeOd5sH5
B8UsjYPzBjrTDFofkc+eGgbnEHQeWjc4h6C4cmfq/K3ORpVXVw5cZ2H1g3MC
Ooc9MvisRDGpdKziA+3zNDgu1vmXzuuk027je40IzrdIjw0KzilJnw8MPn+U
zh8ZnKuRnumcO683jTGM0jqO7FfULWIVndeNC87VyMfomjtHNh356cX6lK3s
Uuxp2e5yufPXOiMbHJzLkj7vmDv/eF1mGyLdKB0pP0E6V/ntvoW/oflqHax/
FHsOoTwbWQe2CdZRikObFD6A7NDw4LyT7Kl8gxJ4Ymr9Wq3Q522Dz44V65XP
nRPXOWPP4ByOfIBy3DMD7iNfN3debyptRifOQZ2bOhcon1N2/cfUeWz938Lp
xTj1fcYH51oVJ7bNHdvqDOXM4DyqYp92uWNnnT+eEZzLVRx0dO5x6PxFsZ3m
YmHhQ+iZ8o1eTx376/8TtqfOvSsH/0bqfJ3+P0H+uvz2qbIfqXOSymfIHsn/
VxywMvU5iM6sV8neRz5rXpv6rEFnzX0KG684Uj7mYbFjyzdT5xb0fxHLU587
6H9C1qU+19D5tc5Jj4/8PwYrY+eIZO+OzZ2z1hnfpOBx6oy+fe4ctM4BhxT6
VmumH3xn5LkYGpw3lv4fFpyv1ho+Jve5lM4Wj8udX9bZkP6/ROc4+v+Q/wHa
xU4M
          "]], Polygon3DBox[CompressedData["
1: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
g/VqRI1hreEcaJ+jRrFWcc60zlHjWuvqMWxd7o+1o5rb778ghT57q4p6cxbn
fjK+GjNz5M+/a5V65HPXmFpUj8q1p+ZV+74IT8+x3l1/rmn19OqN8IaG8/p+
tNdQz9WD+zai31rTmvPNsqbNtbPK/XENm8uMWa5tawprC2uWbjlihLnYGGDs
sAa0FjSmdckR46w1zPnGPms2a7fDjFE5ahI1hdfQpxF+1sh6eJR6leq9E1Pc
88PL/NNrUYO8wfmnij7zmvXrrKmsrRzzZ458be1kDWW9t1GJv2ps9bs1hLWE
Ncrx5tNG1H1qOrWdOcPcseH/P281L+3fa6GvnQ/2qaG8Pj0StdJaZb25/my3
9GjEGnWt6vnpD44wP6d45j/n0KQjuJ5zaqFVp3E8QntbxlTm9hRe4Y/m7xT3
bCzvdU6p705oxLMfXfSWHsjSVXi8eiN6tq2r8ID0cvVY21Th6ei96pG2rcIT
0js92bxSathJtE9sxFycXPTjNP63rkcMOoL2YSnijx7AUbS3aMS92idFfX9M
I+79fkU/XZXCp9avPj/FHJ5Pe0SKua2n07IKz06v58kqvMMNzakpPLLVqtB8
emevV6Ht1HhfpfCw9ELMIeYSPb/OVXhceoF63stX4bnpheuxtIA3qoX3oodV
q8Jj0tvSc1miCk9ZL0YNXq/Cc1Kb66E0rcLD1luZU4V3qof6UgoPpkkVHrre
jB6MXqueq96MmkHtOTSFllBzODeHpdAiahS1yVYptIse1BTu34R6eFOj9HPq
8Qx8FsZe62HPHWcNwv8d6/FM9Qucs85d6wDX2un836GMceyyjcgNh3B+HP1f
0W5Tj/nqvD28itxkDNc/MEaaC05IETvNUc7Xi6vIXSdVkYuM8fo/5hjXZqcU
uefUFHsTXsMZtM9m/M71qEHU97+X2GUMU1Or0d5j/G4ptJsa8n3jXQptqSZT
W26dQqup2ayHrIvUct4z790xxuMUMdnYrC8yptyPLrVY817PyBS1mnN+WqmP
rJ2sQWaW9eJc1pPRm7Gmu5/2faXWs4YyPqxd6i1zi1rUe+i91IPtUYWnqzer
x9q9Cs9b71XP1tpQzaJ20XP9qx4eoV7slyn2I16twm93DbgWXqvCb3fNu/af
r8Lf/yCF//psFfsbH6bwX5+rwu93jbnWnqjC3/oihf//ShX7Cc5p5/ZDVfhR
L6bYL3mwCv/qsxT7Py9X4e/vnUKbqF/UMXNT+Fm3VFH/OX8/qYVecL7OT+Hf
zquiPhufwz8fyPk/+O7jcvj96zk34F1yaIHVU/jpO8MXwL1T+O3qY3P9Gin2
E5zXzu9WHIfSvsA1Wo9n5rNTc+hH9kqhRXaCz3c9pdhfGJlDK/RP4c9bk1mb
bQD/qVbJsT+xEfyXWiCHn78hvBgenUPLDEjh54/KoRXWTLGfYdw0fuqH6ac6
n601tuF8vUl83hy1Tora0D2t7+rhybvXpSenN6eH516ZnoZenjWtXocen16f
Hp57hXr0i9SStfDu9dz13vUE3Ru5tQrv0Wfms9MjcJ9Gz0Hv4Ab4kHp4Yu7B
uAexGF6jFnsTemRT66Hn1HX3VuGd6qHqBV/HMc37Dx9dxZ7cHPijWuzV6XH/
XA8PW+9bT/6XenjcevXuufxaD0/bvRg9/k/r4ZHr/V9Rhdeg53BXij3Fz+vh
8bvXaA1vLd+1FvrZPcQv67Gn496iHr9ef/ta7GX+vWdZjz0A9zL1/BfWwxNw
L0CNZbxyj879VvegfquHh+/elHsYP9TD03Fv4+wU+dzXGOvck/i+Hnsq7lW4
56UXZk1lbaXH5N6rc1zvSQ/qWcbPK/rFmn6NUr9b61vzuHfqmrQWujfH/uJm
nHulETWqeyXGBGtXPQr3ZowJehezc2hPNejrjL8vx37k5vCr8P05/NIt4Nca
UVO1KnrDeHV7Du2ohtSfuSfHfuem8MvwnTm0oprxhUZoYvdijAFqZWs495KN
QdZ21oDuRRrzrA1vyBErjZHGyltzfHfvgffujhzaUw2qH3RXjv2MjdXQ8N05
/MJN4Jfg2+C9a+GB6IWowWYVva02eyDH/u4Qzr1B/79z+Pc+U5/tv3I82+/L
s3RP1716PVD3es/KsT/pHHOuucfr3r4eonu/56vhazFnnDvu+fpbAD1F94Jn
5pibzmHnsnuw7sWeZAw0duWYa64J18bbHFtV4YGuZq2QY+24plxbb3EMq8JT
XdXaI8daco251m7MkZvMSeam83KsRWOGscN7MKTUJz3pexMeWsU9WjlH/Piw
rBfji3PIueSc6U7/dTm0mBpNrXZ9Dj9ajaZWuwkeUYscaa7UU+hW8qPrQU+h
a8mPeg3W4HrZ1ljW5tb0euF6Mtb6eg5603pyehHW8HrjegbW9noIet96EnoL
1vx65XoQegF6Anqzegp6BcazBWX9G+/MqanoP3Ot+nVxydfqS3PqnyU+mmv7
lXhhDFDb62msWvSrXke91HtqGnOB+nJRiYcvl/j2fj1+Y2F8MmfqbZqTzaXm
5B9L/DZXn5kj9hkjjZV68mOryHF69Xp4et16Nnp76usWRY+rn9UA7oG7p6U2
MMe7h6k/bO63ptbf7J6i1lZzNIr+VYuoSZoXva1WuSXH7yPU9Gr7m3NoezW8
Wl5N06zof7WOHlHHovf1jtQsuehptYyeWq9SH+i16UG6l7lXLbxJPct+JZ7q
Zaphfir5T21jza6X0DNFLa8n6t7CnrXwSvVA/S3H+Fp4o3pUnUp9Yb2hR6H3
sFIK72I2/1vWQjtb+6l55pd8Yj49N0esN4eby/UgrAV7pPAmjFHGKmNkmxx7
ZOolay33zqzv1c/qaP1m/ZcjU9RnekXWyNbK1uv6B2qmC+nfux5aSs3kbxHU
WGopPWm9aWtsf8tiTDY2u4fYLocGM0+br9VmxkxjpzG1g68v9euJVegda0Zr
RzWV2uqLHLHUOe3c/tL3qEWMNdaqwdXi1hdNjX859s/8TD/bGG4sn1by26cc
c2lPr0JvmdPMbeaY5XPsAfnbJves3Bsy55h7jPmdcjyTiSli8uyiyfythRpO
rbZbk6gTrBfWp++Z8nyGV7H/NK/MF2t4a3mvwWvxHqgFXyx61DXmWnuh6Mkx
VeyfqVH9bYiaVu3qOfu8X+61qTnVVeortaif6We7xtwL8x57r9WIak01qP70
nFpoxWfLfNQj0yt7Dv53LTwyvbJdS02pR7Ugh6b1tydqWrWumtTf2qhh1ap6
DHoNelR6Vdb01vZ6Lnovf2vsKjxptbcegJpWfaXe01PUW/R3Pxs3osZUk8+v
hRfwUI5cZU4yN00v82VqirH6Pfum0I/urX9c9LHf2e+uxlBrHFjWv3tO7qvq
AelHXZnDG9Fj0Gu4Jof3oSeiN3JBjlhtzFbL+psmf9s0g3N96bswhzdgDWYt
di08rBYeil7K1Tm8FT0XvRc1kdpIzdSVvqty/N5Ej0avZk6O3G2ONldfnGN/
So9Br+GKHLHXGKxX4W8w/F2A99vfZpyTQ/urQdWil+SItcZcvYbL4cG18DD0
Ms7IoY3VsGrZy3J4G3oYehkP5tAC5nBz+UU5vA49Eb0RNZ/aTw25In2X5vA+
9Dj0Ov4P1bfevg==
          "]], Polygon3DBox[CompressedData["
1:eJwt13e4FOUVB+DlsrugNAHp0kKx0YuKoBilSI+oSFFUqjSRImAFQeyCAgoJ
TVGwgGIoBpViiS2hKr2qFIGogCCgguY9z9w/fs/Meed8Mzt7Z75vb+Uegzve
nZNKpT6SjLycTqU+BqfzpFKXqjflTaVmsPfZUVaFrWFz2CfsV1aDbWavsH+z
31hNtoVNZYvYPlaWfco6uNDXrJS0ZQfZbH0r1Mf1VWfrWWt9n7MC0pRtZzew
Teoy0p4dYq8a+6X6T2Prs12spL7S6jMyQH1Wz1z5T9ysNLDZzV9iH6lP6buE
bWTXG7uS5UjD3M/Siq1S55XL2Ab2d2OXqA8aewH7nP2DLWWHWXn2BfubsRtZ
aWnHvmfT9b2r/kFfBfYl66ZvP7tYbme/sTvYD+o60oflMa4r26e+SLqzX/Xd
yXs71zCZqr4lm0p10rdLT2XppO8Yv5ntVFeSm9lRNsnY+ep+9ouzlbYd9W1m
ZaUDO8xasHfUJ3L/Rh+zR4wdor5fpqkHum5+fRn1FPXtckzPXfEdss/kU5mu
XsfL2Q6Sp52vmbqb/b32V+hZLjPiWXO+++yv5s+4/gDXmKV3uf2feTW+Tt/j
bDbrZd9uapHtTcbuYBXlJnaEdWeH1bWil/3J2rN16uLSkn3HZjrJB+pjrlGV
rWW36TvEakpP9kfcI/ufurb0ZnHxLmyv+kK5DZ3W15l9p64ut7KTrC1boy4q
zdk3rB1bqy4mLdi3rA1brT5PmrE98Tdm36qrSTd2it3ItqsryI3sJ3YrO6iu
IT3YWfYQKxP3w6aya33maaxLvO9sNxsbz6j8ob7Ud17afhlZLSXjs/Px+q6O
90+Kx9+YjWWN412T8+M9ZuNYE/UXUpS1ZGNYo6hddzh7nn3FisV7z8+LZ46N
Zleoa0stud/xcx3bZVtRXUGG2s9hm2z7y6/GXSXDjS3ieD92Wt1EhrHC8Uyy
U+rGMpQVYuXlgnimHcvjfBttZ8rkeE+ktr6ttg+wAjGXGfsEq29MX3ZSfaUM
YQXZZ1JEX3P2MLs85kgpxK5jD7KG6g1x7fj7sWdZi5iH08l9Xu67r2O/bsxV
cg67LJt8F/Gd1JQacl8mObbT9v108n3U1lfJfmVZH/cW77ZrPOMazWMOl4Ls
WvYAa6D+Kr7TeHfYBNZSvUmqsC5sMmur/lQKs2bsIXaZ+r9SIp5X9ii7Sr1G
SsVzzR5jTdVrpXS8d+xxdo16o/wl3hM2ibVRfy0VY95iE9n16ufdX1s2ga1l
w+OzsbFsqOTzvhZQ95ETeq6QwfrO1fcUu0rPGLaS9WFPsiZsNFvBerPHWB02
nC1kXdh4VpsNY2+zzqwlW5aTrDOx3pRQ3ylHWH3pry+r7wnW2NiH2XLWiz3N
ro45lK1ifdlzrA17lq1hw9hoVon1YrNyv4MxrDLrzWazVuxRViu+A/YWu4U9
wi5kA9g8dgObwFqxWTH3+sxD2ETWOm8yv8Y8O5RdGO+X4+Pj/XWsunqcXBzj
Ym2Ie1Y/KMVYp9y/UbzTvdlx9eVyNzsn/m7pZK2LNa+v/lPqXvp+jjVVBjmW
n/3TsSv1rJU10khPTzkW67EM1JdP3wD2m/pquZedx76LOdt+f+NmOs/vegbK
7/EbQkY4VlTPw6xsrAXsj1gD2Fh2UaxhLI/xOeoSMYfJ3ZlkHtxgWyrmPxlk
/yxbb9vZezbX2BHGHUola17MlTFnDnb8z5jbbMupy8o98WNL/9e2L6oXxpxr
bKncdfW9dDL/1Mom81vMc/9KJ+epkU3OEedaImdYvVi/jS2uXiy/xJydO9/H
PPRX11ngfIPZfNYjvmf5UV1FusTHUV+j781YH3Kf03g23pHv1eVz15RYP96I
eUKdP+ZUdoC9FnOMOhtzINsXazm70nZI7jMZz30P1ziqbhBrefzuZPNlm7pI
7voW69abbKu6sFzHfmSvx1ypzhfzNtvPFrGf1FWlayy/6mwmed7jub8n5gT1
Qn5AfYF0dOwMnxdzVvy9c5LferGuPsXmqHf4e+RjS9mT7GW2jfn6U0vi/ckk
v3lmyz18TLzn8pK+LXmS39OL43eina7xe4LvYePi3ZdX1Lv05Wfv5k2e3UZx
Lr6A9VRPkbfU22NuYR86/hx7gx1ihdnymAvZa2w/K8jejzmEzWN7Yz5k78X7
zeayb9m5bBmbyF5n37NC7AM2mS1gW9n5bBV7gb3NdrKS7CO2LJ08xzWzyboZ
6+c+aRrvgt5FDvdT580k71S8W90dO8JWxt/Jfn1jL7J/sWyWqqyrvinGtlNv
kWqsG3uBtY/nQqrHbxv2IusQ81WYjMgk592WSc4Z5x5pPx/bbnup+hIZZT8/
22G7Qp2xXy+bnCPOtSqdjGmQTfpjXJVYo2S4MWnHtth+EPdnv042ORY9y9PJ
8bqsanx++TCdXK9hNlmvY92OdTnW52GZ5BybM0lvjLk3k3ymrbZvq79xryWl
jfv9hS9NJ/PPJdlkjoq56pC0d2wc/1jfyHiv4n7ZHWw6u0m9Pe6H3clmsJvV
O6QG68Fmsk7qPVKf9WOvstvic0gD1p/NZd3VO+N+WM/cNSrWnkk+d7t4vtg6
dm88y3FOdQlpzU7E7zhW17Yvm8O6qQ9LB/Yo+4SNiudRdqvPl1bsuOO7WT3b
u9gr7Fb1tJgD1Qc8b+XYZ44fiDnQdhRfEvOCen/Md2wkWxxrhvpkOvn/4/74
jScz3MP/AQ/z0I0=
          "]], 
         Polygon3DBox[{{1431, 856, 667, 370, 369, 1153}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1lMlvzVEUx+/v/YaERLRrU0XViqSbelKRiLavK7SmJcoCiTaWLW2J4dFB
I32tVikpEUKMi6o/wLil5gUbYoxp7/PNOZL3zfne8zv33HO/59y3sKWtuTUX
QtgHYtCUhbARUkpDKAOP8B1IQjgdhVAAI6AT1INRMEbMQ2L2E3Me/gDekRjE
fyf2TTGz+V4XGy9y6BnW9+CtfJ8F/+rxG4h5CR8iphk+DS/l7DydOwxugkn8
t7BriLkrHzZPnhw8we7ElhMzgK0ES8EH1mOeR/eoArXgJ/4W9kuLLuyQ+w5j
l4El4DvrTXx7gu0lcDl8SneH16Tm/0j9Dfgfw0/gr49Nw+PwP4nVMw5f4Wcr
5yB2EegBbYnl7CffBfZely82jaRVH/4m1s+1jzy9fF8MToE0tditmfVM5w7i
64Y/lZ7wq3yfkIbYzsTqVK/rQD/+BdhV4IZr+JeYH8TMS61e1Z1z3aX/bezc
1GIU2+f1lLwvmoFjbJhBzGf4L2KeeV96+D4/NW11rjT4FqxHJyPLecjzV0Sm
W8F1U282s/8NdgT/WXzv4Ocim99X8GH8W+Bv4aM526887fj2Jla/6qnyHqsX
Or/S56Tkd+n1/uS9vmpfKybvnF84GtveLr+X7qiea+4qPF6zmbl2tX4X6am3
sI19DfSuHN+cyOZeVusX8G7Pr3PEVe8ObHNmWqi/6zN7P+p7nNm8fqGGdZ73
/xtUL3RewF+IbW711vQGt8c2M6+D7V2d2awX2duY2XxrPguZzXef/1cov87Z
BfL437N3N7wR/imxWdG970T2XzGKf09mfZFWmgvFXsJexA7rDcBXppbvCnwi
tnrva55j67f6Pu7zL331H6C+VbvmuuvMyGZxUhqAKXDQZ0yzNuAzecT/06TB
2sz0lc7trk1ZZG/vGuvLkdVQE9vb7MhZXuUvgn/C+qfC
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1lMlrVEEQxvu9fu+BgpjcXXE7KQgaI3gRk0xOasYNT2r0oILGq5lxC2h0
jKAkM9EEkowRQgyKuJs/wPUm0RiXg14UV9zu/j6qhal5tXV1LV/1/Na2/MHY
ObcdSqDf/D3kOz1ybkbq3G7v3FL4hdAx+EZ0F+AXQbPhj+L/FP8t2HyG7M33
G7pW+AGCTyD/QJ6F/3n4ZdBiqAD94fx3bEvg52AvIk8i1yLXIB8mxrzIclAu
M1OzvcSngG9nbLl+Rm7A/gvdPfgM3TR8r6AbhH+Lbht8CzmWYstZuaver/Av
oPbEziuWenAAfogYI5wfR36fWM7KPQf1Qm3oHmNrJHaO2MXIalGNqrXK+WG+
z/D5lFh/1O/V6E7CH0L3BLkJvpnzHeiXh/52QfvRXcJ2B34dsdpjqy2G6tCv
QHffGb8D35XID5BXIa/NrMYp5M3/a9cMwzwmQo8UT3GbMstHtea8mkgc7G9g
tyLnM7tvDP+rUCd8D+dqIuthHp8jnH8Fvwl+Y2YY0nw0p/XIz+H5uQX8dUP7
0J0N86jD9wvnX8P3xoYn9aQYW07KbW+QVaNq7YtttprxiDdMqrbjkWFVPaii
H43MXzkr92roj+7QXVMBD5phIcTXbDXzenwve8PC3NTmqzk3wFe8zVYzHvXW
w53eMKTengvzUM6qpTs1vJyJrT+aRy3yHs7f8IYJYUM7oX27GLD2E7nMt5za
fZUwj7K33gijY97yHQ/3qVc9qeFLmNf8P4Z9laz5CpOKpxloFl0BT+qBeqF9
e4R8GnmD8o1sdsJoR3gDhNUP+PxNrH5hSTH6Upv5Lm/4EBZ0XzPysLfdOIXv
bc7fEr693aG71CPtv2Iqtt4AvR/qmXqnmoQ1xRe2lGM/9jVh57XrFfgTAevC
fH/YJ92p/R5MbWe0O9qnNLUdUz7ykW+CfB35GlSfWs9K4X7hUZgbwPbOGRY1
w0pk95XC+6c3TPPUWzdMjJuRvVF6X1qw3Y1sv7Xn2rcq/FBk+f8DtnWyrw==

          "]], Polygon3DBox[CompressedData["
1:eJwtz8suQ1EUh/HVajsViTHxDmhHJi4xVbehy4iBdq7ERIJgVG2UgXtCkM7w
BEiMXcIjeAm/k2PwZe/1rf/a56y+xWq5ko2IbuRRy0V8OMsdEQs4Jku4z0Sc
qqvIqytyL3Ij6nkccSvcMzesbuOCyyFr9pFvO4fUDczoH/rwN79hrlyIaHLn
Mmcoyvzy09yu3Nt/rpff199EF9ej3kJRrib3xPWrm5jlWtxPpO/tYZTbzqb/
nuwwV0h3uvPebSadHcSV+yXG9ZZlDrgp96bZL7PrZuvunclueMCEfl1u0tnQ
+5RbkxvgbvSvUdJb8t4q/x7pTAsnyV4Yc98x+6pXlfkDglIzgQ==
          "]], 
         Polygon3DBox[{{1255, 839, 917, 422, 421, 1334}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{312, 1, 466, 403, 394, 386, 396, 404, 395, 401, 1349, 384, 
       398, 385, 411, 381, 409, 406, 944, 356, 399, 388, 397, 1348, 380, 400, 
       379, 407, 408, 405, 387, 241, 315, 2, 866, 237, 312}], 
      Line3DBox[CompressedData["
1:eJwl0ltozmEcwPFndjCnd+oNN7LcjyZ322R2sQvHqFFbSWpmJztge+fCrsbc
uqDwUmpLQilKZow5bHbAKGkxS5jcuGCbO58nF98+v+d/eP//3v+z9mDTniMZ
IYR+3c4MYTn/xrU5n1VOvjSvN3/gJs5wO+dYxZysEOq4kqvUYd7IbpbxPHez
lwd4lwXZIWz120/NCXPCvFdvrXdwmSp0dkEI7xy7Z76gbqXUqWL31bNNPfHd
rE+aD+moqlXmWBfP6JZrTrFGx3TT+jCP64Z5i2trzWlzHRvUruvWpc41mi+b
4x/WpA5ddfyaY83mKzzBFrXqonf/5N0vcYppfmab65LO79O09S6uVpf/ZsI6
xUHW8w73sydex3Ms5WluYKFS5iRrmcVK/vGMbfzGEr7nOg5zDeddNxu/i+fm
cSdX6KcS1j/iN+B3LuVXLuEXLuY0F3GKufzIhZxkTtwrzI7PpUeFas/9TYTy
+C0N99mnB+rXQz3SgIrc/JhPNBj3iXrd84zP9UJDGo77UyPa7J5Rjmlcr/Ra
b+K+intJhfrlHYoy/u/3f4GiYx4=
       "]], 
      Line3DBox[{659, 213, 272, 660, 214, 283, 215, 661, 216, 662, 217, 663, 
       218, 664, 219, 665, 220, 666, 221, 412, 413, 414, 935, 415, 932, 1340, 
       416, 417, 418, 937, 419, 1441, 931, 420, 421, 422, 939, 423, 1440, 930,
        424, 425, 929, 426, 427, 428, 928, 429, 430, 1342, 431, 432, 433, 434,
        1443, 943, 435, 436, 1347, 437, 438, 439, 441, 391, 271, 659}]}, 
     {GrayLevel[0.2], Line3DBox[{945, 1337, 1312, 1343}], 
      Line3DBox[{957, 297, 1273, 319, 907, 328, 300, 1300, 1637, 290, 1299, 
       1274, 1453, 1170, 958, 1454, 1171, 959, 1455, 1172, 960, 1456, 1173, 
       961, 1457, 1174, 962, 1350, 1540, 963, 689, 964, 1458, 1175, 965, 1459,
        1176, 966, 1460, 1177, 967, 1461, 1178, 968, 1462, 1179, 969}], 
      Line3DBox[{970, 1330, 1331, 1260, 1327, 1329, 912, 1323, 1275, 1301, 
       1351, 1627, 971, 697, 972, 1463, 1180, 973, 1464, 1181, 974, 1465, 
       1182, 975, 1466, 1183, 976, 1352, 1541, 977, 1353, 1542, 978, 704, 979,
        1467, 1184, 980, 1468, 1185, 981, 1469, 1186, 982, 1470, 1187, 983}], 
      Line3DBox[{985, 1325, 1328, 1326, 1639, 1437, 984, 1276, 1302, 1277, 
       1628, 986, 1354, 1543, 987, 712, 988, 1471, 1188, 989, 1472, 1189, 990,
        1473, 1190, 991, 1355, 1544, 992, 1356, 1545, 993, 1357, 1546, 994, 
       1358, 1547, 995, 1474, 1191, 996, 1475, 1192, 997, 1476, 1193, 998}], 
      Line3DBox[{1000, 1359, 1548, 999, 1360, 1549, 1001, 1361, 1550, 1002, 
       1362, 1551, 1003, 727, 1004, 1477, 1194, 1005, 1478, 1195, 1006, 1363, 
       1552, 1007, 1364, 1553, 1008, 1365, 1554, 1009, 1366, 1555, 1010, 1479,
        1196, 1011, 1480, 1197, 1012, 1481, 1198, 1013}], 
      Line3DBox[{1015, 1367, 1556, 1014, 1368, 1557, 1016, 1369, 1558, 1017, 
       1370, 1559, 1018, 1371, 1560, 1019, 1482, 1199, 1020, 1483, 1200, 1021,
        1372, 1561, 1022, 1373, 1562, 1023, 1374, 1563, 1024, 1375, 1564, 
       1025, 1376, 1565, 1026, 1484, 1201, 1027, 1485, 1202, 1028}], 
      Line3DBox[{1030, 1377, 1566, 1029, 1378, 1567, 1031, 1379, 1568, 1032, 
       1380, 1569, 1033, 1381, 1570, 1034, 1382, 1571, 1035, 1486, 1203, 1036,
        1383, 1572, 1037, 1384, 1573, 1038, 1385, 1574, 1039, 1386, 1575, 
       1040, 1387, 1576, 1041, 1388, 1577, 1042, 1487, 1204, 1043}], 
      Line3DBox[{1047, 1488, 1205, 1045, 1489, 1206, 1049, 1490, 1207, 1051, 
       1491, 1208, 1053, 1492, 1209, 1055, 1493, 1210, 1057, 1494, 1211, 1059,
        1495, 1212, 1061, 1496, 1213, 1063, 1497, 1214, 1065, 1498, 1215, 
       1067, 1499, 1216, 1069, 1500, 1217, 1071, 1501, 1218, 1073}], 
      Line3DBox[{1072, 1591, 1402, 1070, 1590, 1401, 1068, 1589, 1400, 1066, 
       1588, 1399, 1064, 1587, 1398, 1062, 1586, 1397, 1060, 1585, 1396, 1058,
        1584, 1395, 1056, 1583, 1394, 1054, 1582, 1393, 1052, 1581, 1392, 
       1050, 1580, 1391, 1048, 1579, 1390, 1044, 1578, 1389, 1046}], 
      Line3DBox[{1075, 1403, 1592, 1074, 1502, 1219, 1076, 1503, 1220, 1077, 
       1504, 1221, 1078, 1505, 1222, 1079, 1506, 1223, 1080, 1507, 1224, 1081,
        1404, 1593, 1082, 1508, 1225, 1083, 1509, 1226, 1084, 1510, 1227, 
       1085, 1511, 1228, 1086, 1512, 1229, 1087, 1513, 1230, 1088}], 
      Line3DBox[{1090, 1405, 1594, 1089, 1278, 1279, 1406, 1629, 1091, 1280, 
       1303, 1635, 1231, 1092, 1514, 1232, 1093, 1515, 1233, 1094, 1516, 1234,
        1095, 1517, 1235, 1096, 1407, 1595, 1097, 1408, 1596, 1098, 1518, 
       1236, 1099, 1519, 1237, 1100, 1520, 1238, 1101, 1521, 1239, 1102, 1522,
        1240, 1103}], 
      Line3DBox[{1105, 1409, 1597, 1104, 1261, 1282, 1410, 1622, 1106, 1281, 
       1304, 1411, 1630, 1107, 1523, 1241, 1108, 1524, 1242, 1109, 1525, 1243,
        1110, 1526, 1244, 1111, 1412, 1598, 1112, 1413, 1599, 1113, 1414, 
       1600, 1114, 1527, 1245, 1115, 1528, 1246, 1116, 1529, 1247, 1117, 1530,
        1248, 1118}], 
      Line3DBox[{1120, 1286, 1287, 1632, 1119, 1262, 1283, 1263, 1623, 1121, 
       1346}], Line3DBox[{1131, 1254, 1535, 1130, 1253, 1534, 1129, 1252, 
       1533, 1128, 1605, 1419, 1127, 1604, 1418, 1126, 1603, 1417, 1125, 1602,
        1416, 1124, 1251, 1532, 1123, 1250, 1531, 1122, 1345}], 
      Line3DBox[{1144, 1258, 1538, 1143, 1257, 1537, 1142, 1613, 1426, 1141, 
       1612, 1425, 1140, 1611, 1424, 1139, 1610, 1423, 1138, 1609, 1422, 1137,
        1344}], 
      Line3DBox[{1157, 1298, 1297, 1634, 1156, 1621, 1433, 1155, 1620, 1432, 
       1154, 1619, 1431, 1153, 1644, 1438, 1152, 1643, 1442}], 
      Line3DBox[{1272, 1169, 1271, 1626, 956, 1168, 1452, 955, 1167, 1451, 
       954, 1166, 1450, 953, 1165, 1449, 952, 1164, 1448, 951, 676, 950, 1163,
        1447, 949, 1162, 1446, 948, 1161, 1445, 947, 1160, 1444, 946, 1159, 
       1636, 1305, 1314, 1313, 1320, 1158, 1625, 1436, 1270, 1338}], 
      Line3DBox[{1294, 1316, 1317, 1307, 1319, 1318, 1638, 1145, 1321, 1322, 
       1292, 1339}], 
      Line3DBox[{1324, 1290, 1306, 1291, 1315, 1633, 1132, 1264, 1288, 1265, 
       1624, 1341}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{471, 672, 1444, 472, 684, 1454, 496, 698, 1463, 510, 712, 
       524, 1551, 726, 538, 1559, 740, 552, 1569, 754, 566, 1581, 768, 1491, 
       580, 782, 1504, 594, 796, 1514, 608, 810, 1523, 622, 941}], 
      Line3DBox[{473, 673, 1445, 474, 685, 1455, 497, 699, 1464, 511, 713, 
       1471, 525, 727, 539, 1560, 741, 553, 1570, 755, 567, 1582, 769, 1492, 
       581, 783, 1505, 595, 797, 1515, 609, 811, 1524, 623, 940}], 
      Line3DBox[{475, 674, 1446, 476, 686, 1456, 498, 700, 1465, 512, 714, 
       1472, 526, 728, 1477, 540, 742, 1482, 554, 1571, 756, 568, 1583, 770, 
       1493, 582, 784, 1506, 596, 798, 1516, 610, 812, 1525, 624, 825, 1531, 
       925}], Line3DBox[{477, 675, 1447, 478, 687, 1457, 499, 701, 1466, 513, 
       715, 1473, 527, 729, 1478, 541, 743, 1483, 555, 757, 1486, 569, 1584, 
       771, 1494, 583, 785, 1507, 597, 799, 1517, 611, 813, 1526, 625, 826, 
       1532, 637, 938}], 
      Line3DBox[{8, 950, 23, 962, 38, 976, 53, 991, 68, 1006, 83, 1021, 98, 
       1036, 113, 1058, 1059, 128, 1081, 143, 1096, 158, 1111, 173, 1124, 188,
        1137, 365}], 
      Line3DBox[{479, 676, 480, 1540, 688, 500, 1541, 702, 514, 1544, 716, 
       528, 1552, 730, 542, 1561, 744, 556, 1572, 758, 570, 1585, 772, 1495, 
       584, 1593, 786, 598, 1595, 800, 612, 1598, 814, 626, 1602, 827, 638, 
       1609, 841, 926}], 
      Line3DBox[{481, 677, 1448, 482, 689, 501, 1542, 703, 515, 1545, 717, 
       529, 1553, 731, 543, 1562, 745, 557, 1573, 759, 571, 1586, 773, 1496, 
       585, 787, 1508, 599, 1596, 801, 613, 1599, 815, 627, 1603, 828, 639, 
       1610, 842, 652, 1643, 936}], 
      Line3DBox[{483, 678, 1449, 484, 690, 1458, 502, 704, 516, 1546, 718, 
       530, 1554, 732, 544, 1563, 746, 558, 1574, 760, 572, 1587, 774, 1497, 
       586, 788, 1509, 600, 802, 1518, 614, 1600, 816, 628, 1604, 829, 640, 
       1611, 843, 653, 1644, 920, 927}], 
      Line3DBox[{485, 679, 1450, 486, 691, 1459, 503, 705, 1467, 517, 1547, 
       719, 531, 1555, 733, 545, 1564, 747, 559, 1575, 761, 573, 1588, 775, 
       1498, 587, 789, 1510, 601, 803, 1519, 615, 817, 1527, 629, 1605, 830, 
       641, 1612, 844, 654, 1619, 856, 667}], 
      Line3DBox[{487, 680, 1451, 488, 692, 1460, 504, 706, 1468, 518, 720, 
       1474, 532, 734, 1479, 546, 1565, 748, 560, 1576, 762, 574, 1589, 776, 
       1499, 588, 790, 1511, 602, 804, 1520, 616, 818, 1528, 630, 831, 1533, 
       642, 1613, 845, 655, 1620, 857, 668}], 
      Line3DBox[{489, 681, 1452, 490, 693, 1461, 505, 707, 1469, 519, 721, 
       1475, 533, 735, 1480, 547, 749, 1484, 561, 1577, 763, 575, 1590, 777, 
       1500, 589, 791, 1512, 603, 805, 1521, 617, 819, 1529, 631, 832, 1534, 
       643, 846, 1537, 656, 1621, 858, 669}], 
      Line3DBox[{491, 870, 1626, 871, 492, 694, 1462, 506, 708, 1470, 520, 
       722, 1476, 534, 736, 1481, 548, 750, 1485, 562, 764, 1487, 576, 1591, 
       778, 1501, 590, 792, 1513, 604, 806, 1522, 618, 820, 1530, 632, 833, 
       1535, 644, 847, 1538, 657, 884, 1634, 885, 886}], 
      Line3DBox[{658, 848, 911, 904, 883, 900, 910, 1638, 899, 645, 834, 882, 
       898, 1633, 897, 633, 821, 881, 1632, 880, 619, 807, 1597, 605, 793, 
       1594, 591, 779, 1592, 577, 1488, 765, 1578, 563, 751, 1566, 549, 737, 
       1556, 535, 723, 1548, 521, 709, 913, 1639, 915, 914, 507, 695, 912, 
       905, 909, 908, 493, 682, 907, 903, 872, 923, 934}], 
      Line3DBox[{869, 868, 671, 1636, 470, 873, 683, 1453, 495, 697, 509, 
       1543, 711, 523, 1550, 725, 537, 1558, 739, 551, 1568, 753, 565, 1580, 
       767, 1490, 579, 781, 1503, 593, 877, 795, 1635, 607, 878, 1630, 809, 
       621, 942}], 
      Line3DBox[{922, 902, 924, 859, 887, 890, 891, 1625, 469, 896, 860, 888, 
       892, 1637, 893, 494, 874, 1627, 696, 508, 875, 1628, 710, 522, 1549, 
       724, 536, 1557, 738, 550, 1567, 752, 564, 1579, 766, 1489, 578, 780, 
       1502, 592, 876, 1629, 794, 606, 861, 1622, 808, 620, 862, 1623, 919, 
       916, 863, 1624, 933}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
fwHPR5mP
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["ka", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["sq", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0.01, 10}, {0.01, 3}, {0., 0.32208117711394546`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703510828273769*^9, 
  3.704109056966786*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1ibhx9d0Ba8yNvi+++4rfNrTHN2e8y/ia8U9w8z5p1sMP9XliovuWpdXTVyT
r53GJ9sJ1RZm4NevX5/In2NGHlBY+ISnndiI8GV6L7um6Zc+/wZXXJZ7VGHT
5Kylq8RkVEeTV7lrklvYVXPssceq448/Xj3yyCMU0SDXsDUh9tzE05ix56qG
eb4jQxNwNHBVb7MWNZLLrfsud7a+3MDVrxnRSSI8wTsd76BoxKtD9Yz9IJgy
wE6qsZ62LDd5mZE0aFVfcHOtGgiO2/my3cscTz0UVrEO1aq76Gu9XDfStGnT
bMMVkmnKFrnAuudiuvIMjTlTv1Wlk09fJR6bpHhC3Q11JTs7VwKrMDrFVsNk
zmhpJV82uyIAbc+7sIitvf8S2+RKuj1X0irtFTVpI1NXgvmCww8/XK1YsQKO
B7Ebf8dxKxoLX2A6C/VD5oQ75HJyTWvZPeGGkKSTnt2rG8u4u9m9TUjxnZKX
+NJLL6k99tiDCaqxh12QqE5wiy6PNTHnNasXFzyHWegVMtfUmrQmTeC2Yug5
W0RJntk1dojvhNVuhtezmyHhjvpuLPY0ZEgXl7zUdnwNPSdedV1EUzaoKL+g
/ZUaNLh7iZFApNVziT5M8yXe4GnIoucSh6W/u4qCKG7IapMNGSV/4YNzJ1+P
CQr4+9Da16Gb70/62q7zNF+lmWujT9Sk8FVLk9dmzjBXrbphzrAmr2QHfSUL
pJXslbR4zrrLeyX9lOOe1etrpU7Bmw+NiZjaaZFCd5Mo4/Ofl2yJgJWw//wN
jGf1+kjTLhAKmm4YI08D5lWCPnhxvsvxNcf2+nLmeJrDB6I2AZHGk1mpr91n
MOrSHD7bmGswbHAXO/QxEsTxg0Nd4Hb6Aq/ytFfqEro911uX5ouHAqerLE3m
oKnWjOUX1P5FVpbu9TZqVR9I+aJnyEU3TuNETRKvIq1fzv1F5H6Hi7WQGy/q
Kla1Nn9DbJdtSl7yXblCsO6TDSWBR/41Jr+L5a7UmvxFkGZRgiy56tDYbTrd
qxypnjLPNvBuAirb6psyVW5axbNRJFDZqEukc2jL+0UkQPKZ8Q5hRXv6so0F
TF12i5iMsEmabKOvfYoAIpGkSZ71TDrozN52OfVOz4V1SMuSuS95LqwlqYd8
a70XG7nbiQNIROtD2cIaf+cWlP5C34PJSfsYctafbPpMOcmZ+ka04WsgN8Jn
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
7uwdPOapWFQLPvWsDkrD62zGhdTVOanLxZapAbhkWJjiYOxqR1r69cNtLheW
Zfo9Oz3kjHQu0JDTN9S2xCN+nPSEb1oiJ9Hny0g06LvPIWeRy779irKN2Zjy
cuYk2N+Jl3PyEdTXWdEhWlY70qeQ3xKAmXsl5iPKSJaTXilJVCyyz2MuMvV0
YHwdrl2YpqIv1Pt0kopDTSToo6Jvt1WHigd9p0jFY1gngDUDe0J8thcs+N/Q
ES8C47VjgFeYBMHYbgH7xTt3b1G3JKmIHVQYCmLt5Amb6RqzU3+GfbjaLa7l
fMhaDOtO7tA0BLf4nqEhUOWNo9sSNHwBqGTcIYZ0K0Ex3s80XLB1Sc37Q0k9
c5DukX0C6PcYbgf/n0T6YjiIrhX29zJQ/O9wjNdPwGI0OCam/cEtrj1H18mD
WwyNa7moy1DQpBFzPKHDwszQoss5sDN1602RMpA5GUyezD//QpjIiqRnYgiS
pPSNgKNArp4ipSjgskd6hg2L1012ZXZv2a3udYUmucGqdnDae873MM0GbZpZ
eKYLhpOSjJBBxsZdN7yOXIpw1sEmCPWpJKGGmhAxl1BOnlHTaP9vgYQE5Y3V
O1jwvve3SlSghv8NlfByUDYiJzDHiKHZDTtrb3ZHmkYjSH1i79eJQJ9TgD6n
/byszgQKnf1L/ayBjwG6H3NmRKIyUpbtlkLYa3WEphEqS/Rmj++nU4qrgEIP
7M6pww515RYlCubMz/AnL8NPX4LlefyPu4L1r4GofBMO9Taz5wPsPKMqts6C
aRXTeRUReagZL6GxKoEkREJPBoSCssjDoFjcWqWZcp6p7rho3wyP1plVpSfL
IY8QgArRfLPl2KdpEkdKebXwgYzrjHh/3K0U6J6knI7XoiQMxS/O7zNCUH/S
noenir2mzy4LKJZbIM4HvRK4InJIRZc6C2WThcP5E7yWkEnw7nqcFPuGEU3o
xRSnhprXceOclC6VmPBfsdqZ2QWsgv1O+HYJFIXLMLwSTCae+nOdgMTA7ebx
LequPZldu+oESEj0GqdO+mmFtj39fyrqrF/osgqi1ek6U7+GArYOSyv0ToD9
N8CDUGcweJOXDtM8wYDtSfA2GIitBIH44B7aM922U0Vd8quSWs8JFEwoMlXN
LAHvwK7/ic5IF9epD/Dw4JDWndNpY7F0rpGJhcNnuCbUEsuXWixaYkUusYRW
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
hToF4sYpaWK1q9eO0UE3Eou6nw/H4LtVPXFAi5nBA7vlrtOZWing9JGqIjOg
lXl0ikMqjs8tpdyqqpBrg82UgbYleeRmkJlCoMfpntDxh5krwHlUvHnWOOs5
WwuVEW7cKxFJbJ2ZfUmTSCg/ty8ZbES6yjBbtRtLRjZ0Y4/+dIIp9jskzjJR
Hrac4hC7IhNv3DiCuh90n5neQHdEUMxdluSquSrtgrQo0zjPBCHFtAuCTyYA
JwgwW0LNlqz3IY9kfOjS0TG7INrkrtH8CV6ryCA4g2XNOKghaaRTWUf+oMjT
VsU0igVL7nFaqpN/rqmElDrxZ5pGGORgDwjS56EsjQLkEYg7egEu6Rn4jbB7
jQP5VzF5BTx6iasazYiwRzh5df8eNfJQGNBDeMPX5idTnEhZ2Qgeb/8UcVj8
ndV96eEr/c4zlKbqh6dFkriSHK47N77bW12W4nk5k2SlEou4wF/4zl0aJSGO
ZYr1NqFntEhVfIwRTpx7LXo8S4CvNfEjcqa21wFv9E0jS3kuhHRZCdFvRsnc
hpF2xiWU6JXcgW4yjfG0a5BbjntfOlpwXsTXInkKJuDdo81SZeSre+DjPWNw
weuCVw8bKBPvijRTry0hPs5Ffvj3ijL9lEE+zixw6v9YBuDgEzyTa3esY0gP
hwTsw9kh+u8G9N/uoD9C9PN8tsZ5mOyVgP5wG9f3U0yvgX/vbjV1l47rTRmk
B/OCeOrn8OE8kPyVHZIVO8P77bSA5oE6gQyhCuVJyxbLvckSWJtZLSb6pHup
wLyiYWw6EwqROyrKo6BiW9CaNPeRpJps+aqYe6e41fYshJ4O55LOtZrQQxBn
TX+BRFOpgd0PPSaf4G9cyu2Ybr1jlC+uMNZeLR0liihgKlDjMuwjfDXFYHcj
AZYJW5aNtrgvIdzhku8dA3u5Lw38SICvk0EGP8YXjJX1ujpQP5bivF+VqSuc
qj2AB6f8TA+6wp69036huYCcoBBl6xoWtFN4v2L/NvIC9xse7KbF1C3jHU9g
nABG9siFYywXXmYumF6+tBO4B5wAR/gyM3WKEIEyYUqRp1l2iIBLUWhgUDRV
FJKdYdkSw2a6Ck7/nSlJilLsiFx2sOnGlJZJxJqONjeMKIp1FzDOl5GBug5c
7HyfnfbIBhSxp8ybAgrqdkiMY8pkrnRPXKrSG+2/IUMgYURolOzNI40joKWf
Sp3hXcnNybrSJ8JXHS1E5BacMwo9KSvaqEJEiVyi8PZLEfREEWp86w7EQi0b
bYiCOcVlo4kpETsGWnPvGFzwNt2L7AHiwOr7x7hnZgZnuTppuEMbr4TSBDrn
F2V14LeLMv2TIc/pv9DDpgyJJBLZtU45sQSBuHKQCRRSSNKJDKJDGAH196MN
d9qEO8+BL/kri6iHU76Ew/ya5woC/s5NF9clAMlSKUwOk0pU/7lzBLrKySkV
jziUN90eMtVyIKTitHESLnZS2NSYC6ro48rUKG8alsjNDy8wc/hlE12R9Ozp
uCJ2c8FSuR0lE15F/S7ldRaT2OIaborNQ2+Fk6ero193TWZ6tEseDxRJz4dp
qttHmSUWd2TO807Z6k5JhKEfQs+1dHQxHXCA+oo1xbTncUq7cMU9sjEpMXJp
9+Be7hlDFDNr7xtDXCvjKxHOdM0+kPZcvjxA31Ds07vA4fb7fTPG4tKv4aNo
TufBijji6sxfVtUZv9RMxDOaBwEMMgxrdYV9Tt0usw/u1c0i4wwcMW5B2r3E
tEMJhzkAXLdq37pazklpjF1wopnrti23NEm7dn8mIEyPr0rMB9MoM23mgElN
tGn71R1959SOBM5IXSewt1VWkXTFZEcJEuMWyMBcf/orFIrFbmehS55QovXQ
1kjxJhyp2HrXOJXdciWbUcmUNXaow5Tg8CVKeyRRbdoZOdao4sYwLNzK+Frm
zJYr1yhMJ16YO00oYE8UuTTh70r4WmFZZ7wT/McVSB1gjbFkD4yFLR4c+39B
It3Bfxp38GNRywHfKdJkTmf9sgJNevavqoVWIRKe0nUQB2HMg+nph5lE96VJ
5LoxfZbsvjjqq9GkS88fpjn0TEr+3cPu61bOAbRuFJHSeWp9z3jel1BC/ESm
zE62WQhV5ilIkTiqyEObyI62LWbqErnIKhDmRMlu9pAzx8YbWenGVYcm0eWO
n42EPHF+aljDnFPDkcf9lCSujzwyzuQorZZLeRkKekqub2HdBkvIkgqDGocb
Wrjhge9GVcdSTZxJMqRHXhinY/hCAGC3EjFVXFdD4q4ifDEn9sAYs0RIngKx
R3Zewk+w/fJmCNXrEiqblUIAlR1inbxZSe3zDU0snJoJx9wjpQJ1zq+roLfg
PZELzwX7frBmADPUPmItwSQDMKvQpW7WSWutDTmuMg4Kd/U868Jn2UFhz+lD
rA3JQe1aVTdsX1FX/b7Ej+Aemlxtye6gMEmp0D9CkDINRadqwIg9E49xRUtg
vU6YqF4JnISCI/JS8ZI7t1ecnIAolLxYrsuJk/UpgRlUcXOiy4RSYxVPdUqi
LyVTnVKgDvvUjmyViiPKdNaMZBnlgSPda9JPRXV3Y1o4kxSIxctEkhlIuRWT
HLxP+AOuBd1KTK+hcTP8CV7LSJSEl6FNgDH4KcBXc1YZylQ8YOpxKWNjeEaI
+wjLE35coqobrDNDHYcj5s/9NbLlvN8gW4AzxBg8H5zxHdMOjxzQJmy5F9iy
1LIlJLZ0EFtw9yYbpzNxur4Yd/Ws44JQyj24p5Zy6IJu21lnIDqaZElNWBI0
6jTVkRR3kHJZvSm61902cZI0hVJ6EhbxQf16FBjzJ0wKtUT3v539ThhiihkD
Twd/ILk16k6J0m7mJk4fpEpdAhZl/TaHjAtFNkVDE63DbChTMT33TsLAvIf/
LUKNgLsVUx6nJIljUbZ3jxaelPE1yuQF2OOEwh0KVUwp2f3CGO078EQfkN8+
MJZcCfGkpjmh6UBrl4+lT6ZXYTlu8lAz/oXJQoWZTlWanpXvst9V1HH/XVJ7
cWUa8wPZEajzN0eKwFuiCZ4FKDAqvTQUWW4osgdTZLeWiCjSzgqtXRIML7I6
w908c7D+/9h+LaLQ7mYnggmGq7cqd+JJmufMZDhRSnIi4ume6UZdOizxuLTQ
VFpennYjxsW4VQNcZc/VlPJ8spkyU7PrXbL9lClRpstiDEt0dUy2HzKQVEEg
kyuQHgs8niWwQ/Yid9RTXkaAJFkgvY2J8vYlI8XFjKzq/HNO9wvFL7Zb3myi
U2uFkvTIp2QZUaasPYq+fdLdotnCgT5RqJZ2NfdRoHLfmCIRh6jiWquyq74I
8OxPIo+PIb9TRtrESBsjRR/C7x6m1Q+Pkzp+X+auW7NId8QP8fyF2H3+Aj7O
GaeK0dIO9vrUU0/JXiPPkaqsCvFsLvltRR3zQ1vwg/Nwng98nLh5VV3wW1jg
P7CU5n3Hy8UhAJj8E346pdLMT4ymCtqPaRfpKr0XrMormLnKVjtKbykYj9t3
1nUJM39XKgzLEa3JrtRq3uDJwEyneZnlZkIDBh6CBqYO7sqU85rF/UkOQWO3
EkdvNY+n0gvlERyRHYESubkFO2dXRMk752ChuLDAk00IJZsQ2V4gJwGnizKX
iG9bMjLR4a+DoQKJulKDfqCloyJdX9bPae3I080fSTd/wFkER+2J1os9EVJg
8gr3jDHSj4XfvWPqnqRC0UkqkNLjMOvBsca1scR7UAjLPi3y+LmicBW5Odb0
jD1MH8fBbVkxrgmhOMxlbevGPK5BffDBBzRT4c033xzhTFCwZ/yqWeZO2ryi
jvx+kSd/immGmAuYqZO20P+RwTiQH68bKx6QrSuYuVLmCszF3Ihhro7XtPN+
3XGvqD5t8qPVzCCDE1Mb8XnHrjr/MW/rck8D3gZST9Sa51Y5qUHOODHE3yjQ
JG+duTX1s23thM+mt8sMO+BO38COMIhtf68z2WUgmQ5XdWquOoJTe1HNMu7P
DdMjhm+meGuo0TGBpyTHfOdEY4WqVIqaM9F+VLqkSHKGnPhDljJb9adAM1WD
/W5O+rk+lUoWTMYcqcmyUyc0QlGbZU8uowUZGiYkp5ahgcRnkc5c6Du2fGzC
lS7XrrTCbAVqavyACo1Zi9J28L18R+QNkLImdCbe0nYrxuH32vdW8CMc7ZE0
q8uiA1nHGuIN9ciIiGmK202cOFGde+65au3atT7f7na94ZO0D/uermDCp0q6
nL3odzXh7tQ/aFJhcIh8xeR/Dm8DIm4HpTBFFaPDZVVs0io0EImKa1vUin3s
3BzocDG1MnvLMieLPN3WRgq3WYZG+lEOlriBmUP+Mjt/vCmvNR3ZJmbkJZCJ
3XXMWLYP6E3QVlKTge6I1uJXQkRdzhomha6nT0wX2unj2vAwNTMLT0qRTdLn
jueJUn3HzEdTHpHysKRqqRR16eiyrTPNeM6QecZxoISAo4WdlI0cU2VH6lBR
05TY6ESGRuAiJSviSOP8lAkQ0bT8Q2NLaS8KHCxrsaslLmHm4bEieGVj+m4c
XjDSFIhoUr1JrsIn+q6MNIXtVqa5WvSAE97XeSXO/XvJJZcQQ1EcT5o0CWeJ
CpO8HurJEzEfBOc3xe1OOeUU9frrr/u8v8vr835ZVgd/R9dmHfr9Ek3FjXMw
XPy7qrrk9zX4X6PPOPkiXjFWIa48oI079TSvlwGv70jwejfk9a3Ma1OLaIT0
3w4lV0xd6U8c0JIQ0liGsmQnPdjkShDSfQ0ccshzijqe1zwWfHJ2FrfI0tuZ
6rcQ89jZHrcA0ekvR+fgMtvPbltawk/+Cd3JynTxyAg7PSfLZI3QDJVjGacR
2CFKmr0mkUMetqTHJwFNIzcMXTqq7vGiAb6WpOTJ9peVM53Jbs+Z7VF285fk
GrVo5WTNWENBNh0PjiWhap6xrsWr0M8kNZO+8WFSt+wWAyf+pMYHlkUe5tF3
RgU/ImsfGUefiJJlDyV97q7MrzhT28knn0xeFIPSp59+mjiJMS0ErkGSl0M9
hqLICH733XfV2Wefrfbee28KgwcGBjLVxIhil5xn/6KsDviWfng5Vt3j+Eec
wG0yEPPSLWtCUJwwBS8bU04uOR/IkjMkcuq6TFcjP3cYO9uDW3gcZIta6Yhk
zM7e+KeKmvOHcmFEA1IGXCzpkPLS1LOTTBu53wUy66l9fIstJAtM0b073SFX
BYdmcge//w3MFNdC0uGGpGYeXcNPh5uBzJQQmM4KybPq0VTOlDk8btaMlDL0
DDxJIxLARU8FlilKDDyhakumd8/t+Y7FnwZa6WorcN8YilprHrkb4Ct1dRcd
/jripgX56ws+Tdcdcd0NUkvE5Ui4bHfEdE6xtspMZmbzpyx/A3w19frsXIO8
7YjncEmrmid7qN58801yuq+99lrCrSKln3vuuUKK7c09IyOWGViR7XPmzKHZ
WclDO5lmHRDP+mNVnfFzqqyhujbMNGuOV4njl21puY5Tv+BlY0F0gudmeIDl
ecEl+quOqna975PgfR9lVY2FoLhv9L7XbVtRs35f4mrWBkSPhOixTAlmYDBZ
ZlSVrvzkbKlTecojWOTBtYbdQaJGulc/hdnhdl+u9+Wu/UB8r1XQoVvwgjXK
PPnVLSNNhFsIk5P8hELk0A1dbWlXlOw+jDwsNUrYFnnZPC/3wVPuKJIYNfT0
F7Z7voslPC1KeFog9WtYi/eN00WpKJQ2K+LbouSRiKltaSf7CDnZR8bFWgFr
8hEiLPlWyi9WjqNP5pmRmRWhkBRfNsHPqzeRDLOvfLLk0AyTU+g4DfUgoCVH
++yzz6aZOtSTN4wwXrFiBeW+0ADEnsNrrn6OTnHGH6rq1J+W1b7/FWMNHD0W
EZ+ugRydslWN5ty7bCvNV6wxwAvHrqBHUlzF3lQTCEv6ebekWqZu08ONU9aD
GNJqGZ3yzTtW1Pyty+qKLUo8VLaUN5qBfex4mhqSp2sN9OPUWApfxHNYmvj4
Mp6VyY2CHbYG3Cck7lj3C6Fwphxz1iXj7szghYxPlrnBFmp/HJgSnEU2yWy6
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f$slope$lkstein$mq0", "[", 
      RowBox[{
       SuperscriptBox["sq", "2"], ",", 
       SuperscriptBox["ka", "2"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ka", ",", "0.01", ",", "20"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", "0.01", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.702050270684106*^9, 3.702050330991817*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sq$$ = 6.04, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sq$$], 0.01, 20}}, Typeset`size$$ = {
    450., {127., 135.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sq$960342$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sq$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sq$$, $CellContext`sq$960342$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`f$slope$lkstein$mq0[$CellContext`sq$$^2, \
$CellContext`ka^2], {$CellContext`ka, 0.01, 20}, AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`sq$$, 0.01, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {192., 200.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.703510828379998*^9, 3.704109057343444*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wenkai$lks$mq0$ub", "[", "sq1_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"sq1", "-", "1"}], ")"}], "4"], "/", 
   RowBox[{"(", 
    RowBox[{"18", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"sq1", "-", "2"}], ")"}], "2"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.704112086095208*^9, 3.704112140964973*^9}, {
  3.704115447080574*^9, 3.704115473053246*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wenkai$lks$mq0$ub", "[", 
  SuperscriptBox[
   SubscriptBox["\[Sigma]", "q"], "2"], "]"}]], "Input",
 CellChangeTimes->{{3.704112145710786*^9, 3.7041121505524073`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"], 
  RowBox[{"18", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.704112150865711*^9, 3.7041154762708693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f$slope$lkstein$mq0", "[", 
        RowBox[{
         SuperscriptBox["sq", "2"], ",", 
         SuperscriptBox["ka", "2"]}], "]"}], ",", 
       RowBox[{"wenkai$lks$mq0$ub", "[", 
        SuperscriptBox["sq", "2"], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ka", ",", "0.01", ",", "20"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq", ",", " ", "0.01", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7041119820793037`*^9, 3.7041120839567003`*^9}, {
  3.704112180378064*^9, 3.70411218702798*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sq$$ = 10.48, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sq$$], 0.01, 20}}, Typeset`size$$ = {
    450., {127., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sq$1005195$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sq$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sq$$, $CellContext`sq$1005195$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`f$slope$lkstein$mq0[$CellContext`sq$$^2, \
$CellContext`ka^2], 
         $CellContext`wenkai$lks$mq0$ub[$CellContext`sq$$^2]}, \
{$CellContext`ka, 0.01, 20}, AxesLabel -> Automatic], 
      "Specifications" :> {{$CellContext`sq$$, 0.01, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {192., 200.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7041120315532722`*^9, 3.7041120750191183`*^9}, 
   3.704112188823618*^9, 3.7041154795151443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"f$slope$lkstein$mq0", "[", 
       RowBox[{"sq1", ",", "ka1"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ka1", ",", "0.01", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq1", ",", "0.01", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704109996803824*^9, 3.7041100453822947`*^9}, {
  3.704110188445109*^9, 3.704110189174953*^9}, {3.704110780231566*^9, 
  3.704110781905733*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`sq1$$ = 2.885, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`sq1$$], 0.01, 5}}, Typeset`size$$ = {
    450., {131., 140.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`sq1$995753$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`sq1$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`sq1$$, $CellContext`sq1$995753$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[1/$CellContext`f$slope$lkstein$mq0[$CellContext`sq1$$, \
$CellContext`ka1], {$CellContext`ka1, 0.01, 2}], 
      "Specifications" :> {{$CellContext`sq1$$, 0.01, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {196., 204.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.704110038666253*^9, 3.7041100464757233`*^9}, 
   3.704110191118566*^9, 3.704110783033511*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"f$slope$lkstein$mq0", "[", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Sigma]", "q"], "2"], ",", 
    SuperscriptBox["\[Kappa]", "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.704110354134183*^9, 3.7041103642979403`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Kappa]", "2"], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}]]], "Output",
 CellChangeTimes->{3.7041103655591516`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reci$f$slope$lkstein$mq0", "[", 
   RowBox[{"sq1_", ",", "ka1_"}], "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"f$slope$lkstein$mq0", "[", 
    RowBox[{"sq1", ",", "ka1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7041104455200768`*^9, 3.704110478421768*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reci$f$slope$lkstein$mq0", "[", 
  RowBox[{
   SuperscriptBox[
    SubscriptBox["\[Sigma]", "q"], "2"], ",", 
   SuperscriptBox["\[Kappa]", "2"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7041104804526873`*^9, 3.704110489683608*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Kappa]", "2"], "+", 
      RowBox[{"2", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Kappa]", "2"], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}]]], "Output",
 CellChangeTimes->{3.704110489983039*^9, 3.704111956421419*^9, 
  3.704116061221181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"12", "+", 
      RowBox[{"20", " ", 
       SuperscriptBox["\[Kappa]", "2"]}], "+", 
      RowBox[{"21", " ", 
       SuperscriptBox["\[Kappa]", "4"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Kappa]", "6"]}], "+", 
      SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}], ",", 
   SubscriptBox["\[Sigma]", "q"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7041167175540237`*^9, 3.7041167419014606`*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   SuperscriptBox["\[Kappa]", "6"], " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}]}], "+", 
  RowBox[{"12", " ", 
   SuperscriptBox["\[Kappa]", "4"], " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
  RowBox[{"24", " ", 
   SuperscriptBox["\[Kappa]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SubsuperscriptBox["\[Sigma]", "q", "4"]}], "+", 
  RowBox[{"16", " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}], " ", 
   SubsuperscriptBox["\[Sigma]", "q", "6"]}]}]], "Output",
 CellChangeTimes->{{3.704116709508453*^9, 3.704116742398477*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"reci$f$slope$lkstein$mq0", "[", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "q"], "2"], ",", 
      SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]", ",", "1"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{3.70411090189186*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"12", "+", 
         RowBox[{"48", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"95", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"56", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"13", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         SuperscriptBox["\[Kappa]", "10"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"120", "+", 
         RowBox[{"180", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"122", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"47", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"10", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         SuperscriptBox["\[Kappa]", "10"]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "5"], " ", 
    SqrtBox[
     SuperscriptBox["\[Kappa]", "2"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
     RowBox[{"7", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.7041109023510323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"reci$f$slope$lkstein$mq0", "[", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Sigma]", "q"], "2"], ",", 
         SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "1"}], "}"}]}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ">", "0"}], "&&", 
    RowBox[{"\[Kappa]", ">", "0"}]}], ",", "\[Kappa]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7041109129170027`*^9, 3.704110937373633*^9}, {
  3.704111087602674*^9, 3.7041110905151567`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["#1", "12"], "-", 
          RowBox[{"120", " ", 
           SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"180", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"48", "-", 
             RowBox[{"122", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{"95", "-", 
             RowBox[{"47", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "8"], " ", 
           RowBox[{"(", 
            RowBox[{"56", "-", 
             RowBox[{"10", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"13", "-", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",",
         "2"}], "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Sigma]", "q"], ">", "0"}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704110922506485*^9, 3.7041109652758217`*^9, {3.704111084792802*^9, 
   3.704111091720289*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope$lkstein$mq0$ub", "=", 
  RowBox[{
   RowBox[{"f$slope$lkstein$mq0", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Sigma]", "q"], "2"], ",", 
     SuperscriptBox["\[Kappa]", "2"]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", "->", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["#1", "12"], "-", 
         RowBox[{"120", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"12", "-", 
            RowBox[{"180", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "4"], " ", 
          RowBox[{"(", 
           RowBox[{"48", "-", 
            RowBox[{"122", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "6"], " ", 
          RowBox[{"(", 
           RowBox[{"95", "-", 
            RowBox[{"47", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "8"], " ", 
          RowBox[{"(", 
           RowBox[{"56", "-", 
            RowBox[{"10", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["#1", "10"], " ", 
          RowBox[{"(", 
           RowBox[{"13", "-", 
            SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",", 
       "2"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.704116904290683*^9, 3.7041169245616198`*^9}, {
  3.7041169701989326`*^9, 3.7041170067607117`*^9}, {3.7041170606599283`*^9, 
  3.704117069856764*^9}, {3.704117152972373*^9, 3.7041171552520313`*^9}, {
  3.70411719563369*^9, 3.704117197721078*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["#1", "12"], "-", 
           RowBox[{"120", " ", 
            SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"180", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"48", "-", 
              RowBox[{"122", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"95", "-", 
              RowBox[{"47", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "8"], " ", 
            RowBox[{"(", 
             RowBox[{"56", "-", 
              RowBox[{"10", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "10"], " ", 
            RowBox[{"(", 
             RowBox[{"13", "-", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
         ",", "2"}], "]"}], "2"], ")"}], 
     RowBox[{"5", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["#1", "12"], "-", 
            RowBox[{"120", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"180", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"48", "-", 
               RowBox[{"122", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"95", "-", 
               RowBox[{"47", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"56", "-", 
               RowBox[{"10", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "10"], " ", 
             RowBox[{"(", 
              RowBox[{"13", "-", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
          ",", "2"}], "]"}], "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"12", "+", 
      RowBox[{"20", " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["#1", "12"], "-", 
            RowBox[{"120", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"180", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"48", "-", 
               RowBox[{"122", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"95", "-", 
               RowBox[{"47", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"56", "-", 
               RowBox[{"10", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "10"], " ", 
             RowBox[{"(", 
              RowBox[{"13", "-", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
          ",", "2"}], "]"}], "2"]}], "+", 
      RowBox[{"21", " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["#1", "12"], "-", 
            RowBox[{"120", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"180", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"48", "-", 
               RowBox[{"122", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"95", "-", 
               RowBox[{"47", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"56", "-", 
               RowBox[{"10", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "10"], " ", 
             RowBox[{"(", 
              RowBox[{"13", "-", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
          ",", "2"}], "]"}], "4"]}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["#1", "12"], "-", 
            RowBox[{"120", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"180", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"48", "-", 
               RowBox[{"122", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"95", "-", 
               RowBox[{"47", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"56", "-", 
               RowBox[{"10", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "10"], " ", 
             RowBox[{"(", 
              RowBox[{"13", "-", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
          ",", "2"}], "]"}], "6"]}], "+", 
      SuperscriptBox[
       RowBox[{"Root", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["#1", "12"], "-", 
           RowBox[{"120", " ", 
            SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"180", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "4"], " ", 
            RowBox[{"(", 
             RowBox[{"48", "-", 
              RowBox[{"122", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{"95", "-", 
              RowBox[{"47", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "8"], " ", 
            RowBox[{"(", 
             RowBox[{"56", "-", 
              RowBox[{"10", " ", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["#1", "10"], " ", 
            RowBox[{"(", 
             RowBox[{"13", "-", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
         ",", "2"}], "]"}], "8"]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Root", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["#1", "12"], "-", 
            RowBox[{"120", " ", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"180", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "4"], " ", 
             RowBox[{"(", 
              RowBox[{"48", "-", 
               RowBox[{"122", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "6"], " ", 
             RowBox[{"(", 
              RowBox[{"95", "-", 
               RowBox[{"47", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "8"], " ", 
             RowBox[{"(", 
              RowBox[{"56", "-", 
               RowBox[{"10", " ", 
                SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["#1", "10"], " ", 
             RowBox[{"(", 
              RowBox[{"13", "-", 
               SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], 
          ",", "2"}], "]"}], "2"], "+", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "3"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.70411707158106*^9, 3.704117198542816*^9}]
}, Open  ]],

Cell[TextData[{
 "The following plot shows a tight upper bound of the slope of LKS for any \
value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "q"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.704117308295004*^9, 3.704117347156701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"slope$lkstein$mq0$ub", "/.", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Sigma]", "q"], "\[Rule]", "sq1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"sq1", ",", "0.01", ",", "3"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Sigma]", "q"], ",", "\"\<UB of the slope of LKS\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704117206866928*^9, 3.704117270027843*^9}, {
  3.704117361983343*^9, 3.704117363481203*^9}, {3.7041174211974163`*^9, 
  3.704117441756538*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
3rJuYW1tvR76jAO2p2j4HyYVkyw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     SubscriptBox["\[Sigma]", "q"], TraditionalForm], 
    FormBox["\"UB of the slope of LKS\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.01, 3}, {0., 1.5707440879131167`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.704117217848028*^9, 3.704117223250987*^9}, {
   3.70411725777985*^9, 3.704117272643806*^9}, 3.704117366095516*^9, {
   3.704117427444811*^9, 
   3.7041174446583633`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8+eo\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.704117045984666*^9, 3.704117148672357*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Root", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["#1", "12"], "-", 
      RowBox[{"120", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"12", "-", 
         RowBox[{"180", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"48", "-", 
         RowBox[{"122", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "6"], " ", 
       RowBox[{"(", 
        RowBox[{"95", "-", 
         RowBox[{"47", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"56", "-", 
         RowBox[{"10", " ", 
          SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["#1", "10"], " ", 
       RowBox[{"(", 
        RowBox[{"13", "-", 
         SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",", 
    "2"}], "]"}], "[", "2", "]"}]], "Output",
 CellChangeTimes->{{3.704117127291222*^9, 3.7041171387869053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"reci$f$slope$lkstein$mq0", "[", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "q"], "2"], ",", 
      SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]", ",", "2"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7041105072471933`*^9, 3.7041105476337*^9}, {
  3.7041107093580933`*^9, 3.70411071923193*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Kappa]", "8"], " ", 
       RowBox[{"(", 
        RowBox[{"300", "+", 
         RowBox[{"1280", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"1059", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"360", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"53", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[Kappa]", "10"]}]}], ")"}]}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Kappa]", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"192", "+", 
         RowBox[{"216", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"660", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"514", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"159", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         RowBox[{"18", " ", 
          SuperscriptBox["\[Kappa]", "10"]}], "+", 
         SuperscriptBox["\[Kappa]", "12"]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["\[Kappa]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "576"}], "-", 
         RowBox[{"748", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "-", 
         RowBox[{"396", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "-", 
         RowBox[{"87", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "-", 
         SuperscriptBox["\[Kappa]", "8"], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[Kappa]", "10"]}]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "4"]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"2880", "+", 
         RowBox[{"4440", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"2956", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"1098", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"249", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         RowBox[{"34", " ", 
          SuperscriptBox["\[Kappa]", "10"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["\[Kappa]", "12"]}]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "6"]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "6"], " ", 
    SqrtBox[
     SuperscriptBox["\[Kappa]", "2"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
     RowBox[{"9", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "4"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7041105005164413`*^9, 3.7041105482141533`*^9}, 
   3.704110719780669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"reci$f$slope$lkstein$mq0", "[", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Sigma]", "q"], "2"], ",", 
        SuperscriptBox["\[Kappa]", "2"]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", "2"}], "}"}]}], "]"}], ">", "0"}], "&&", 
   RowBox[{
    SubscriptBox["\[Sigma]", "q"], ">", "0"}], "&&", 
   RowBox[{"\[Kappa]", ">", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704110832641781*^9, 3.7041108661548157`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", 
     SubscriptBox["\[Sigma]", "q"], "<", "1"}], "&&", 
    RowBox[{"\[Kappa]", ">", "0"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Sigma]", "q"], ">", "1"}], "&&", 
    RowBox[{"\[Kappa]", ">", "0"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7041108381696377`*^9, 3.704110866833035*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"f$eff$mq0$le1", ",", "\[Kappa]"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.7029108001633253`*^9, 3.702910802772977*^9}, {
  3.702964012496283*^9, 3.70296401745111*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"12", "+", 
         RowBox[{"48", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"95", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"56", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"13", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         SuperscriptBox["\[Kappa]", "10"]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"120", "+", 
         RowBox[{"180", " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "+", 
         RowBox[{"122", " ", 
          SuperscriptBox["\[Kappa]", "4"]}], "+", 
         RowBox[{"47", " ", 
          SuperscriptBox["\[Kappa]", "6"]}], "+", 
         RowBox[{"10", " ", 
          SuperscriptBox["\[Kappa]", "8"]}], "+", 
         SuperscriptBox["\[Kappa]", "10"]}], ")"}], " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[Kappa]", "5"], " ", 
    SqrtBox[
     SuperscriptBox["\[Kappa]", "2"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "+", 
       SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
     RowBox[{"7", "/", "2"}]], " ", 
    SqrtBox[
     SubsuperscriptBox["\[Sigma]", "q", "2"]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"5", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
      RowBox[{"6", " ", 
       SubsuperscriptBox["\[Sigma]", "q", "4"]}], "+", 
      SubsuperscriptBox["\[Sigma]", "q", "6"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.703510861709255*^9, 3.70410908714515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"f$eff$mq0$le1", ",", "\[Kappa]"}], "]"}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{"\[Kappa]", ">", "0"}], ",", 
     RowBox[{
      SubscriptBox["\[Sigma]", "q"], ">", "0"}]}], "}"}], ",", "\[Kappa]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7029650464716988`*^9, 3.702965074159206*^9}, {
  3.702965891287024*^9, 3.702965892873953*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["#1", "12"], "-", 
          RowBox[{"120", " ", 
           SubsuperscriptBox["\[Sigma]", "q", "2"]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"180", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"48", "-", 
             RowBox[{"122", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "6"], " ", 
           RowBox[{"(", 
            RowBox[{"95", "-", 
             RowBox[{"47", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "8"], " ", 
           RowBox[{"(", 
            RowBox[{"56", "-", 
             RowBox[{"10", " ", 
              SubsuperscriptBox["\[Sigma]", "q", "2"]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["#1", "10"], " ", 
           RowBox[{"(", 
            RowBox[{"13", "-", 
             SubsuperscriptBox["\[Sigma]", "q", "2"]}], ")"}]}]}], "&"}], ",",
         "2"}], "]"}], ",", 
      RowBox[{
       RowBox[{"0", "<", 
        SubscriptBox["\[Sigma]", "q"], "<", "1"}], "||", 
       RowBox[{
        SubscriptBox["\[Sigma]", "q"], ">", "1"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.703510864933566*^9, 3.704109090175692*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assume variance of q is 1", "Section",
 CellChangeTimes->{{3.7012681651224117`*^9, 3.701268170909956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f$slope$lkstein$sq1", "[", 
   RowBox[{"mq1_", ",", "ka1_"}], "]"}], ":=", 
  RowBox[{"f$slope$lkstein", "[", 
   RowBox[{"mq1", ",", "1", ",", "ka1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702020356994155*^9, 3.702020383191504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slope$lkstein$sq1", "=", 
  RowBox[{"f$slope$lkstein$sq1", "[", 
   RowBox[{
    SubscriptBox["\[Mu]", "q"], ",", 
    SuperscriptBox["\[Kappa]", "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.701268351734474*^9, 3.7012683680957947`*^9}, {
  3.701330830358469*^9, 3.70133083540806*^9}, {3.701330971469057*^9, 
  3.701330973068551*^9}, {3.701331009436223*^9, 3.7013310478673964`*^9}, {
  3.7013311464428883`*^9, 3.7013311472041407`*^9}, {3.701331195653762*^9, 
  3.70133120086587*^9}, {3.7013313244394503`*^9, 3.701331369440819*^9}, {
  3.701331606361569*^9, 3.701331607385867*^9}, {3.701338941522876*^9, 
  3.70133898594241*^9}, {3.701684005349908*^9, 3.701684019948061*^9}, {
  3.701684103735745*^9, 3.701684113669433*^9}, {3.702020395141897*^9, 
  3.702020415053389*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[Kappa]", "2"], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"4", "+", 
      SuperscriptBox["\[Kappa]", "2"]}], ")"}], 
    RowBox[{"5", "/", "2"}]], " ", 
   SubsuperscriptBox["\[Mu]", "q", "4"]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     SuperscriptBox["\[Kappa]", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"12", "+", 
     RowBox[{"20", " ", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"21", " ", 
      SuperscriptBox["\[Kappa]", "4"]}], "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Kappa]", "6"]}], "+", 
     SuperscriptBox["\[Kappa]", "8"]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.703510829753927*^9, 3.70410905808064*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.701233412807232*^9, 3.701233413006846*^9}, {
  3.701235313073147*^9, 3.701235313497527*^9}}]
}, Open  ]]
},
WindowSize->{1076, 1853},
WindowMargins->{{0, Automatic}, {24, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 217, 3, 81, "Section"],
Cell[800, 27, 271, 5, 67, "Text"],
Cell[CellGroupData[{
Cell[1096, 36, 571, 16, 38, "Input"],
Cell[1670, 54, 409, 13, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2116, 72, 270, 6, 40, "Input"],
Cell[2389, 80, 122, 2, 58, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2560, 88, 192, 6, 81, "Section"],
Cell[2755, 96, 92, 1, 38, "Input"],
Cell[2850, 99, 245, 7, 43, "Text"],
Cell[CellGroupData[{
Cell[3120, 110, 156, 4, 64, "Input"],
Cell[3279, 116, 92, 1, 56, "Output"],
Cell[3374, 119, 92, 1, 56, "Output"]
}, Open  ]],
Cell[3481, 123, 1728, 52, 146, "Input"],
Cell[5212, 177, 1149, 32, 64, "Input"],
Cell[CellGroupData[{
Cell[6386, 213, 354, 7, 38, "Input"],
Cell[6743, 222, 999, 31, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7779, 258, 474, 12, 38, "Input"],
Cell[8256, 272, 2155, 68, 191, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10448, 345, 407, 10, 38, "Input"],
Cell[10858, 357, 823, 25, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11718, 387, 257, 5, 38, "Input"],
Cell[11978, 394, 838, 27, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12853, 426, 253, 6, 38, "Input"],
Cell[13109, 434, 1015, 31, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14161, 470, 713, 18, 38, "Input"],
Cell[14877, 490, 1724, 54, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16638, 549, 518, 14, 38, "Input"],
Cell[17159, 565, 638, 20, 101, "Output"]
}, Open  ]],
Cell[17812, 588, 92, 1, 38, "Input"],
Cell[CellGroupData[{
Cell[17929, 593, 155, 3, 38, "Input"],
Cell[18087, 598, 639, 20, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18763, 623, 270, 7, 44, "Input"],
Cell[19036, 632, 1308, 42, 101, "Output"]
}, Open  ]],
Cell[20359, 677, 538, 14, 64, "Input"],
Cell[CellGroupData[{
Cell[20922, 695, 333, 8, 44, "Input"],
Cell[21258, 705, 1384, 45, 101, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22691, 756, 102, 1, 81, "Section"],
Cell[22796, 759, 373, 8, 38, "Input"],
Cell[CellGroupData[{
Cell[23194, 771, 342, 8, 44, "Input"],
Cell[23539, 781, 1047, 34, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24623, 820, 183, 5, 44, "Input"],
Cell[24809, 827, 1047, 34, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25893, 866, 311, 9, 44, "Input"],
Cell[26207, 877, 839, 25, 109, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27083, 907, 354, 9, 44, "Input"],
Cell[27440, 918, 92, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27569, 924, 364, 9, 44, "Input"],
Cell[27936, 935, 94, 1, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28067, 941, 433, 12, 44, "Input"],
Cell[28503, 955, 2339, 66, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30879, 1026, 216, 5, 38, "Input"],
Cell[31098, 1033, 4015, 108, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35150, 1146, 414, 10, 38, "Input"],
Cell[35567, 1158, 1659, 46, 92, "Output"]
}, Open  ]],
Cell[37241, 1207, 1321, 39, 99, "Input"],
Cell[CellGroupData[{
Cell[38587, 1250, 137, 2, 38, "Input"],
Cell[38727, 1254, 1278, 38, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40042, 1297, 620, 16, 64, "Input"],
Cell[40665, 1315, 14349, 249, 313, 3288, 66, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55051, 1569, 427, 9, 38, "Input"],
Cell[55481, 1580, 3180, 91, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58698, 1676, 636, 16, 74, "Input"],
Cell[59337, 1694, 164198, 2699, 400, 95775, 1576, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223572, 4398, 535, 14, 74, "Input"],
Cell[224110, 4414, 1714, 34, 430, "Output"]
}, Open  ]],
Cell[225839, 4451, 442, 13, 45, "Input"],
Cell[CellGroupData[{
Cell[226306, 4468, 192, 4, 44, "Input"],
Cell[226501, 4474, 415, 13, 100, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226953, 4492, 733, 19, 74, "Input"],
Cell[227689, 4513, 1841, 37, 430, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229567, 4555, 549, 14, 64, "Input"],
Cell[230119, 4571, 1746, 35, 438, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231902, 4611, 278, 7, 45, "Input"],
Cell[232183, 4620, 1025, 33, 101, "Output"]
}, Open  ]],
Cell[233223, 4656, 298, 7, 38, "Input"],
Cell[CellGroupData[{
Cell[233546, 4667, 256, 6, 44, "Input"],
Cell[233805, 4675, 1070, 34, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234912, 4714, 734, 21, 44, "Input"],
Cell[235649, 4737, 1703, 48, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237389, 4790, 387, 12, 44, "Input"],
Cell[237779, 4804, 1800, 54, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239616, 4863, 677, 18, 44, "Input"],
Cell[240296, 4883, 1712, 48, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242045, 4936, 1889, 50, 134, "Input"],
Cell[243937, 4988, 10923, 295, 458, "Output"]
}, Open  ]],
Cell[254875, 5286, 300, 9, 43, "Text"],
Cell[CellGroupData[{
Cell[255200, 5299, 646, 17, 64, "Input"],
Cell[255849, 5318, 25472, 432, 285, 13628, 236, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281358, 5755, 92, 1, 38, "Input"],
Cell[281453, 5758, 1318, 39, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282808, 5802, 483, 14, 44, "Input"],
Cell[283294, 5818, 3041, 84, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286372, 5907, 576, 16, 44, "Input"],
Cell[286951, 5925, 403, 12, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287391, 5942, 268, 7, 38, "Input"],
Cell[287662, 5951, 2545, 74, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290244, 6030, 477, 14, 38, "Input"],
Cell[290724, 6046, 1760, 49, 92, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292533, 6101, 112, 1, 81, "Section"],
Cell[292648, 6104, 272, 6, 38, "Input"],
Cell[CellGroupData[{
Cell[292945, 6114, 799, 14, 44, "Input"],
Cell[293747, 6130, 841, 26, 101, "Output"]
}, Open  ]],
Cell[294603, 6159, 141, 2, 38, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
